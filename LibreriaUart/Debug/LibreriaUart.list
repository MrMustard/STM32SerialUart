
LibreriaUart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008ef4  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004bc  08008fb0  08008fb0  00018fb0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800946c  0800946c  000209b8  2**0
                  CONTENTS
  4 .ARM          00000008  0800946c  0800946c  0001946c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009474  08009474  000209b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08009474  08009474  00019474  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800947c  0800947c  0001947c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000009b8  20000000  08009480  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000130  200009b8  08009e38  000209b8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000ae8  08009e38  00020ae8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001214a  00000000  00000000  000209e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002bf0  00000000  00000000  00032b2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00007192  00000000  00000000  0003571a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000878  00000000  00000000  0003c8b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000db0  00000000  00000000  0003d128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00015c5d  00000000  00000000  0003ded8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000f6ac  00000000  00000000  00053b35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00080ee1  00000000  00000000  000631e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000e40c2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000029bc  00000000  00000000  000e4118  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	200009b8 	.word	0x200009b8
 80000d8:	00000000 	.word	0x00000000
 80000dc:	08008f94 	.word	0x08008f94

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	200009bc 	.word	0x200009bc
 80000fc:	08008f94 	.word	0x08008f94

08000100 <strlen>:
 8000100:	2300      	movs	r3, #0
 8000102:	5cc2      	ldrb	r2, [r0, r3]
 8000104:	3301      	adds	r3, #1
 8000106:	2a00      	cmp	r2, #0
 8000108:	d1fb      	bne.n	8000102 <strlen+0x2>
 800010a:	1e58      	subs	r0, r3, #1
 800010c:	4770      	bx	lr
	...

08000110 <__gnu_thumb1_case_uqi>:
 8000110:	b402      	push	{r1}
 8000112:	4671      	mov	r1, lr
 8000114:	0849      	lsrs	r1, r1, #1
 8000116:	0049      	lsls	r1, r1, #1
 8000118:	5c09      	ldrb	r1, [r1, r0]
 800011a:	0049      	lsls	r1, r1, #1
 800011c:	448e      	add	lr, r1
 800011e:	bc02      	pop	{r1}
 8000120:	4770      	bx	lr
 8000122:	46c0      	nop			; (mov r8, r8)

08000124 <__gnu_thumb1_case_uhi>:
 8000124:	b403      	push	{r0, r1}
 8000126:	4671      	mov	r1, lr
 8000128:	0849      	lsrs	r1, r1, #1
 800012a:	0040      	lsls	r0, r0, #1
 800012c:	0049      	lsls	r1, r1, #1
 800012e:	5a09      	ldrh	r1, [r1, r0]
 8000130:	0049      	lsls	r1, r1, #1
 8000132:	448e      	add	lr, r1
 8000134:	bc03      	pop	{r0, r1}
 8000136:	4770      	bx	lr

08000138 <__udivsi3>:
 8000138:	2200      	movs	r2, #0
 800013a:	0843      	lsrs	r3, r0, #1
 800013c:	428b      	cmp	r3, r1
 800013e:	d374      	bcc.n	800022a <__udivsi3+0xf2>
 8000140:	0903      	lsrs	r3, r0, #4
 8000142:	428b      	cmp	r3, r1
 8000144:	d35f      	bcc.n	8000206 <__udivsi3+0xce>
 8000146:	0a03      	lsrs	r3, r0, #8
 8000148:	428b      	cmp	r3, r1
 800014a:	d344      	bcc.n	80001d6 <__udivsi3+0x9e>
 800014c:	0b03      	lsrs	r3, r0, #12
 800014e:	428b      	cmp	r3, r1
 8000150:	d328      	bcc.n	80001a4 <__udivsi3+0x6c>
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d30d      	bcc.n	8000174 <__udivsi3+0x3c>
 8000158:	22ff      	movs	r2, #255	; 0xff
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	ba12      	rev	r2, r2
 800015e:	0c03      	lsrs	r3, r0, #16
 8000160:	428b      	cmp	r3, r1
 8000162:	d302      	bcc.n	800016a <__udivsi3+0x32>
 8000164:	1212      	asrs	r2, r2, #8
 8000166:	0209      	lsls	r1, r1, #8
 8000168:	d065      	beq.n	8000236 <__udivsi3+0xfe>
 800016a:	0b03      	lsrs	r3, r0, #12
 800016c:	428b      	cmp	r3, r1
 800016e:	d319      	bcc.n	80001a4 <__udivsi3+0x6c>
 8000170:	e000      	b.n	8000174 <__udivsi3+0x3c>
 8000172:	0a09      	lsrs	r1, r1, #8
 8000174:	0bc3      	lsrs	r3, r0, #15
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x46>
 800017a:	03cb      	lsls	r3, r1, #15
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b83      	lsrs	r3, r0, #14
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x52>
 8000186:	038b      	lsls	r3, r1, #14
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b43      	lsrs	r3, r0, #13
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x5e>
 8000192:	034b      	lsls	r3, r1, #13
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0b03      	lsrs	r3, r0, #12
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x6a>
 800019e:	030b      	lsls	r3, r1, #12
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0ac3      	lsrs	r3, r0, #11
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x76>
 80001aa:	02cb      	lsls	r3, r1, #11
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a83      	lsrs	r3, r0, #10
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x82>
 80001b6:	028b      	lsls	r3, r1, #10
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a43      	lsrs	r3, r0, #9
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x8e>
 80001c2:	024b      	lsls	r3, r1, #9
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	0a03      	lsrs	r3, r0, #8
 80001ca:	428b      	cmp	r3, r1
 80001cc:	d301      	bcc.n	80001d2 <__udivsi3+0x9a>
 80001ce:	020b      	lsls	r3, r1, #8
 80001d0:	1ac0      	subs	r0, r0, r3
 80001d2:	4152      	adcs	r2, r2
 80001d4:	d2cd      	bcs.n	8000172 <__udivsi3+0x3a>
 80001d6:	09c3      	lsrs	r3, r0, #7
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xa8>
 80001dc:	01cb      	lsls	r3, r1, #7
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0983      	lsrs	r3, r0, #6
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xb4>
 80001e8:	018b      	lsls	r3, r1, #6
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0943      	lsrs	r3, r0, #5
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xc0>
 80001f4:	014b      	lsls	r3, r1, #5
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	0903      	lsrs	r3, r0, #4
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xcc>
 8000200:	010b      	lsls	r3, r1, #4
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	08c3      	lsrs	r3, r0, #3
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xd8>
 800020c:	00cb      	lsls	r3, r1, #3
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0883      	lsrs	r3, r0, #2
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xe4>
 8000218:	008b      	lsls	r3, r1, #2
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	0843      	lsrs	r3, r0, #1
 8000220:	428b      	cmp	r3, r1
 8000222:	d301      	bcc.n	8000228 <__udivsi3+0xf0>
 8000224:	004b      	lsls	r3, r1, #1
 8000226:	1ac0      	subs	r0, r0, r3
 8000228:	4152      	adcs	r2, r2
 800022a:	1a41      	subs	r1, r0, r1
 800022c:	d200      	bcs.n	8000230 <__udivsi3+0xf8>
 800022e:	4601      	mov	r1, r0
 8000230:	4152      	adcs	r2, r2
 8000232:	4610      	mov	r0, r2
 8000234:	4770      	bx	lr
 8000236:	e7ff      	b.n	8000238 <__udivsi3+0x100>
 8000238:	b501      	push	{r0, lr}
 800023a:	2000      	movs	r0, #0
 800023c:	f000 f8f0 	bl	8000420 <__aeabi_idiv0>
 8000240:	bd02      	pop	{r1, pc}
 8000242:	46c0      	nop			; (mov r8, r8)

08000244 <__aeabi_uidivmod>:
 8000244:	2900      	cmp	r1, #0
 8000246:	d0f7      	beq.n	8000238 <__udivsi3+0x100>
 8000248:	e776      	b.n	8000138 <__udivsi3>
 800024a:	4770      	bx	lr

0800024c <__divsi3>:
 800024c:	4603      	mov	r3, r0
 800024e:	430b      	orrs	r3, r1
 8000250:	d47f      	bmi.n	8000352 <__divsi3+0x106>
 8000252:	2200      	movs	r2, #0
 8000254:	0843      	lsrs	r3, r0, #1
 8000256:	428b      	cmp	r3, r1
 8000258:	d374      	bcc.n	8000344 <__divsi3+0xf8>
 800025a:	0903      	lsrs	r3, r0, #4
 800025c:	428b      	cmp	r3, r1
 800025e:	d35f      	bcc.n	8000320 <__divsi3+0xd4>
 8000260:	0a03      	lsrs	r3, r0, #8
 8000262:	428b      	cmp	r3, r1
 8000264:	d344      	bcc.n	80002f0 <__divsi3+0xa4>
 8000266:	0b03      	lsrs	r3, r0, #12
 8000268:	428b      	cmp	r3, r1
 800026a:	d328      	bcc.n	80002be <__divsi3+0x72>
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d30d      	bcc.n	800028e <__divsi3+0x42>
 8000272:	22ff      	movs	r2, #255	; 0xff
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	ba12      	rev	r2, r2
 8000278:	0c03      	lsrs	r3, r0, #16
 800027a:	428b      	cmp	r3, r1
 800027c:	d302      	bcc.n	8000284 <__divsi3+0x38>
 800027e:	1212      	asrs	r2, r2, #8
 8000280:	0209      	lsls	r1, r1, #8
 8000282:	d065      	beq.n	8000350 <__divsi3+0x104>
 8000284:	0b03      	lsrs	r3, r0, #12
 8000286:	428b      	cmp	r3, r1
 8000288:	d319      	bcc.n	80002be <__divsi3+0x72>
 800028a:	e000      	b.n	800028e <__divsi3+0x42>
 800028c:	0a09      	lsrs	r1, r1, #8
 800028e:	0bc3      	lsrs	r3, r0, #15
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x4c>
 8000294:	03cb      	lsls	r3, r1, #15
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b83      	lsrs	r3, r0, #14
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x58>
 80002a0:	038b      	lsls	r3, r1, #14
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b43      	lsrs	r3, r0, #13
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x64>
 80002ac:	034b      	lsls	r3, r1, #13
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0b03      	lsrs	r3, r0, #12
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x70>
 80002b8:	030b      	lsls	r3, r1, #12
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0ac3      	lsrs	r3, r0, #11
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x7c>
 80002c4:	02cb      	lsls	r3, r1, #11
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a83      	lsrs	r3, r0, #10
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x88>
 80002d0:	028b      	lsls	r3, r1, #10
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a43      	lsrs	r3, r0, #9
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0x94>
 80002dc:	024b      	lsls	r3, r1, #9
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	0a03      	lsrs	r3, r0, #8
 80002e4:	428b      	cmp	r3, r1
 80002e6:	d301      	bcc.n	80002ec <__divsi3+0xa0>
 80002e8:	020b      	lsls	r3, r1, #8
 80002ea:	1ac0      	subs	r0, r0, r3
 80002ec:	4152      	adcs	r2, r2
 80002ee:	d2cd      	bcs.n	800028c <__divsi3+0x40>
 80002f0:	09c3      	lsrs	r3, r0, #7
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xae>
 80002f6:	01cb      	lsls	r3, r1, #7
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0983      	lsrs	r3, r0, #6
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xba>
 8000302:	018b      	lsls	r3, r1, #6
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0943      	lsrs	r3, r0, #5
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xc6>
 800030e:	014b      	lsls	r3, r1, #5
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	0903      	lsrs	r3, r0, #4
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xd2>
 800031a:	010b      	lsls	r3, r1, #4
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	08c3      	lsrs	r3, r0, #3
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xde>
 8000326:	00cb      	lsls	r3, r1, #3
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0883      	lsrs	r3, r0, #2
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xea>
 8000332:	008b      	lsls	r3, r1, #2
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	0843      	lsrs	r3, r0, #1
 800033a:	428b      	cmp	r3, r1
 800033c:	d301      	bcc.n	8000342 <__divsi3+0xf6>
 800033e:	004b      	lsls	r3, r1, #1
 8000340:	1ac0      	subs	r0, r0, r3
 8000342:	4152      	adcs	r2, r2
 8000344:	1a41      	subs	r1, r0, r1
 8000346:	d200      	bcs.n	800034a <__divsi3+0xfe>
 8000348:	4601      	mov	r1, r0
 800034a:	4152      	adcs	r2, r2
 800034c:	4610      	mov	r0, r2
 800034e:	4770      	bx	lr
 8000350:	e05d      	b.n	800040e <__divsi3+0x1c2>
 8000352:	0fca      	lsrs	r2, r1, #31
 8000354:	d000      	beq.n	8000358 <__divsi3+0x10c>
 8000356:	4249      	negs	r1, r1
 8000358:	1003      	asrs	r3, r0, #32
 800035a:	d300      	bcc.n	800035e <__divsi3+0x112>
 800035c:	4240      	negs	r0, r0
 800035e:	4053      	eors	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	469c      	mov	ip, r3
 8000364:	0903      	lsrs	r3, r0, #4
 8000366:	428b      	cmp	r3, r1
 8000368:	d32d      	bcc.n	80003c6 <__divsi3+0x17a>
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d312      	bcc.n	8000396 <__divsi3+0x14a>
 8000370:	22fc      	movs	r2, #252	; 0xfc
 8000372:	0189      	lsls	r1, r1, #6
 8000374:	ba12      	rev	r2, r2
 8000376:	0a03      	lsrs	r3, r0, #8
 8000378:	428b      	cmp	r3, r1
 800037a:	d30c      	bcc.n	8000396 <__divsi3+0x14a>
 800037c:	0189      	lsls	r1, r1, #6
 800037e:	1192      	asrs	r2, r2, #6
 8000380:	428b      	cmp	r3, r1
 8000382:	d308      	bcc.n	8000396 <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d304      	bcc.n	8000396 <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	d03a      	beq.n	8000406 <__divsi3+0x1ba>
 8000390:	1192      	asrs	r2, r2, #6
 8000392:	e000      	b.n	8000396 <__divsi3+0x14a>
 8000394:	0989      	lsrs	r1, r1, #6
 8000396:	09c3      	lsrs	r3, r0, #7
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x154>
 800039c:	01cb      	lsls	r3, r1, #7
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0983      	lsrs	r3, r0, #6
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x160>
 80003a8:	018b      	lsls	r3, r1, #6
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0943      	lsrs	r3, r0, #5
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x16c>
 80003b4:	014b      	lsls	r3, r1, #5
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	0903      	lsrs	r3, r0, #4
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x178>
 80003c0:	010b      	lsls	r3, r1, #4
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	08c3      	lsrs	r3, r0, #3
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x184>
 80003cc:	00cb      	lsls	r3, r1, #3
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	0883      	lsrs	r3, r0, #2
 80003d4:	428b      	cmp	r3, r1
 80003d6:	d301      	bcc.n	80003dc <__divsi3+0x190>
 80003d8:	008b      	lsls	r3, r1, #2
 80003da:	1ac0      	subs	r0, r0, r3
 80003dc:	4152      	adcs	r2, r2
 80003de:	d2d9      	bcs.n	8000394 <__divsi3+0x148>
 80003e0:	0843      	lsrs	r3, r0, #1
 80003e2:	428b      	cmp	r3, r1
 80003e4:	d301      	bcc.n	80003ea <__divsi3+0x19e>
 80003e6:	004b      	lsls	r3, r1, #1
 80003e8:	1ac0      	subs	r0, r0, r3
 80003ea:	4152      	adcs	r2, r2
 80003ec:	1a41      	subs	r1, r0, r1
 80003ee:	d200      	bcs.n	80003f2 <__divsi3+0x1a6>
 80003f0:	4601      	mov	r1, r0
 80003f2:	4663      	mov	r3, ip
 80003f4:	4152      	adcs	r2, r2
 80003f6:	105b      	asrs	r3, r3, #1
 80003f8:	4610      	mov	r0, r2
 80003fa:	d301      	bcc.n	8000400 <__divsi3+0x1b4>
 80003fc:	4240      	negs	r0, r0
 80003fe:	2b00      	cmp	r3, #0
 8000400:	d500      	bpl.n	8000404 <__divsi3+0x1b8>
 8000402:	4249      	negs	r1, r1
 8000404:	4770      	bx	lr
 8000406:	4663      	mov	r3, ip
 8000408:	105b      	asrs	r3, r3, #1
 800040a:	d300      	bcc.n	800040e <__divsi3+0x1c2>
 800040c:	4240      	negs	r0, r0
 800040e:	b501      	push	{r0, lr}
 8000410:	2000      	movs	r0, #0
 8000412:	f000 f805 	bl	8000420 <__aeabi_idiv0>
 8000416:	bd02      	pop	{r1, pc}

08000418 <__aeabi_idivmod>:
 8000418:	2900      	cmp	r1, #0
 800041a:	d0f8      	beq.n	800040e <__divsi3+0x1c2>
 800041c:	e716      	b.n	800024c <__divsi3>
 800041e:	4770      	bx	lr

08000420 <__aeabi_idiv0>:
 8000420:	4770      	bx	lr
 8000422:	46c0      	nop			; (mov r8, r8)

08000424 <__aeabi_cdrcmple>:
 8000424:	4684      	mov	ip, r0
 8000426:	1c10      	adds	r0, r2, #0
 8000428:	4662      	mov	r2, ip
 800042a:	468c      	mov	ip, r1
 800042c:	1c19      	adds	r1, r3, #0
 800042e:	4663      	mov	r3, ip
 8000430:	e000      	b.n	8000434 <__aeabi_cdcmpeq>
 8000432:	46c0      	nop			; (mov r8, r8)

08000434 <__aeabi_cdcmpeq>:
 8000434:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000436:	f001 f81f 	bl	8001478 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	d401      	bmi.n	8000442 <__aeabi_cdcmpeq+0xe>
 800043e:	2100      	movs	r1, #0
 8000440:	42c8      	cmn	r0, r1
 8000442:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000444 <__aeabi_dcmpeq>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f000 ff69 	bl	800131c <__eqdf2>
 800044a:	4240      	negs	r0, r0
 800044c:	3001      	adds	r0, #1
 800044e:	bd10      	pop	{r4, pc}

08000450 <__aeabi_dcmplt>:
 8000450:	b510      	push	{r4, lr}
 8000452:	f001 f811 	bl	8001478 <__ledf2>
 8000456:	2800      	cmp	r0, #0
 8000458:	db01      	blt.n	800045e <__aeabi_dcmplt+0xe>
 800045a:	2000      	movs	r0, #0
 800045c:	bd10      	pop	{r4, pc}
 800045e:	2001      	movs	r0, #1
 8000460:	bd10      	pop	{r4, pc}
 8000462:	46c0      	nop			; (mov r8, r8)

08000464 <__aeabi_dcmple>:
 8000464:	b510      	push	{r4, lr}
 8000466:	f001 f807 	bl	8001478 <__ledf2>
 800046a:	2800      	cmp	r0, #0
 800046c:	dd01      	ble.n	8000472 <__aeabi_dcmple+0xe>
 800046e:	2000      	movs	r0, #0
 8000470:	bd10      	pop	{r4, pc}
 8000472:	2001      	movs	r0, #1
 8000474:	bd10      	pop	{r4, pc}
 8000476:	46c0      	nop			; (mov r8, r8)

08000478 <__aeabi_dcmpgt>:
 8000478:	b510      	push	{r4, lr}
 800047a:	f000 ff8b 	bl	8001394 <__gedf2>
 800047e:	2800      	cmp	r0, #0
 8000480:	dc01      	bgt.n	8000486 <__aeabi_dcmpgt+0xe>
 8000482:	2000      	movs	r0, #0
 8000484:	bd10      	pop	{r4, pc}
 8000486:	2001      	movs	r0, #1
 8000488:	bd10      	pop	{r4, pc}
 800048a:	46c0      	nop			; (mov r8, r8)

0800048c <__aeabi_dcmpge>:
 800048c:	b510      	push	{r4, lr}
 800048e:	f000 ff81 	bl	8001394 <__gedf2>
 8000492:	2800      	cmp	r0, #0
 8000494:	da01      	bge.n	800049a <__aeabi_dcmpge+0xe>
 8000496:	2000      	movs	r0, #0
 8000498:	bd10      	pop	{r4, pc}
 800049a:	2001      	movs	r0, #1
 800049c:	bd10      	pop	{r4, pc}
 800049e:	46c0      	nop			; (mov r8, r8)

080004a0 <__aeabi_uldivmod>:
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	d111      	bne.n	80004c8 <__aeabi_uldivmod+0x28>
 80004a4:	2a00      	cmp	r2, #0
 80004a6:	d10f      	bne.n	80004c8 <__aeabi_uldivmod+0x28>
 80004a8:	2900      	cmp	r1, #0
 80004aa:	d100      	bne.n	80004ae <__aeabi_uldivmod+0xe>
 80004ac:	2800      	cmp	r0, #0
 80004ae:	d002      	beq.n	80004b6 <__aeabi_uldivmod+0x16>
 80004b0:	2100      	movs	r1, #0
 80004b2:	43c9      	mvns	r1, r1
 80004b4:	1c08      	adds	r0, r1, #0
 80004b6:	b407      	push	{r0, r1, r2}
 80004b8:	4802      	ldr	r0, [pc, #8]	; (80004c4 <__aeabi_uldivmod+0x24>)
 80004ba:	a102      	add	r1, pc, #8	; (adr r1, 80004c4 <__aeabi_uldivmod+0x24>)
 80004bc:	1840      	adds	r0, r0, r1
 80004be:	9002      	str	r0, [sp, #8]
 80004c0:	bd03      	pop	{r0, r1, pc}
 80004c2:	46c0      	nop			; (mov r8, r8)
 80004c4:	ffffff5d 	.word	0xffffff5d
 80004c8:	b403      	push	{r0, r1}
 80004ca:	4668      	mov	r0, sp
 80004cc:	b501      	push	{r0, lr}
 80004ce:	9802      	ldr	r0, [sp, #8]
 80004d0:	f000 f806 	bl	80004e0 <__udivmoddi4>
 80004d4:	9b01      	ldr	r3, [sp, #4]
 80004d6:	469e      	mov	lr, r3
 80004d8:	b002      	add	sp, #8
 80004da:	bc0c      	pop	{r2, r3}
 80004dc:	4770      	bx	lr
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__udivmoddi4>:
 80004e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004e2:	4657      	mov	r7, sl
 80004e4:	464e      	mov	r6, r9
 80004e6:	4645      	mov	r5, r8
 80004e8:	46de      	mov	lr, fp
 80004ea:	b5e0      	push	{r5, r6, r7, lr}
 80004ec:	0004      	movs	r4, r0
 80004ee:	000d      	movs	r5, r1
 80004f0:	4692      	mov	sl, r2
 80004f2:	4699      	mov	r9, r3
 80004f4:	b083      	sub	sp, #12
 80004f6:	428b      	cmp	r3, r1
 80004f8:	d830      	bhi.n	800055c <__udivmoddi4+0x7c>
 80004fa:	d02d      	beq.n	8000558 <__udivmoddi4+0x78>
 80004fc:	4649      	mov	r1, r9
 80004fe:	4650      	mov	r0, sl
 8000500:	f001 fef0 	bl	80022e4 <__clzdi2>
 8000504:	0029      	movs	r1, r5
 8000506:	0006      	movs	r6, r0
 8000508:	0020      	movs	r0, r4
 800050a:	f001 feeb 	bl	80022e4 <__clzdi2>
 800050e:	1a33      	subs	r3, r6, r0
 8000510:	4698      	mov	r8, r3
 8000512:	3b20      	subs	r3, #32
 8000514:	469b      	mov	fp, r3
 8000516:	d433      	bmi.n	8000580 <__udivmoddi4+0xa0>
 8000518:	465a      	mov	r2, fp
 800051a:	4653      	mov	r3, sl
 800051c:	4093      	lsls	r3, r2
 800051e:	4642      	mov	r2, r8
 8000520:	001f      	movs	r7, r3
 8000522:	4653      	mov	r3, sl
 8000524:	4093      	lsls	r3, r2
 8000526:	001e      	movs	r6, r3
 8000528:	42af      	cmp	r7, r5
 800052a:	d83a      	bhi.n	80005a2 <__udivmoddi4+0xc2>
 800052c:	42af      	cmp	r7, r5
 800052e:	d100      	bne.n	8000532 <__udivmoddi4+0x52>
 8000530:	e078      	b.n	8000624 <__udivmoddi4+0x144>
 8000532:	465b      	mov	r3, fp
 8000534:	1ba4      	subs	r4, r4, r6
 8000536:	41bd      	sbcs	r5, r7
 8000538:	2b00      	cmp	r3, #0
 800053a:	da00      	bge.n	800053e <__udivmoddi4+0x5e>
 800053c:	e075      	b.n	800062a <__udivmoddi4+0x14a>
 800053e:	2200      	movs	r2, #0
 8000540:	2300      	movs	r3, #0
 8000542:	9200      	str	r2, [sp, #0]
 8000544:	9301      	str	r3, [sp, #4]
 8000546:	2301      	movs	r3, #1
 8000548:	465a      	mov	r2, fp
 800054a:	4093      	lsls	r3, r2
 800054c:	9301      	str	r3, [sp, #4]
 800054e:	2301      	movs	r3, #1
 8000550:	4642      	mov	r2, r8
 8000552:	4093      	lsls	r3, r2
 8000554:	9300      	str	r3, [sp, #0]
 8000556:	e028      	b.n	80005aa <__udivmoddi4+0xca>
 8000558:	4282      	cmp	r2, r0
 800055a:	d9cf      	bls.n	80004fc <__udivmoddi4+0x1c>
 800055c:	2200      	movs	r2, #0
 800055e:	2300      	movs	r3, #0
 8000560:	9200      	str	r2, [sp, #0]
 8000562:	9301      	str	r3, [sp, #4]
 8000564:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8000566:	2b00      	cmp	r3, #0
 8000568:	d001      	beq.n	800056e <__udivmoddi4+0x8e>
 800056a:	601c      	str	r4, [r3, #0]
 800056c:	605d      	str	r5, [r3, #4]
 800056e:	9800      	ldr	r0, [sp, #0]
 8000570:	9901      	ldr	r1, [sp, #4]
 8000572:	b003      	add	sp, #12
 8000574:	bcf0      	pop	{r4, r5, r6, r7}
 8000576:	46bb      	mov	fp, r7
 8000578:	46b2      	mov	sl, r6
 800057a:	46a9      	mov	r9, r5
 800057c:	46a0      	mov	r8, r4
 800057e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000580:	4642      	mov	r2, r8
 8000582:	2320      	movs	r3, #32
 8000584:	1a9b      	subs	r3, r3, r2
 8000586:	4652      	mov	r2, sl
 8000588:	40da      	lsrs	r2, r3
 800058a:	4641      	mov	r1, r8
 800058c:	0013      	movs	r3, r2
 800058e:	464a      	mov	r2, r9
 8000590:	408a      	lsls	r2, r1
 8000592:	0017      	movs	r7, r2
 8000594:	4642      	mov	r2, r8
 8000596:	431f      	orrs	r7, r3
 8000598:	4653      	mov	r3, sl
 800059a:	4093      	lsls	r3, r2
 800059c:	001e      	movs	r6, r3
 800059e:	42af      	cmp	r7, r5
 80005a0:	d9c4      	bls.n	800052c <__udivmoddi4+0x4c>
 80005a2:	2200      	movs	r2, #0
 80005a4:	2300      	movs	r3, #0
 80005a6:	9200      	str	r2, [sp, #0]
 80005a8:	9301      	str	r3, [sp, #4]
 80005aa:	4643      	mov	r3, r8
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	d0d9      	beq.n	8000564 <__udivmoddi4+0x84>
 80005b0:	07fb      	lsls	r3, r7, #31
 80005b2:	0872      	lsrs	r2, r6, #1
 80005b4:	431a      	orrs	r2, r3
 80005b6:	4646      	mov	r6, r8
 80005b8:	087b      	lsrs	r3, r7, #1
 80005ba:	e00e      	b.n	80005da <__udivmoddi4+0xfa>
 80005bc:	42ab      	cmp	r3, r5
 80005be:	d101      	bne.n	80005c4 <__udivmoddi4+0xe4>
 80005c0:	42a2      	cmp	r2, r4
 80005c2:	d80c      	bhi.n	80005de <__udivmoddi4+0xfe>
 80005c4:	1aa4      	subs	r4, r4, r2
 80005c6:	419d      	sbcs	r5, r3
 80005c8:	2001      	movs	r0, #1
 80005ca:	1924      	adds	r4, r4, r4
 80005cc:	416d      	adcs	r5, r5
 80005ce:	2100      	movs	r1, #0
 80005d0:	3e01      	subs	r6, #1
 80005d2:	1824      	adds	r4, r4, r0
 80005d4:	414d      	adcs	r5, r1
 80005d6:	2e00      	cmp	r6, #0
 80005d8:	d006      	beq.n	80005e8 <__udivmoddi4+0x108>
 80005da:	42ab      	cmp	r3, r5
 80005dc:	d9ee      	bls.n	80005bc <__udivmoddi4+0xdc>
 80005de:	3e01      	subs	r6, #1
 80005e0:	1924      	adds	r4, r4, r4
 80005e2:	416d      	adcs	r5, r5
 80005e4:	2e00      	cmp	r6, #0
 80005e6:	d1f8      	bne.n	80005da <__udivmoddi4+0xfa>
 80005e8:	9800      	ldr	r0, [sp, #0]
 80005ea:	9901      	ldr	r1, [sp, #4]
 80005ec:	465b      	mov	r3, fp
 80005ee:	1900      	adds	r0, r0, r4
 80005f0:	4169      	adcs	r1, r5
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	db24      	blt.n	8000640 <__udivmoddi4+0x160>
 80005f6:	002b      	movs	r3, r5
 80005f8:	465a      	mov	r2, fp
 80005fa:	4644      	mov	r4, r8
 80005fc:	40d3      	lsrs	r3, r2
 80005fe:	002a      	movs	r2, r5
 8000600:	40e2      	lsrs	r2, r4
 8000602:	001c      	movs	r4, r3
 8000604:	465b      	mov	r3, fp
 8000606:	0015      	movs	r5, r2
 8000608:	2b00      	cmp	r3, #0
 800060a:	db2a      	blt.n	8000662 <__udivmoddi4+0x182>
 800060c:	0026      	movs	r6, r4
 800060e:	409e      	lsls	r6, r3
 8000610:	0033      	movs	r3, r6
 8000612:	0026      	movs	r6, r4
 8000614:	4647      	mov	r7, r8
 8000616:	40be      	lsls	r6, r7
 8000618:	0032      	movs	r2, r6
 800061a:	1a80      	subs	r0, r0, r2
 800061c:	4199      	sbcs	r1, r3
 800061e:	9000      	str	r0, [sp, #0]
 8000620:	9101      	str	r1, [sp, #4]
 8000622:	e79f      	b.n	8000564 <__udivmoddi4+0x84>
 8000624:	42a3      	cmp	r3, r4
 8000626:	d8bc      	bhi.n	80005a2 <__udivmoddi4+0xc2>
 8000628:	e783      	b.n	8000532 <__udivmoddi4+0x52>
 800062a:	4642      	mov	r2, r8
 800062c:	2320      	movs	r3, #32
 800062e:	2100      	movs	r1, #0
 8000630:	1a9b      	subs	r3, r3, r2
 8000632:	2200      	movs	r2, #0
 8000634:	9100      	str	r1, [sp, #0]
 8000636:	9201      	str	r2, [sp, #4]
 8000638:	2201      	movs	r2, #1
 800063a:	40da      	lsrs	r2, r3
 800063c:	9201      	str	r2, [sp, #4]
 800063e:	e786      	b.n	800054e <__udivmoddi4+0x6e>
 8000640:	4642      	mov	r2, r8
 8000642:	2320      	movs	r3, #32
 8000644:	1a9b      	subs	r3, r3, r2
 8000646:	002a      	movs	r2, r5
 8000648:	4646      	mov	r6, r8
 800064a:	409a      	lsls	r2, r3
 800064c:	0023      	movs	r3, r4
 800064e:	40f3      	lsrs	r3, r6
 8000650:	4644      	mov	r4, r8
 8000652:	4313      	orrs	r3, r2
 8000654:	002a      	movs	r2, r5
 8000656:	40e2      	lsrs	r2, r4
 8000658:	001c      	movs	r4, r3
 800065a:	465b      	mov	r3, fp
 800065c:	0015      	movs	r5, r2
 800065e:	2b00      	cmp	r3, #0
 8000660:	dad4      	bge.n	800060c <__udivmoddi4+0x12c>
 8000662:	4642      	mov	r2, r8
 8000664:	002f      	movs	r7, r5
 8000666:	2320      	movs	r3, #32
 8000668:	0026      	movs	r6, r4
 800066a:	4097      	lsls	r7, r2
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	40de      	lsrs	r6, r3
 8000670:	003b      	movs	r3, r7
 8000672:	4333      	orrs	r3, r6
 8000674:	e7cd      	b.n	8000612 <__udivmoddi4+0x132>
 8000676:	46c0      	nop			; (mov r8, r8)

08000678 <__aeabi_dadd>:
 8000678:	b5f0      	push	{r4, r5, r6, r7, lr}
 800067a:	464f      	mov	r7, r9
 800067c:	46d6      	mov	lr, sl
 800067e:	4646      	mov	r6, r8
 8000680:	000d      	movs	r5, r1
 8000682:	0001      	movs	r1, r0
 8000684:	0018      	movs	r0, r3
 8000686:	b5c0      	push	{r6, r7, lr}
 8000688:	0017      	movs	r7, r2
 800068a:	032b      	lsls	r3, r5, #12
 800068c:	0a5a      	lsrs	r2, r3, #9
 800068e:	0f4b      	lsrs	r3, r1, #29
 8000690:	4313      	orrs	r3, r2
 8000692:	00ca      	lsls	r2, r1, #3
 8000694:	4691      	mov	r9, r2
 8000696:	0302      	lsls	r2, r0, #12
 8000698:	006e      	lsls	r6, r5, #1
 800069a:	0041      	lsls	r1, r0, #1
 800069c:	0a52      	lsrs	r2, r2, #9
 800069e:	0fec      	lsrs	r4, r5, #31
 80006a0:	0f7d      	lsrs	r5, r7, #29
 80006a2:	4315      	orrs	r5, r2
 80006a4:	0d76      	lsrs	r6, r6, #21
 80006a6:	0d49      	lsrs	r1, r1, #21
 80006a8:	0fc0      	lsrs	r0, r0, #31
 80006aa:	4682      	mov	sl, r0
 80006ac:	46ac      	mov	ip, r5
 80006ae:	00ff      	lsls	r7, r7, #3
 80006b0:	1a72      	subs	r2, r6, r1
 80006b2:	4284      	cmp	r4, r0
 80006b4:	d100      	bne.n	80006b8 <__aeabi_dadd+0x40>
 80006b6:	e098      	b.n	80007ea <__aeabi_dadd+0x172>
 80006b8:	2a00      	cmp	r2, #0
 80006ba:	dc00      	bgt.n	80006be <__aeabi_dadd+0x46>
 80006bc:	e081      	b.n	80007c2 <__aeabi_dadd+0x14a>
 80006be:	2900      	cmp	r1, #0
 80006c0:	d100      	bne.n	80006c4 <__aeabi_dadd+0x4c>
 80006c2:	e0b6      	b.n	8000832 <__aeabi_dadd+0x1ba>
 80006c4:	49c9      	ldr	r1, [pc, #804]	; (80009ec <__aeabi_dadd+0x374>)
 80006c6:	428e      	cmp	r6, r1
 80006c8:	d100      	bne.n	80006cc <__aeabi_dadd+0x54>
 80006ca:	e172      	b.n	80009b2 <__aeabi_dadd+0x33a>
 80006cc:	2180      	movs	r1, #128	; 0x80
 80006ce:	0028      	movs	r0, r5
 80006d0:	0409      	lsls	r1, r1, #16
 80006d2:	4308      	orrs	r0, r1
 80006d4:	4684      	mov	ip, r0
 80006d6:	2a38      	cmp	r2, #56	; 0x38
 80006d8:	dd00      	ble.n	80006dc <__aeabi_dadd+0x64>
 80006da:	e15e      	b.n	800099a <__aeabi_dadd+0x322>
 80006dc:	2a1f      	cmp	r2, #31
 80006de:	dd00      	ble.n	80006e2 <__aeabi_dadd+0x6a>
 80006e0:	e1ee      	b.n	8000ac0 <__aeabi_dadd+0x448>
 80006e2:	2020      	movs	r0, #32
 80006e4:	0039      	movs	r1, r7
 80006e6:	4665      	mov	r5, ip
 80006e8:	1a80      	subs	r0, r0, r2
 80006ea:	4087      	lsls	r7, r0
 80006ec:	40d1      	lsrs	r1, r2
 80006ee:	4085      	lsls	r5, r0
 80006f0:	430d      	orrs	r5, r1
 80006f2:	0039      	movs	r1, r7
 80006f4:	1e4f      	subs	r7, r1, #1
 80006f6:	41b9      	sbcs	r1, r7
 80006f8:	4667      	mov	r7, ip
 80006fa:	40d7      	lsrs	r7, r2
 80006fc:	4329      	orrs	r1, r5
 80006fe:	1bdb      	subs	r3, r3, r7
 8000700:	464a      	mov	r2, r9
 8000702:	1a55      	subs	r5, r2, r1
 8000704:	45a9      	cmp	r9, r5
 8000706:	4189      	sbcs	r1, r1
 8000708:	4249      	negs	r1, r1
 800070a:	1a5b      	subs	r3, r3, r1
 800070c:	4698      	mov	r8, r3
 800070e:	4643      	mov	r3, r8
 8000710:	021b      	lsls	r3, r3, #8
 8000712:	d400      	bmi.n	8000716 <__aeabi_dadd+0x9e>
 8000714:	e0cc      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000716:	4643      	mov	r3, r8
 8000718:	025b      	lsls	r3, r3, #9
 800071a:	0a5b      	lsrs	r3, r3, #9
 800071c:	4698      	mov	r8, r3
 800071e:	4643      	mov	r3, r8
 8000720:	2b00      	cmp	r3, #0
 8000722:	d100      	bne.n	8000726 <__aeabi_dadd+0xae>
 8000724:	e12c      	b.n	8000980 <__aeabi_dadd+0x308>
 8000726:	4640      	mov	r0, r8
 8000728:	f001 fdbe 	bl	80022a8 <__clzsi2>
 800072c:	0001      	movs	r1, r0
 800072e:	3908      	subs	r1, #8
 8000730:	2220      	movs	r2, #32
 8000732:	0028      	movs	r0, r5
 8000734:	4643      	mov	r3, r8
 8000736:	1a52      	subs	r2, r2, r1
 8000738:	408b      	lsls	r3, r1
 800073a:	40d0      	lsrs	r0, r2
 800073c:	408d      	lsls	r5, r1
 800073e:	4303      	orrs	r3, r0
 8000740:	428e      	cmp	r6, r1
 8000742:	dd00      	ble.n	8000746 <__aeabi_dadd+0xce>
 8000744:	e117      	b.n	8000976 <__aeabi_dadd+0x2fe>
 8000746:	1b8e      	subs	r6, r1, r6
 8000748:	1c72      	adds	r2, r6, #1
 800074a:	2a1f      	cmp	r2, #31
 800074c:	dd00      	ble.n	8000750 <__aeabi_dadd+0xd8>
 800074e:	e1a7      	b.n	8000aa0 <__aeabi_dadd+0x428>
 8000750:	2120      	movs	r1, #32
 8000752:	0018      	movs	r0, r3
 8000754:	002e      	movs	r6, r5
 8000756:	1a89      	subs	r1, r1, r2
 8000758:	408d      	lsls	r5, r1
 800075a:	4088      	lsls	r0, r1
 800075c:	40d6      	lsrs	r6, r2
 800075e:	40d3      	lsrs	r3, r2
 8000760:	1e69      	subs	r1, r5, #1
 8000762:	418d      	sbcs	r5, r1
 8000764:	4330      	orrs	r0, r6
 8000766:	4698      	mov	r8, r3
 8000768:	2600      	movs	r6, #0
 800076a:	4305      	orrs	r5, r0
 800076c:	076b      	lsls	r3, r5, #29
 800076e:	d009      	beq.n	8000784 <__aeabi_dadd+0x10c>
 8000770:	230f      	movs	r3, #15
 8000772:	402b      	ands	r3, r5
 8000774:	2b04      	cmp	r3, #4
 8000776:	d005      	beq.n	8000784 <__aeabi_dadd+0x10c>
 8000778:	1d2b      	adds	r3, r5, #4
 800077a:	42ab      	cmp	r3, r5
 800077c:	41ad      	sbcs	r5, r5
 800077e:	426d      	negs	r5, r5
 8000780:	44a8      	add	r8, r5
 8000782:	001d      	movs	r5, r3
 8000784:	4643      	mov	r3, r8
 8000786:	021b      	lsls	r3, r3, #8
 8000788:	d400      	bmi.n	800078c <__aeabi_dadd+0x114>
 800078a:	e094      	b.n	80008b6 <__aeabi_dadd+0x23e>
 800078c:	4b97      	ldr	r3, [pc, #604]	; (80009ec <__aeabi_dadd+0x374>)
 800078e:	1c72      	adds	r2, r6, #1
 8000790:	429a      	cmp	r2, r3
 8000792:	d100      	bne.n	8000796 <__aeabi_dadd+0x11e>
 8000794:	e09d      	b.n	80008d2 <__aeabi_dadd+0x25a>
 8000796:	4641      	mov	r1, r8
 8000798:	4b95      	ldr	r3, [pc, #596]	; (80009f0 <__aeabi_dadd+0x378>)
 800079a:	08ed      	lsrs	r5, r5, #3
 800079c:	4019      	ands	r1, r3
 800079e:	000b      	movs	r3, r1
 80007a0:	0552      	lsls	r2, r2, #21
 80007a2:	0749      	lsls	r1, r1, #29
 80007a4:	025b      	lsls	r3, r3, #9
 80007a6:	4329      	orrs	r1, r5
 80007a8:	0b1b      	lsrs	r3, r3, #12
 80007aa:	0d52      	lsrs	r2, r2, #21
 80007ac:	0512      	lsls	r2, r2, #20
 80007ae:	4313      	orrs	r3, r2
 80007b0:	07e4      	lsls	r4, r4, #31
 80007b2:	4323      	orrs	r3, r4
 80007b4:	0008      	movs	r0, r1
 80007b6:	0019      	movs	r1, r3
 80007b8:	bce0      	pop	{r5, r6, r7}
 80007ba:	46ba      	mov	sl, r7
 80007bc:	46b1      	mov	r9, r6
 80007be:	46a8      	mov	r8, r5
 80007c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80007c2:	2a00      	cmp	r2, #0
 80007c4:	d043      	beq.n	800084e <__aeabi_dadd+0x1d6>
 80007c6:	1b8a      	subs	r2, r1, r6
 80007c8:	2e00      	cmp	r6, #0
 80007ca:	d000      	beq.n	80007ce <__aeabi_dadd+0x156>
 80007cc:	e12a      	b.n	8000a24 <__aeabi_dadd+0x3ac>
 80007ce:	464c      	mov	r4, r9
 80007d0:	431c      	orrs	r4, r3
 80007d2:	d100      	bne.n	80007d6 <__aeabi_dadd+0x15e>
 80007d4:	e1d1      	b.n	8000b7a <__aeabi_dadd+0x502>
 80007d6:	1e54      	subs	r4, r2, #1
 80007d8:	2a01      	cmp	r2, #1
 80007da:	d100      	bne.n	80007de <__aeabi_dadd+0x166>
 80007dc:	e21f      	b.n	8000c1e <__aeabi_dadd+0x5a6>
 80007de:	4d83      	ldr	r5, [pc, #524]	; (80009ec <__aeabi_dadd+0x374>)
 80007e0:	42aa      	cmp	r2, r5
 80007e2:	d100      	bne.n	80007e6 <__aeabi_dadd+0x16e>
 80007e4:	e272      	b.n	8000ccc <__aeabi_dadd+0x654>
 80007e6:	0022      	movs	r2, r4
 80007e8:	e123      	b.n	8000a32 <__aeabi_dadd+0x3ba>
 80007ea:	2a00      	cmp	r2, #0
 80007ec:	dc00      	bgt.n	80007f0 <__aeabi_dadd+0x178>
 80007ee:	e098      	b.n	8000922 <__aeabi_dadd+0x2aa>
 80007f0:	2900      	cmp	r1, #0
 80007f2:	d042      	beq.n	800087a <__aeabi_dadd+0x202>
 80007f4:	497d      	ldr	r1, [pc, #500]	; (80009ec <__aeabi_dadd+0x374>)
 80007f6:	428e      	cmp	r6, r1
 80007f8:	d100      	bne.n	80007fc <__aeabi_dadd+0x184>
 80007fa:	e0da      	b.n	80009b2 <__aeabi_dadd+0x33a>
 80007fc:	2180      	movs	r1, #128	; 0x80
 80007fe:	0028      	movs	r0, r5
 8000800:	0409      	lsls	r1, r1, #16
 8000802:	4308      	orrs	r0, r1
 8000804:	4684      	mov	ip, r0
 8000806:	2a38      	cmp	r2, #56	; 0x38
 8000808:	dd00      	ble.n	800080c <__aeabi_dadd+0x194>
 800080a:	e129      	b.n	8000a60 <__aeabi_dadd+0x3e8>
 800080c:	2a1f      	cmp	r2, #31
 800080e:	dc00      	bgt.n	8000812 <__aeabi_dadd+0x19a>
 8000810:	e187      	b.n	8000b22 <__aeabi_dadd+0x4aa>
 8000812:	0011      	movs	r1, r2
 8000814:	4665      	mov	r5, ip
 8000816:	3920      	subs	r1, #32
 8000818:	40cd      	lsrs	r5, r1
 800081a:	2a20      	cmp	r2, #32
 800081c:	d004      	beq.n	8000828 <__aeabi_dadd+0x1b0>
 800081e:	2040      	movs	r0, #64	; 0x40
 8000820:	4661      	mov	r1, ip
 8000822:	1a82      	subs	r2, r0, r2
 8000824:	4091      	lsls	r1, r2
 8000826:	430f      	orrs	r7, r1
 8000828:	0039      	movs	r1, r7
 800082a:	1e4f      	subs	r7, r1, #1
 800082c:	41b9      	sbcs	r1, r7
 800082e:	430d      	orrs	r5, r1
 8000830:	e11b      	b.n	8000a6a <__aeabi_dadd+0x3f2>
 8000832:	0029      	movs	r1, r5
 8000834:	4339      	orrs	r1, r7
 8000836:	d100      	bne.n	800083a <__aeabi_dadd+0x1c2>
 8000838:	e0b5      	b.n	80009a6 <__aeabi_dadd+0x32e>
 800083a:	1e51      	subs	r1, r2, #1
 800083c:	2a01      	cmp	r2, #1
 800083e:	d100      	bne.n	8000842 <__aeabi_dadd+0x1ca>
 8000840:	e1ab      	b.n	8000b9a <__aeabi_dadd+0x522>
 8000842:	486a      	ldr	r0, [pc, #424]	; (80009ec <__aeabi_dadd+0x374>)
 8000844:	4282      	cmp	r2, r0
 8000846:	d100      	bne.n	800084a <__aeabi_dadd+0x1d2>
 8000848:	e1b2      	b.n	8000bb0 <__aeabi_dadd+0x538>
 800084a:	000a      	movs	r2, r1
 800084c:	e743      	b.n	80006d6 <__aeabi_dadd+0x5e>
 800084e:	4969      	ldr	r1, [pc, #420]	; (80009f4 <__aeabi_dadd+0x37c>)
 8000850:	1c75      	adds	r5, r6, #1
 8000852:	420d      	tst	r5, r1
 8000854:	d000      	beq.n	8000858 <__aeabi_dadd+0x1e0>
 8000856:	e0cf      	b.n	80009f8 <__aeabi_dadd+0x380>
 8000858:	2e00      	cmp	r6, #0
 800085a:	d000      	beq.n	800085e <__aeabi_dadd+0x1e6>
 800085c:	e193      	b.n	8000b86 <__aeabi_dadd+0x50e>
 800085e:	4649      	mov	r1, r9
 8000860:	4319      	orrs	r1, r3
 8000862:	d100      	bne.n	8000866 <__aeabi_dadd+0x1ee>
 8000864:	e1d1      	b.n	8000c0a <__aeabi_dadd+0x592>
 8000866:	4661      	mov	r1, ip
 8000868:	4339      	orrs	r1, r7
 800086a:	d000      	beq.n	800086e <__aeabi_dadd+0x1f6>
 800086c:	e1e3      	b.n	8000c36 <__aeabi_dadd+0x5be>
 800086e:	4649      	mov	r1, r9
 8000870:	0758      	lsls	r0, r3, #29
 8000872:	08c9      	lsrs	r1, r1, #3
 8000874:	4301      	orrs	r1, r0
 8000876:	08db      	lsrs	r3, r3, #3
 8000878:	e026      	b.n	80008c8 <__aeabi_dadd+0x250>
 800087a:	0029      	movs	r1, r5
 800087c:	4339      	orrs	r1, r7
 800087e:	d100      	bne.n	8000882 <__aeabi_dadd+0x20a>
 8000880:	e091      	b.n	80009a6 <__aeabi_dadd+0x32e>
 8000882:	1e51      	subs	r1, r2, #1
 8000884:	2a01      	cmp	r2, #1
 8000886:	d005      	beq.n	8000894 <__aeabi_dadd+0x21c>
 8000888:	4858      	ldr	r0, [pc, #352]	; (80009ec <__aeabi_dadd+0x374>)
 800088a:	4282      	cmp	r2, r0
 800088c:	d100      	bne.n	8000890 <__aeabi_dadd+0x218>
 800088e:	e18f      	b.n	8000bb0 <__aeabi_dadd+0x538>
 8000890:	000a      	movs	r2, r1
 8000892:	e7b8      	b.n	8000806 <__aeabi_dadd+0x18e>
 8000894:	003d      	movs	r5, r7
 8000896:	444d      	add	r5, r9
 8000898:	454d      	cmp	r5, r9
 800089a:	4189      	sbcs	r1, r1
 800089c:	4463      	add	r3, ip
 800089e:	4698      	mov	r8, r3
 80008a0:	4249      	negs	r1, r1
 80008a2:	4488      	add	r8, r1
 80008a4:	4643      	mov	r3, r8
 80008a6:	2602      	movs	r6, #2
 80008a8:	021b      	lsls	r3, r3, #8
 80008aa:	d500      	bpl.n	80008ae <__aeabi_dadd+0x236>
 80008ac:	e0eb      	b.n	8000a86 <__aeabi_dadd+0x40e>
 80008ae:	3e01      	subs	r6, #1
 80008b0:	076b      	lsls	r3, r5, #29
 80008b2:	d000      	beq.n	80008b6 <__aeabi_dadd+0x23e>
 80008b4:	e75c      	b.n	8000770 <__aeabi_dadd+0xf8>
 80008b6:	4643      	mov	r3, r8
 80008b8:	08e9      	lsrs	r1, r5, #3
 80008ba:	075a      	lsls	r2, r3, #29
 80008bc:	4311      	orrs	r1, r2
 80008be:	0032      	movs	r2, r6
 80008c0:	08db      	lsrs	r3, r3, #3
 80008c2:	484a      	ldr	r0, [pc, #296]	; (80009ec <__aeabi_dadd+0x374>)
 80008c4:	4282      	cmp	r2, r0
 80008c6:	d021      	beq.n	800090c <__aeabi_dadd+0x294>
 80008c8:	031b      	lsls	r3, r3, #12
 80008ca:	0552      	lsls	r2, r2, #21
 80008cc:	0b1b      	lsrs	r3, r3, #12
 80008ce:	0d52      	lsrs	r2, r2, #21
 80008d0:	e76c      	b.n	80007ac <__aeabi_dadd+0x134>
 80008d2:	2300      	movs	r3, #0
 80008d4:	2100      	movs	r1, #0
 80008d6:	e769      	b.n	80007ac <__aeabi_dadd+0x134>
 80008d8:	002a      	movs	r2, r5
 80008da:	433a      	orrs	r2, r7
 80008dc:	d069      	beq.n	80009b2 <__aeabi_dadd+0x33a>
 80008de:	464a      	mov	r2, r9
 80008e0:	0758      	lsls	r0, r3, #29
 80008e2:	08d1      	lsrs	r1, r2, #3
 80008e4:	08da      	lsrs	r2, r3, #3
 80008e6:	2380      	movs	r3, #128	; 0x80
 80008e8:	031b      	lsls	r3, r3, #12
 80008ea:	4308      	orrs	r0, r1
 80008ec:	421a      	tst	r2, r3
 80008ee:	d007      	beq.n	8000900 <__aeabi_dadd+0x288>
 80008f0:	0029      	movs	r1, r5
 80008f2:	08ed      	lsrs	r5, r5, #3
 80008f4:	421d      	tst	r5, r3
 80008f6:	d103      	bne.n	8000900 <__aeabi_dadd+0x288>
 80008f8:	002a      	movs	r2, r5
 80008fa:	08ff      	lsrs	r7, r7, #3
 80008fc:	0748      	lsls	r0, r1, #29
 80008fe:	4338      	orrs	r0, r7
 8000900:	0f43      	lsrs	r3, r0, #29
 8000902:	00c1      	lsls	r1, r0, #3
 8000904:	075b      	lsls	r3, r3, #29
 8000906:	08c9      	lsrs	r1, r1, #3
 8000908:	4319      	orrs	r1, r3
 800090a:	0013      	movs	r3, r2
 800090c:	000a      	movs	r2, r1
 800090e:	431a      	orrs	r2, r3
 8000910:	d100      	bne.n	8000914 <__aeabi_dadd+0x29c>
 8000912:	e213      	b.n	8000d3c <__aeabi_dadd+0x6c4>
 8000914:	2280      	movs	r2, #128	; 0x80
 8000916:	0312      	lsls	r2, r2, #12
 8000918:	4313      	orrs	r3, r2
 800091a:	031b      	lsls	r3, r3, #12
 800091c:	4a33      	ldr	r2, [pc, #204]	; (80009ec <__aeabi_dadd+0x374>)
 800091e:	0b1b      	lsrs	r3, r3, #12
 8000920:	e744      	b.n	80007ac <__aeabi_dadd+0x134>
 8000922:	2a00      	cmp	r2, #0
 8000924:	d04b      	beq.n	80009be <__aeabi_dadd+0x346>
 8000926:	1b8a      	subs	r2, r1, r6
 8000928:	2e00      	cmp	r6, #0
 800092a:	d100      	bne.n	800092e <__aeabi_dadd+0x2b6>
 800092c:	e0e7      	b.n	8000afe <__aeabi_dadd+0x486>
 800092e:	482f      	ldr	r0, [pc, #188]	; (80009ec <__aeabi_dadd+0x374>)
 8000930:	4281      	cmp	r1, r0
 8000932:	d100      	bne.n	8000936 <__aeabi_dadd+0x2be>
 8000934:	e195      	b.n	8000c62 <__aeabi_dadd+0x5ea>
 8000936:	2080      	movs	r0, #128	; 0x80
 8000938:	0400      	lsls	r0, r0, #16
 800093a:	4303      	orrs	r3, r0
 800093c:	2a38      	cmp	r2, #56	; 0x38
 800093e:	dd00      	ble.n	8000942 <__aeabi_dadd+0x2ca>
 8000940:	e143      	b.n	8000bca <__aeabi_dadd+0x552>
 8000942:	2a1f      	cmp	r2, #31
 8000944:	dd00      	ble.n	8000948 <__aeabi_dadd+0x2d0>
 8000946:	e1db      	b.n	8000d00 <__aeabi_dadd+0x688>
 8000948:	2020      	movs	r0, #32
 800094a:	001d      	movs	r5, r3
 800094c:	464e      	mov	r6, r9
 800094e:	1a80      	subs	r0, r0, r2
 8000950:	4085      	lsls	r5, r0
 8000952:	40d6      	lsrs	r6, r2
 8000954:	4335      	orrs	r5, r6
 8000956:	464e      	mov	r6, r9
 8000958:	4086      	lsls	r6, r0
 800095a:	0030      	movs	r0, r6
 800095c:	40d3      	lsrs	r3, r2
 800095e:	1e46      	subs	r6, r0, #1
 8000960:	41b0      	sbcs	r0, r6
 8000962:	449c      	add	ip, r3
 8000964:	4305      	orrs	r5, r0
 8000966:	19ed      	adds	r5, r5, r7
 8000968:	42bd      	cmp	r5, r7
 800096a:	419b      	sbcs	r3, r3
 800096c:	425b      	negs	r3, r3
 800096e:	4463      	add	r3, ip
 8000970:	4698      	mov	r8, r3
 8000972:	000e      	movs	r6, r1
 8000974:	e07f      	b.n	8000a76 <__aeabi_dadd+0x3fe>
 8000976:	4a1e      	ldr	r2, [pc, #120]	; (80009f0 <__aeabi_dadd+0x378>)
 8000978:	1a76      	subs	r6, r6, r1
 800097a:	4013      	ands	r3, r2
 800097c:	4698      	mov	r8, r3
 800097e:	e6f5      	b.n	800076c <__aeabi_dadd+0xf4>
 8000980:	0028      	movs	r0, r5
 8000982:	f001 fc91 	bl	80022a8 <__clzsi2>
 8000986:	0001      	movs	r1, r0
 8000988:	3118      	adds	r1, #24
 800098a:	291f      	cmp	r1, #31
 800098c:	dc00      	bgt.n	8000990 <__aeabi_dadd+0x318>
 800098e:	e6cf      	b.n	8000730 <__aeabi_dadd+0xb8>
 8000990:	002b      	movs	r3, r5
 8000992:	3808      	subs	r0, #8
 8000994:	4083      	lsls	r3, r0
 8000996:	2500      	movs	r5, #0
 8000998:	e6d2      	b.n	8000740 <__aeabi_dadd+0xc8>
 800099a:	4662      	mov	r2, ip
 800099c:	433a      	orrs	r2, r7
 800099e:	0011      	movs	r1, r2
 80009a0:	1e4f      	subs	r7, r1, #1
 80009a2:	41b9      	sbcs	r1, r7
 80009a4:	e6ac      	b.n	8000700 <__aeabi_dadd+0x88>
 80009a6:	4649      	mov	r1, r9
 80009a8:	0758      	lsls	r0, r3, #29
 80009aa:	08c9      	lsrs	r1, r1, #3
 80009ac:	4301      	orrs	r1, r0
 80009ae:	08db      	lsrs	r3, r3, #3
 80009b0:	e787      	b.n	80008c2 <__aeabi_dadd+0x24a>
 80009b2:	4649      	mov	r1, r9
 80009b4:	075a      	lsls	r2, r3, #29
 80009b6:	08c9      	lsrs	r1, r1, #3
 80009b8:	4311      	orrs	r1, r2
 80009ba:	08db      	lsrs	r3, r3, #3
 80009bc:	e7a6      	b.n	800090c <__aeabi_dadd+0x294>
 80009be:	490d      	ldr	r1, [pc, #52]	; (80009f4 <__aeabi_dadd+0x37c>)
 80009c0:	1c70      	adds	r0, r6, #1
 80009c2:	4208      	tst	r0, r1
 80009c4:	d000      	beq.n	80009c8 <__aeabi_dadd+0x350>
 80009c6:	e0bb      	b.n	8000b40 <__aeabi_dadd+0x4c8>
 80009c8:	2e00      	cmp	r6, #0
 80009ca:	d000      	beq.n	80009ce <__aeabi_dadd+0x356>
 80009cc:	e114      	b.n	8000bf8 <__aeabi_dadd+0x580>
 80009ce:	4649      	mov	r1, r9
 80009d0:	4319      	orrs	r1, r3
 80009d2:	d100      	bne.n	80009d6 <__aeabi_dadd+0x35e>
 80009d4:	e175      	b.n	8000cc2 <__aeabi_dadd+0x64a>
 80009d6:	0029      	movs	r1, r5
 80009d8:	4339      	orrs	r1, r7
 80009da:	d000      	beq.n	80009de <__aeabi_dadd+0x366>
 80009dc:	e17e      	b.n	8000cdc <__aeabi_dadd+0x664>
 80009de:	4649      	mov	r1, r9
 80009e0:	0758      	lsls	r0, r3, #29
 80009e2:	08c9      	lsrs	r1, r1, #3
 80009e4:	4301      	orrs	r1, r0
 80009e6:	08db      	lsrs	r3, r3, #3
 80009e8:	e76e      	b.n	80008c8 <__aeabi_dadd+0x250>
 80009ea:	46c0      	nop			; (mov r8, r8)
 80009ec:	000007ff 	.word	0x000007ff
 80009f0:	ff7fffff 	.word	0xff7fffff
 80009f4:	000007fe 	.word	0x000007fe
 80009f8:	4649      	mov	r1, r9
 80009fa:	1bcd      	subs	r5, r1, r7
 80009fc:	4661      	mov	r1, ip
 80009fe:	1a58      	subs	r0, r3, r1
 8000a00:	45a9      	cmp	r9, r5
 8000a02:	4189      	sbcs	r1, r1
 8000a04:	4249      	negs	r1, r1
 8000a06:	4688      	mov	r8, r1
 8000a08:	0001      	movs	r1, r0
 8000a0a:	4640      	mov	r0, r8
 8000a0c:	1a09      	subs	r1, r1, r0
 8000a0e:	4688      	mov	r8, r1
 8000a10:	0209      	lsls	r1, r1, #8
 8000a12:	d500      	bpl.n	8000a16 <__aeabi_dadd+0x39e>
 8000a14:	e0a6      	b.n	8000b64 <__aeabi_dadd+0x4ec>
 8000a16:	4641      	mov	r1, r8
 8000a18:	4329      	orrs	r1, r5
 8000a1a:	d000      	beq.n	8000a1e <__aeabi_dadd+0x3a6>
 8000a1c:	e67f      	b.n	800071e <__aeabi_dadd+0xa6>
 8000a1e:	2300      	movs	r3, #0
 8000a20:	2400      	movs	r4, #0
 8000a22:	e751      	b.n	80008c8 <__aeabi_dadd+0x250>
 8000a24:	4cc7      	ldr	r4, [pc, #796]	; (8000d44 <__aeabi_dadd+0x6cc>)
 8000a26:	42a1      	cmp	r1, r4
 8000a28:	d100      	bne.n	8000a2c <__aeabi_dadd+0x3b4>
 8000a2a:	e0c7      	b.n	8000bbc <__aeabi_dadd+0x544>
 8000a2c:	2480      	movs	r4, #128	; 0x80
 8000a2e:	0424      	lsls	r4, r4, #16
 8000a30:	4323      	orrs	r3, r4
 8000a32:	2a38      	cmp	r2, #56	; 0x38
 8000a34:	dc54      	bgt.n	8000ae0 <__aeabi_dadd+0x468>
 8000a36:	2a1f      	cmp	r2, #31
 8000a38:	dd00      	ble.n	8000a3c <__aeabi_dadd+0x3c4>
 8000a3a:	e0cc      	b.n	8000bd6 <__aeabi_dadd+0x55e>
 8000a3c:	2420      	movs	r4, #32
 8000a3e:	4648      	mov	r0, r9
 8000a40:	1aa4      	subs	r4, r4, r2
 8000a42:	001d      	movs	r5, r3
 8000a44:	464e      	mov	r6, r9
 8000a46:	40a0      	lsls	r0, r4
 8000a48:	40d6      	lsrs	r6, r2
 8000a4a:	40a5      	lsls	r5, r4
 8000a4c:	0004      	movs	r4, r0
 8000a4e:	40d3      	lsrs	r3, r2
 8000a50:	4662      	mov	r2, ip
 8000a52:	4335      	orrs	r5, r6
 8000a54:	1e66      	subs	r6, r4, #1
 8000a56:	41b4      	sbcs	r4, r6
 8000a58:	1ad3      	subs	r3, r2, r3
 8000a5a:	469c      	mov	ip, r3
 8000a5c:	4325      	orrs	r5, r4
 8000a5e:	e044      	b.n	8000aea <__aeabi_dadd+0x472>
 8000a60:	4662      	mov	r2, ip
 8000a62:	433a      	orrs	r2, r7
 8000a64:	0015      	movs	r5, r2
 8000a66:	1e6f      	subs	r7, r5, #1
 8000a68:	41bd      	sbcs	r5, r7
 8000a6a:	444d      	add	r5, r9
 8000a6c:	454d      	cmp	r5, r9
 8000a6e:	4189      	sbcs	r1, r1
 8000a70:	4249      	negs	r1, r1
 8000a72:	4688      	mov	r8, r1
 8000a74:	4498      	add	r8, r3
 8000a76:	4643      	mov	r3, r8
 8000a78:	021b      	lsls	r3, r3, #8
 8000a7a:	d400      	bmi.n	8000a7e <__aeabi_dadd+0x406>
 8000a7c:	e718      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000a7e:	4bb1      	ldr	r3, [pc, #708]	; (8000d44 <__aeabi_dadd+0x6cc>)
 8000a80:	3601      	adds	r6, #1
 8000a82:	429e      	cmp	r6, r3
 8000a84:	d049      	beq.n	8000b1a <__aeabi_dadd+0x4a2>
 8000a86:	4642      	mov	r2, r8
 8000a88:	4baf      	ldr	r3, [pc, #700]	; (8000d48 <__aeabi_dadd+0x6d0>)
 8000a8a:	2101      	movs	r1, #1
 8000a8c:	401a      	ands	r2, r3
 8000a8e:	0013      	movs	r3, r2
 8000a90:	086a      	lsrs	r2, r5, #1
 8000a92:	400d      	ands	r5, r1
 8000a94:	4315      	orrs	r5, r2
 8000a96:	07d9      	lsls	r1, r3, #31
 8000a98:	085b      	lsrs	r3, r3, #1
 8000a9a:	4698      	mov	r8, r3
 8000a9c:	430d      	orrs	r5, r1
 8000a9e:	e665      	b.n	800076c <__aeabi_dadd+0xf4>
 8000aa0:	0018      	movs	r0, r3
 8000aa2:	3e1f      	subs	r6, #31
 8000aa4:	40f0      	lsrs	r0, r6
 8000aa6:	2a20      	cmp	r2, #32
 8000aa8:	d003      	beq.n	8000ab2 <__aeabi_dadd+0x43a>
 8000aaa:	2140      	movs	r1, #64	; 0x40
 8000aac:	1a8a      	subs	r2, r1, r2
 8000aae:	4093      	lsls	r3, r2
 8000ab0:	431d      	orrs	r5, r3
 8000ab2:	1e69      	subs	r1, r5, #1
 8000ab4:	418d      	sbcs	r5, r1
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	2600      	movs	r6, #0
 8000aba:	4698      	mov	r8, r3
 8000abc:	4305      	orrs	r5, r0
 8000abe:	e6f7      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000ac0:	0011      	movs	r1, r2
 8000ac2:	4665      	mov	r5, ip
 8000ac4:	3920      	subs	r1, #32
 8000ac6:	40cd      	lsrs	r5, r1
 8000ac8:	2a20      	cmp	r2, #32
 8000aca:	d004      	beq.n	8000ad6 <__aeabi_dadd+0x45e>
 8000acc:	2040      	movs	r0, #64	; 0x40
 8000ace:	4661      	mov	r1, ip
 8000ad0:	1a82      	subs	r2, r0, r2
 8000ad2:	4091      	lsls	r1, r2
 8000ad4:	430f      	orrs	r7, r1
 8000ad6:	0039      	movs	r1, r7
 8000ad8:	1e4f      	subs	r7, r1, #1
 8000ada:	41b9      	sbcs	r1, r7
 8000adc:	4329      	orrs	r1, r5
 8000ade:	e60f      	b.n	8000700 <__aeabi_dadd+0x88>
 8000ae0:	464a      	mov	r2, r9
 8000ae2:	4313      	orrs	r3, r2
 8000ae4:	001d      	movs	r5, r3
 8000ae6:	1e6b      	subs	r3, r5, #1
 8000ae8:	419d      	sbcs	r5, r3
 8000aea:	1b7d      	subs	r5, r7, r5
 8000aec:	42af      	cmp	r7, r5
 8000aee:	419b      	sbcs	r3, r3
 8000af0:	4662      	mov	r2, ip
 8000af2:	425b      	negs	r3, r3
 8000af4:	1ad3      	subs	r3, r2, r3
 8000af6:	4698      	mov	r8, r3
 8000af8:	4654      	mov	r4, sl
 8000afa:	000e      	movs	r6, r1
 8000afc:	e607      	b.n	800070e <__aeabi_dadd+0x96>
 8000afe:	4648      	mov	r0, r9
 8000b00:	4318      	orrs	r0, r3
 8000b02:	d100      	bne.n	8000b06 <__aeabi_dadd+0x48e>
 8000b04:	e0b3      	b.n	8000c6e <__aeabi_dadd+0x5f6>
 8000b06:	1e50      	subs	r0, r2, #1
 8000b08:	2a01      	cmp	r2, #1
 8000b0a:	d100      	bne.n	8000b0e <__aeabi_dadd+0x496>
 8000b0c:	e10d      	b.n	8000d2a <__aeabi_dadd+0x6b2>
 8000b0e:	4d8d      	ldr	r5, [pc, #564]	; (8000d44 <__aeabi_dadd+0x6cc>)
 8000b10:	42aa      	cmp	r2, r5
 8000b12:	d100      	bne.n	8000b16 <__aeabi_dadd+0x49e>
 8000b14:	e0a5      	b.n	8000c62 <__aeabi_dadd+0x5ea>
 8000b16:	0002      	movs	r2, r0
 8000b18:	e710      	b.n	800093c <__aeabi_dadd+0x2c4>
 8000b1a:	0032      	movs	r2, r6
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	2100      	movs	r1, #0
 8000b20:	e644      	b.n	80007ac <__aeabi_dadd+0x134>
 8000b22:	2120      	movs	r1, #32
 8000b24:	0038      	movs	r0, r7
 8000b26:	1a89      	subs	r1, r1, r2
 8000b28:	4665      	mov	r5, ip
 8000b2a:	408f      	lsls	r7, r1
 8000b2c:	408d      	lsls	r5, r1
 8000b2e:	40d0      	lsrs	r0, r2
 8000b30:	1e79      	subs	r1, r7, #1
 8000b32:	418f      	sbcs	r7, r1
 8000b34:	4305      	orrs	r5, r0
 8000b36:	433d      	orrs	r5, r7
 8000b38:	4667      	mov	r7, ip
 8000b3a:	40d7      	lsrs	r7, r2
 8000b3c:	19db      	adds	r3, r3, r7
 8000b3e:	e794      	b.n	8000a6a <__aeabi_dadd+0x3f2>
 8000b40:	4a80      	ldr	r2, [pc, #512]	; (8000d44 <__aeabi_dadd+0x6cc>)
 8000b42:	4290      	cmp	r0, r2
 8000b44:	d100      	bne.n	8000b48 <__aeabi_dadd+0x4d0>
 8000b46:	e0ec      	b.n	8000d22 <__aeabi_dadd+0x6aa>
 8000b48:	0039      	movs	r1, r7
 8000b4a:	4449      	add	r1, r9
 8000b4c:	4549      	cmp	r1, r9
 8000b4e:	4192      	sbcs	r2, r2
 8000b50:	4463      	add	r3, ip
 8000b52:	4252      	negs	r2, r2
 8000b54:	189b      	adds	r3, r3, r2
 8000b56:	07dd      	lsls	r5, r3, #31
 8000b58:	0849      	lsrs	r1, r1, #1
 8000b5a:	085b      	lsrs	r3, r3, #1
 8000b5c:	4698      	mov	r8, r3
 8000b5e:	0006      	movs	r6, r0
 8000b60:	430d      	orrs	r5, r1
 8000b62:	e6a5      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000b64:	464a      	mov	r2, r9
 8000b66:	1abd      	subs	r5, r7, r2
 8000b68:	42af      	cmp	r7, r5
 8000b6a:	4189      	sbcs	r1, r1
 8000b6c:	4662      	mov	r2, ip
 8000b6e:	4249      	negs	r1, r1
 8000b70:	1ad3      	subs	r3, r2, r3
 8000b72:	1a5b      	subs	r3, r3, r1
 8000b74:	4698      	mov	r8, r3
 8000b76:	4654      	mov	r4, sl
 8000b78:	e5d1      	b.n	800071e <__aeabi_dadd+0xa6>
 8000b7a:	076c      	lsls	r4, r5, #29
 8000b7c:	08f9      	lsrs	r1, r7, #3
 8000b7e:	4321      	orrs	r1, r4
 8000b80:	08eb      	lsrs	r3, r5, #3
 8000b82:	0004      	movs	r4, r0
 8000b84:	e69d      	b.n	80008c2 <__aeabi_dadd+0x24a>
 8000b86:	464a      	mov	r2, r9
 8000b88:	431a      	orrs	r2, r3
 8000b8a:	d175      	bne.n	8000c78 <__aeabi_dadd+0x600>
 8000b8c:	4661      	mov	r1, ip
 8000b8e:	4339      	orrs	r1, r7
 8000b90:	d114      	bne.n	8000bbc <__aeabi_dadd+0x544>
 8000b92:	2380      	movs	r3, #128	; 0x80
 8000b94:	2400      	movs	r4, #0
 8000b96:	031b      	lsls	r3, r3, #12
 8000b98:	e6bc      	b.n	8000914 <__aeabi_dadd+0x29c>
 8000b9a:	464a      	mov	r2, r9
 8000b9c:	1bd5      	subs	r5, r2, r7
 8000b9e:	45a9      	cmp	r9, r5
 8000ba0:	4189      	sbcs	r1, r1
 8000ba2:	4662      	mov	r2, ip
 8000ba4:	4249      	negs	r1, r1
 8000ba6:	1a9b      	subs	r3, r3, r2
 8000ba8:	1a5b      	subs	r3, r3, r1
 8000baa:	4698      	mov	r8, r3
 8000bac:	2601      	movs	r6, #1
 8000bae:	e5ae      	b.n	800070e <__aeabi_dadd+0x96>
 8000bb0:	464a      	mov	r2, r9
 8000bb2:	08d1      	lsrs	r1, r2, #3
 8000bb4:	075a      	lsls	r2, r3, #29
 8000bb6:	4311      	orrs	r1, r2
 8000bb8:	08db      	lsrs	r3, r3, #3
 8000bba:	e6a7      	b.n	800090c <__aeabi_dadd+0x294>
 8000bbc:	4663      	mov	r3, ip
 8000bbe:	08f9      	lsrs	r1, r7, #3
 8000bc0:	075a      	lsls	r2, r3, #29
 8000bc2:	4654      	mov	r4, sl
 8000bc4:	4311      	orrs	r1, r2
 8000bc6:	08db      	lsrs	r3, r3, #3
 8000bc8:	e6a0      	b.n	800090c <__aeabi_dadd+0x294>
 8000bca:	464a      	mov	r2, r9
 8000bcc:	4313      	orrs	r3, r2
 8000bce:	001d      	movs	r5, r3
 8000bd0:	1e6b      	subs	r3, r5, #1
 8000bd2:	419d      	sbcs	r5, r3
 8000bd4:	e6c7      	b.n	8000966 <__aeabi_dadd+0x2ee>
 8000bd6:	0014      	movs	r4, r2
 8000bd8:	001e      	movs	r6, r3
 8000bda:	3c20      	subs	r4, #32
 8000bdc:	40e6      	lsrs	r6, r4
 8000bde:	2a20      	cmp	r2, #32
 8000be0:	d005      	beq.n	8000bee <__aeabi_dadd+0x576>
 8000be2:	2440      	movs	r4, #64	; 0x40
 8000be4:	1aa2      	subs	r2, r4, r2
 8000be6:	4093      	lsls	r3, r2
 8000be8:	464a      	mov	r2, r9
 8000bea:	431a      	orrs	r2, r3
 8000bec:	4691      	mov	r9, r2
 8000bee:	464d      	mov	r5, r9
 8000bf0:	1e6b      	subs	r3, r5, #1
 8000bf2:	419d      	sbcs	r5, r3
 8000bf4:	4335      	orrs	r5, r6
 8000bf6:	e778      	b.n	8000aea <__aeabi_dadd+0x472>
 8000bf8:	464a      	mov	r2, r9
 8000bfa:	431a      	orrs	r2, r3
 8000bfc:	d000      	beq.n	8000c00 <__aeabi_dadd+0x588>
 8000bfe:	e66b      	b.n	80008d8 <__aeabi_dadd+0x260>
 8000c00:	076b      	lsls	r3, r5, #29
 8000c02:	08f9      	lsrs	r1, r7, #3
 8000c04:	4319      	orrs	r1, r3
 8000c06:	08eb      	lsrs	r3, r5, #3
 8000c08:	e680      	b.n	800090c <__aeabi_dadd+0x294>
 8000c0a:	4661      	mov	r1, ip
 8000c0c:	4339      	orrs	r1, r7
 8000c0e:	d054      	beq.n	8000cba <__aeabi_dadd+0x642>
 8000c10:	4663      	mov	r3, ip
 8000c12:	08f9      	lsrs	r1, r7, #3
 8000c14:	075c      	lsls	r4, r3, #29
 8000c16:	4321      	orrs	r1, r4
 8000c18:	08db      	lsrs	r3, r3, #3
 8000c1a:	0004      	movs	r4, r0
 8000c1c:	e654      	b.n	80008c8 <__aeabi_dadd+0x250>
 8000c1e:	464a      	mov	r2, r9
 8000c20:	1abd      	subs	r5, r7, r2
 8000c22:	42af      	cmp	r7, r5
 8000c24:	4189      	sbcs	r1, r1
 8000c26:	4662      	mov	r2, ip
 8000c28:	4249      	negs	r1, r1
 8000c2a:	1ad3      	subs	r3, r2, r3
 8000c2c:	1a5b      	subs	r3, r3, r1
 8000c2e:	4698      	mov	r8, r3
 8000c30:	0004      	movs	r4, r0
 8000c32:	2601      	movs	r6, #1
 8000c34:	e56b      	b.n	800070e <__aeabi_dadd+0x96>
 8000c36:	464a      	mov	r2, r9
 8000c38:	1bd5      	subs	r5, r2, r7
 8000c3a:	45a9      	cmp	r9, r5
 8000c3c:	4189      	sbcs	r1, r1
 8000c3e:	4662      	mov	r2, ip
 8000c40:	4249      	negs	r1, r1
 8000c42:	1a9a      	subs	r2, r3, r2
 8000c44:	1a52      	subs	r2, r2, r1
 8000c46:	4690      	mov	r8, r2
 8000c48:	0212      	lsls	r2, r2, #8
 8000c4a:	d532      	bpl.n	8000cb2 <__aeabi_dadd+0x63a>
 8000c4c:	464a      	mov	r2, r9
 8000c4e:	1abd      	subs	r5, r7, r2
 8000c50:	42af      	cmp	r7, r5
 8000c52:	4189      	sbcs	r1, r1
 8000c54:	4662      	mov	r2, ip
 8000c56:	4249      	negs	r1, r1
 8000c58:	1ad3      	subs	r3, r2, r3
 8000c5a:	1a5b      	subs	r3, r3, r1
 8000c5c:	4698      	mov	r8, r3
 8000c5e:	0004      	movs	r4, r0
 8000c60:	e584      	b.n	800076c <__aeabi_dadd+0xf4>
 8000c62:	4663      	mov	r3, ip
 8000c64:	08f9      	lsrs	r1, r7, #3
 8000c66:	075a      	lsls	r2, r3, #29
 8000c68:	4311      	orrs	r1, r2
 8000c6a:	08db      	lsrs	r3, r3, #3
 8000c6c:	e64e      	b.n	800090c <__aeabi_dadd+0x294>
 8000c6e:	08f9      	lsrs	r1, r7, #3
 8000c70:	0768      	lsls	r0, r5, #29
 8000c72:	4301      	orrs	r1, r0
 8000c74:	08eb      	lsrs	r3, r5, #3
 8000c76:	e624      	b.n	80008c2 <__aeabi_dadd+0x24a>
 8000c78:	4662      	mov	r2, ip
 8000c7a:	433a      	orrs	r2, r7
 8000c7c:	d100      	bne.n	8000c80 <__aeabi_dadd+0x608>
 8000c7e:	e698      	b.n	80009b2 <__aeabi_dadd+0x33a>
 8000c80:	464a      	mov	r2, r9
 8000c82:	08d1      	lsrs	r1, r2, #3
 8000c84:	075a      	lsls	r2, r3, #29
 8000c86:	4311      	orrs	r1, r2
 8000c88:	08da      	lsrs	r2, r3, #3
 8000c8a:	2380      	movs	r3, #128	; 0x80
 8000c8c:	031b      	lsls	r3, r3, #12
 8000c8e:	421a      	tst	r2, r3
 8000c90:	d008      	beq.n	8000ca4 <__aeabi_dadd+0x62c>
 8000c92:	4660      	mov	r0, ip
 8000c94:	08c5      	lsrs	r5, r0, #3
 8000c96:	421d      	tst	r5, r3
 8000c98:	d104      	bne.n	8000ca4 <__aeabi_dadd+0x62c>
 8000c9a:	4654      	mov	r4, sl
 8000c9c:	002a      	movs	r2, r5
 8000c9e:	08f9      	lsrs	r1, r7, #3
 8000ca0:	0743      	lsls	r3, r0, #29
 8000ca2:	4319      	orrs	r1, r3
 8000ca4:	0f4b      	lsrs	r3, r1, #29
 8000ca6:	00c9      	lsls	r1, r1, #3
 8000ca8:	075b      	lsls	r3, r3, #29
 8000caa:	08c9      	lsrs	r1, r1, #3
 8000cac:	4319      	orrs	r1, r3
 8000cae:	0013      	movs	r3, r2
 8000cb0:	e62c      	b.n	800090c <__aeabi_dadd+0x294>
 8000cb2:	4641      	mov	r1, r8
 8000cb4:	4329      	orrs	r1, r5
 8000cb6:	d000      	beq.n	8000cba <__aeabi_dadd+0x642>
 8000cb8:	e5fa      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000cba:	2300      	movs	r3, #0
 8000cbc:	000a      	movs	r2, r1
 8000cbe:	2400      	movs	r4, #0
 8000cc0:	e602      	b.n	80008c8 <__aeabi_dadd+0x250>
 8000cc2:	076b      	lsls	r3, r5, #29
 8000cc4:	08f9      	lsrs	r1, r7, #3
 8000cc6:	4319      	orrs	r1, r3
 8000cc8:	08eb      	lsrs	r3, r5, #3
 8000cca:	e5fd      	b.n	80008c8 <__aeabi_dadd+0x250>
 8000ccc:	4663      	mov	r3, ip
 8000cce:	08f9      	lsrs	r1, r7, #3
 8000cd0:	075b      	lsls	r3, r3, #29
 8000cd2:	4319      	orrs	r1, r3
 8000cd4:	4663      	mov	r3, ip
 8000cd6:	0004      	movs	r4, r0
 8000cd8:	08db      	lsrs	r3, r3, #3
 8000cda:	e617      	b.n	800090c <__aeabi_dadd+0x294>
 8000cdc:	003d      	movs	r5, r7
 8000cde:	444d      	add	r5, r9
 8000ce0:	4463      	add	r3, ip
 8000ce2:	454d      	cmp	r5, r9
 8000ce4:	4189      	sbcs	r1, r1
 8000ce6:	4698      	mov	r8, r3
 8000ce8:	4249      	negs	r1, r1
 8000cea:	4488      	add	r8, r1
 8000cec:	4643      	mov	r3, r8
 8000cee:	021b      	lsls	r3, r3, #8
 8000cf0:	d400      	bmi.n	8000cf4 <__aeabi_dadd+0x67c>
 8000cf2:	e5dd      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000cf4:	4642      	mov	r2, r8
 8000cf6:	4b14      	ldr	r3, [pc, #80]	; (8000d48 <__aeabi_dadd+0x6d0>)
 8000cf8:	2601      	movs	r6, #1
 8000cfa:	401a      	ands	r2, r3
 8000cfc:	4690      	mov	r8, r2
 8000cfe:	e5d7      	b.n	80008b0 <__aeabi_dadd+0x238>
 8000d00:	0010      	movs	r0, r2
 8000d02:	001e      	movs	r6, r3
 8000d04:	3820      	subs	r0, #32
 8000d06:	40c6      	lsrs	r6, r0
 8000d08:	2a20      	cmp	r2, #32
 8000d0a:	d005      	beq.n	8000d18 <__aeabi_dadd+0x6a0>
 8000d0c:	2040      	movs	r0, #64	; 0x40
 8000d0e:	1a82      	subs	r2, r0, r2
 8000d10:	4093      	lsls	r3, r2
 8000d12:	464a      	mov	r2, r9
 8000d14:	431a      	orrs	r2, r3
 8000d16:	4691      	mov	r9, r2
 8000d18:	464d      	mov	r5, r9
 8000d1a:	1e6b      	subs	r3, r5, #1
 8000d1c:	419d      	sbcs	r5, r3
 8000d1e:	4335      	orrs	r5, r6
 8000d20:	e621      	b.n	8000966 <__aeabi_dadd+0x2ee>
 8000d22:	0002      	movs	r2, r0
 8000d24:	2300      	movs	r3, #0
 8000d26:	2100      	movs	r1, #0
 8000d28:	e540      	b.n	80007ac <__aeabi_dadd+0x134>
 8000d2a:	464a      	mov	r2, r9
 8000d2c:	19d5      	adds	r5, r2, r7
 8000d2e:	42bd      	cmp	r5, r7
 8000d30:	4189      	sbcs	r1, r1
 8000d32:	4463      	add	r3, ip
 8000d34:	4698      	mov	r8, r3
 8000d36:	4249      	negs	r1, r1
 8000d38:	4488      	add	r8, r1
 8000d3a:	e5b3      	b.n	80008a4 <__aeabi_dadd+0x22c>
 8000d3c:	2100      	movs	r1, #0
 8000d3e:	4a01      	ldr	r2, [pc, #4]	; (8000d44 <__aeabi_dadd+0x6cc>)
 8000d40:	000b      	movs	r3, r1
 8000d42:	e533      	b.n	80007ac <__aeabi_dadd+0x134>
 8000d44:	000007ff 	.word	0x000007ff
 8000d48:	ff7fffff 	.word	0xff7fffff

08000d4c <__aeabi_ddiv>:
 8000d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d4e:	4657      	mov	r7, sl
 8000d50:	464e      	mov	r6, r9
 8000d52:	4645      	mov	r5, r8
 8000d54:	46de      	mov	lr, fp
 8000d56:	b5e0      	push	{r5, r6, r7, lr}
 8000d58:	4681      	mov	r9, r0
 8000d5a:	0005      	movs	r5, r0
 8000d5c:	030c      	lsls	r4, r1, #12
 8000d5e:	0048      	lsls	r0, r1, #1
 8000d60:	4692      	mov	sl, r2
 8000d62:	001f      	movs	r7, r3
 8000d64:	b085      	sub	sp, #20
 8000d66:	0b24      	lsrs	r4, r4, #12
 8000d68:	0d40      	lsrs	r0, r0, #21
 8000d6a:	0fce      	lsrs	r6, r1, #31
 8000d6c:	2800      	cmp	r0, #0
 8000d6e:	d059      	beq.n	8000e24 <__aeabi_ddiv+0xd8>
 8000d70:	4b87      	ldr	r3, [pc, #540]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000d72:	4298      	cmp	r0, r3
 8000d74:	d100      	bne.n	8000d78 <__aeabi_ddiv+0x2c>
 8000d76:	e098      	b.n	8000eaa <__aeabi_ddiv+0x15e>
 8000d78:	0f6b      	lsrs	r3, r5, #29
 8000d7a:	00e4      	lsls	r4, r4, #3
 8000d7c:	431c      	orrs	r4, r3
 8000d7e:	2380      	movs	r3, #128	; 0x80
 8000d80:	041b      	lsls	r3, r3, #16
 8000d82:	4323      	orrs	r3, r4
 8000d84:	4698      	mov	r8, r3
 8000d86:	4b83      	ldr	r3, [pc, #524]	; (8000f94 <__aeabi_ddiv+0x248>)
 8000d88:	00ed      	lsls	r5, r5, #3
 8000d8a:	469b      	mov	fp, r3
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4699      	mov	r9, r3
 8000d90:	4483      	add	fp, r0
 8000d92:	9300      	str	r3, [sp, #0]
 8000d94:	033c      	lsls	r4, r7, #12
 8000d96:	007b      	lsls	r3, r7, #1
 8000d98:	4650      	mov	r0, sl
 8000d9a:	0b24      	lsrs	r4, r4, #12
 8000d9c:	0d5b      	lsrs	r3, r3, #21
 8000d9e:	0fff      	lsrs	r7, r7, #31
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d067      	beq.n	8000e74 <__aeabi_ddiv+0x128>
 8000da4:	4a7a      	ldr	r2, [pc, #488]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000da6:	4293      	cmp	r3, r2
 8000da8:	d018      	beq.n	8000ddc <__aeabi_ddiv+0x90>
 8000daa:	497a      	ldr	r1, [pc, #488]	; (8000f94 <__aeabi_ddiv+0x248>)
 8000dac:	0f42      	lsrs	r2, r0, #29
 8000dae:	468c      	mov	ip, r1
 8000db0:	00e4      	lsls	r4, r4, #3
 8000db2:	4659      	mov	r1, fp
 8000db4:	4314      	orrs	r4, r2
 8000db6:	2280      	movs	r2, #128	; 0x80
 8000db8:	4463      	add	r3, ip
 8000dba:	0412      	lsls	r2, r2, #16
 8000dbc:	1acb      	subs	r3, r1, r3
 8000dbe:	4314      	orrs	r4, r2
 8000dc0:	469b      	mov	fp, r3
 8000dc2:	00c2      	lsls	r2, r0, #3
 8000dc4:	2000      	movs	r0, #0
 8000dc6:	0033      	movs	r3, r6
 8000dc8:	407b      	eors	r3, r7
 8000dca:	469a      	mov	sl, r3
 8000dcc:	464b      	mov	r3, r9
 8000dce:	2b0f      	cmp	r3, #15
 8000dd0:	d900      	bls.n	8000dd4 <__aeabi_ddiv+0x88>
 8000dd2:	e0ef      	b.n	8000fb4 <__aeabi_ddiv+0x268>
 8000dd4:	4970      	ldr	r1, [pc, #448]	; (8000f98 <__aeabi_ddiv+0x24c>)
 8000dd6:	009b      	lsls	r3, r3, #2
 8000dd8:	58cb      	ldr	r3, [r1, r3]
 8000dda:	469f      	mov	pc, r3
 8000ddc:	4b6f      	ldr	r3, [pc, #444]	; (8000f9c <__aeabi_ddiv+0x250>)
 8000dde:	4652      	mov	r2, sl
 8000de0:	469c      	mov	ip, r3
 8000de2:	4322      	orrs	r2, r4
 8000de4:	44e3      	add	fp, ip
 8000de6:	2a00      	cmp	r2, #0
 8000de8:	d000      	beq.n	8000dec <__aeabi_ddiv+0xa0>
 8000dea:	e095      	b.n	8000f18 <__aeabi_ddiv+0x1cc>
 8000dec:	4649      	mov	r1, r9
 8000dee:	2302      	movs	r3, #2
 8000df0:	4319      	orrs	r1, r3
 8000df2:	4689      	mov	r9, r1
 8000df4:	2400      	movs	r4, #0
 8000df6:	2002      	movs	r0, #2
 8000df8:	e7e5      	b.n	8000dc6 <__aeabi_ddiv+0x7a>
 8000dfa:	2300      	movs	r3, #0
 8000dfc:	2400      	movs	r4, #0
 8000dfe:	2500      	movs	r5, #0
 8000e00:	4652      	mov	r2, sl
 8000e02:	051b      	lsls	r3, r3, #20
 8000e04:	4323      	orrs	r3, r4
 8000e06:	07d2      	lsls	r2, r2, #31
 8000e08:	4313      	orrs	r3, r2
 8000e0a:	0028      	movs	r0, r5
 8000e0c:	0019      	movs	r1, r3
 8000e0e:	b005      	add	sp, #20
 8000e10:	bcf0      	pop	{r4, r5, r6, r7}
 8000e12:	46bb      	mov	fp, r7
 8000e14:	46b2      	mov	sl, r6
 8000e16:	46a9      	mov	r9, r5
 8000e18:	46a0      	mov	r8, r4
 8000e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e1c:	2400      	movs	r4, #0
 8000e1e:	2500      	movs	r5, #0
 8000e20:	4b5b      	ldr	r3, [pc, #364]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000e22:	e7ed      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8000e24:	464b      	mov	r3, r9
 8000e26:	4323      	orrs	r3, r4
 8000e28:	4698      	mov	r8, r3
 8000e2a:	d100      	bne.n	8000e2e <__aeabi_ddiv+0xe2>
 8000e2c:	e089      	b.n	8000f42 <__aeabi_ddiv+0x1f6>
 8000e2e:	2c00      	cmp	r4, #0
 8000e30:	d100      	bne.n	8000e34 <__aeabi_ddiv+0xe8>
 8000e32:	e1e0      	b.n	80011f6 <__aeabi_ddiv+0x4aa>
 8000e34:	0020      	movs	r0, r4
 8000e36:	f001 fa37 	bl	80022a8 <__clzsi2>
 8000e3a:	0001      	movs	r1, r0
 8000e3c:	0002      	movs	r2, r0
 8000e3e:	390b      	subs	r1, #11
 8000e40:	231d      	movs	r3, #29
 8000e42:	1a5b      	subs	r3, r3, r1
 8000e44:	4649      	mov	r1, r9
 8000e46:	0010      	movs	r0, r2
 8000e48:	40d9      	lsrs	r1, r3
 8000e4a:	3808      	subs	r0, #8
 8000e4c:	4084      	lsls	r4, r0
 8000e4e:	000b      	movs	r3, r1
 8000e50:	464d      	mov	r5, r9
 8000e52:	4323      	orrs	r3, r4
 8000e54:	4698      	mov	r8, r3
 8000e56:	4085      	lsls	r5, r0
 8000e58:	4851      	ldr	r0, [pc, #324]	; (8000fa0 <__aeabi_ddiv+0x254>)
 8000e5a:	033c      	lsls	r4, r7, #12
 8000e5c:	1a83      	subs	r3, r0, r2
 8000e5e:	469b      	mov	fp, r3
 8000e60:	2300      	movs	r3, #0
 8000e62:	4699      	mov	r9, r3
 8000e64:	9300      	str	r3, [sp, #0]
 8000e66:	007b      	lsls	r3, r7, #1
 8000e68:	4650      	mov	r0, sl
 8000e6a:	0b24      	lsrs	r4, r4, #12
 8000e6c:	0d5b      	lsrs	r3, r3, #21
 8000e6e:	0fff      	lsrs	r7, r7, #31
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d197      	bne.n	8000da4 <__aeabi_ddiv+0x58>
 8000e74:	4652      	mov	r2, sl
 8000e76:	4322      	orrs	r2, r4
 8000e78:	d055      	beq.n	8000f26 <__aeabi_ddiv+0x1da>
 8000e7a:	2c00      	cmp	r4, #0
 8000e7c:	d100      	bne.n	8000e80 <__aeabi_ddiv+0x134>
 8000e7e:	e1ca      	b.n	8001216 <__aeabi_ddiv+0x4ca>
 8000e80:	0020      	movs	r0, r4
 8000e82:	f001 fa11 	bl	80022a8 <__clzsi2>
 8000e86:	0002      	movs	r2, r0
 8000e88:	3a0b      	subs	r2, #11
 8000e8a:	231d      	movs	r3, #29
 8000e8c:	0001      	movs	r1, r0
 8000e8e:	1a9b      	subs	r3, r3, r2
 8000e90:	4652      	mov	r2, sl
 8000e92:	3908      	subs	r1, #8
 8000e94:	40da      	lsrs	r2, r3
 8000e96:	408c      	lsls	r4, r1
 8000e98:	4314      	orrs	r4, r2
 8000e9a:	4652      	mov	r2, sl
 8000e9c:	408a      	lsls	r2, r1
 8000e9e:	4b41      	ldr	r3, [pc, #260]	; (8000fa4 <__aeabi_ddiv+0x258>)
 8000ea0:	4458      	add	r0, fp
 8000ea2:	469b      	mov	fp, r3
 8000ea4:	4483      	add	fp, r0
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	e78d      	b.n	8000dc6 <__aeabi_ddiv+0x7a>
 8000eaa:	464b      	mov	r3, r9
 8000eac:	4323      	orrs	r3, r4
 8000eae:	4698      	mov	r8, r3
 8000eb0:	d140      	bne.n	8000f34 <__aeabi_ddiv+0x1e8>
 8000eb2:	2308      	movs	r3, #8
 8000eb4:	4699      	mov	r9, r3
 8000eb6:	3b06      	subs	r3, #6
 8000eb8:	2500      	movs	r5, #0
 8000eba:	4683      	mov	fp, r0
 8000ebc:	9300      	str	r3, [sp, #0]
 8000ebe:	e769      	b.n	8000d94 <__aeabi_ddiv+0x48>
 8000ec0:	46b2      	mov	sl, r6
 8000ec2:	9b00      	ldr	r3, [sp, #0]
 8000ec4:	2b02      	cmp	r3, #2
 8000ec6:	d0a9      	beq.n	8000e1c <__aeabi_ddiv+0xd0>
 8000ec8:	2b03      	cmp	r3, #3
 8000eca:	d100      	bne.n	8000ece <__aeabi_ddiv+0x182>
 8000ecc:	e211      	b.n	80012f2 <__aeabi_ddiv+0x5a6>
 8000ece:	2b01      	cmp	r3, #1
 8000ed0:	d093      	beq.n	8000dfa <__aeabi_ddiv+0xae>
 8000ed2:	4a35      	ldr	r2, [pc, #212]	; (8000fa8 <__aeabi_ddiv+0x25c>)
 8000ed4:	445a      	add	r2, fp
 8000ed6:	2a00      	cmp	r2, #0
 8000ed8:	dc00      	bgt.n	8000edc <__aeabi_ddiv+0x190>
 8000eda:	e13c      	b.n	8001156 <__aeabi_ddiv+0x40a>
 8000edc:	076b      	lsls	r3, r5, #29
 8000ede:	d000      	beq.n	8000ee2 <__aeabi_ddiv+0x196>
 8000ee0:	e1a7      	b.n	8001232 <__aeabi_ddiv+0x4e6>
 8000ee2:	08ed      	lsrs	r5, r5, #3
 8000ee4:	4643      	mov	r3, r8
 8000ee6:	01db      	lsls	r3, r3, #7
 8000ee8:	d506      	bpl.n	8000ef8 <__aeabi_ddiv+0x1ac>
 8000eea:	4642      	mov	r2, r8
 8000eec:	4b2f      	ldr	r3, [pc, #188]	; (8000fac <__aeabi_ddiv+0x260>)
 8000eee:	401a      	ands	r2, r3
 8000ef0:	4690      	mov	r8, r2
 8000ef2:	2280      	movs	r2, #128	; 0x80
 8000ef4:	00d2      	lsls	r2, r2, #3
 8000ef6:	445a      	add	r2, fp
 8000ef8:	4b2d      	ldr	r3, [pc, #180]	; (8000fb0 <__aeabi_ddiv+0x264>)
 8000efa:	429a      	cmp	r2, r3
 8000efc:	dc8e      	bgt.n	8000e1c <__aeabi_ddiv+0xd0>
 8000efe:	4643      	mov	r3, r8
 8000f00:	0552      	lsls	r2, r2, #21
 8000f02:	0758      	lsls	r0, r3, #29
 8000f04:	025c      	lsls	r4, r3, #9
 8000f06:	4305      	orrs	r5, r0
 8000f08:	0b24      	lsrs	r4, r4, #12
 8000f0a:	0d53      	lsrs	r3, r2, #21
 8000f0c:	e778      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8000f0e:	46ba      	mov	sl, r7
 8000f10:	46a0      	mov	r8, r4
 8000f12:	0015      	movs	r5, r2
 8000f14:	9000      	str	r0, [sp, #0]
 8000f16:	e7d4      	b.n	8000ec2 <__aeabi_ddiv+0x176>
 8000f18:	464a      	mov	r2, r9
 8000f1a:	2303      	movs	r3, #3
 8000f1c:	431a      	orrs	r2, r3
 8000f1e:	4691      	mov	r9, r2
 8000f20:	2003      	movs	r0, #3
 8000f22:	4652      	mov	r2, sl
 8000f24:	e74f      	b.n	8000dc6 <__aeabi_ddiv+0x7a>
 8000f26:	4649      	mov	r1, r9
 8000f28:	2301      	movs	r3, #1
 8000f2a:	4319      	orrs	r1, r3
 8000f2c:	4689      	mov	r9, r1
 8000f2e:	2400      	movs	r4, #0
 8000f30:	2001      	movs	r0, #1
 8000f32:	e748      	b.n	8000dc6 <__aeabi_ddiv+0x7a>
 8000f34:	230c      	movs	r3, #12
 8000f36:	4699      	mov	r9, r3
 8000f38:	3b09      	subs	r3, #9
 8000f3a:	46a0      	mov	r8, r4
 8000f3c:	4683      	mov	fp, r0
 8000f3e:	9300      	str	r3, [sp, #0]
 8000f40:	e728      	b.n	8000d94 <__aeabi_ddiv+0x48>
 8000f42:	2304      	movs	r3, #4
 8000f44:	4699      	mov	r9, r3
 8000f46:	2300      	movs	r3, #0
 8000f48:	469b      	mov	fp, r3
 8000f4a:	3301      	adds	r3, #1
 8000f4c:	2500      	movs	r5, #0
 8000f4e:	9300      	str	r3, [sp, #0]
 8000f50:	e720      	b.n	8000d94 <__aeabi_ddiv+0x48>
 8000f52:	2300      	movs	r3, #0
 8000f54:	2480      	movs	r4, #128	; 0x80
 8000f56:	469a      	mov	sl, r3
 8000f58:	2500      	movs	r5, #0
 8000f5a:	4b0d      	ldr	r3, [pc, #52]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000f5c:	0324      	lsls	r4, r4, #12
 8000f5e:	e74f      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8000f60:	2380      	movs	r3, #128	; 0x80
 8000f62:	4641      	mov	r1, r8
 8000f64:	031b      	lsls	r3, r3, #12
 8000f66:	4219      	tst	r1, r3
 8000f68:	d008      	beq.n	8000f7c <__aeabi_ddiv+0x230>
 8000f6a:	421c      	tst	r4, r3
 8000f6c:	d106      	bne.n	8000f7c <__aeabi_ddiv+0x230>
 8000f6e:	431c      	orrs	r4, r3
 8000f70:	0324      	lsls	r4, r4, #12
 8000f72:	46ba      	mov	sl, r7
 8000f74:	0015      	movs	r5, r2
 8000f76:	4b06      	ldr	r3, [pc, #24]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000f78:	0b24      	lsrs	r4, r4, #12
 8000f7a:	e741      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8000f7c:	2480      	movs	r4, #128	; 0x80
 8000f7e:	4643      	mov	r3, r8
 8000f80:	0324      	lsls	r4, r4, #12
 8000f82:	431c      	orrs	r4, r3
 8000f84:	0324      	lsls	r4, r4, #12
 8000f86:	46b2      	mov	sl, r6
 8000f88:	4b01      	ldr	r3, [pc, #4]	; (8000f90 <__aeabi_ddiv+0x244>)
 8000f8a:	0b24      	lsrs	r4, r4, #12
 8000f8c:	e738      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8000f8e:	46c0      	nop			; (mov r8, r8)
 8000f90:	000007ff 	.word	0x000007ff
 8000f94:	fffffc01 	.word	0xfffffc01
 8000f98:	08008fb0 	.word	0x08008fb0
 8000f9c:	fffff801 	.word	0xfffff801
 8000fa0:	fffffc0d 	.word	0xfffffc0d
 8000fa4:	000003f3 	.word	0x000003f3
 8000fa8:	000003ff 	.word	0x000003ff
 8000fac:	feffffff 	.word	0xfeffffff
 8000fb0:	000007fe 	.word	0x000007fe
 8000fb4:	4544      	cmp	r4, r8
 8000fb6:	d200      	bcs.n	8000fba <__aeabi_ddiv+0x26e>
 8000fb8:	e116      	b.n	80011e8 <__aeabi_ddiv+0x49c>
 8000fba:	d100      	bne.n	8000fbe <__aeabi_ddiv+0x272>
 8000fbc:	e111      	b.n	80011e2 <__aeabi_ddiv+0x496>
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	425b      	negs	r3, r3
 8000fc2:	469c      	mov	ip, r3
 8000fc4:	002e      	movs	r6, r5
 8000fc6:	4640      	mov	r0, r8
 8000fc8:	2500      	movs	r5, #0
 8000fca:	44e3      	add	fp, ip
 8000fcc:	0223      	lsls	r3, r4, #8
 8000fce:	0e14      	lsrs	r4, r2, #24
 8000fd0:	431c      	orrs	r4, r3
 8000fd2:	0c1b      	lsrs	r3, r3, #16
 8000fd4:	4699      	mov	r9, r3
 8000fd6:	0423      	lsls	r3, r4, #16
 8000fd8:	0c1f      	lsrs	r7, r3, #16
 8000fda:	0212      	lsls	r2, r2, #8
 8000fdc:	4649      	mov	r1, r9
 8000fde:	9200      	str	r2, [sp, #0]
 8000fe0:	9701      	str	r7, [sp, #4]
 8000fe2:	f7ff f92f 	bl	8000244 <__aeabi_uidivmod>
 8000fe6:	0002      	movs	r2, r0
 8000fe8:	437a      	muls	r2, r7
 8000fea:	040b      	lsls	r3, r1, #16
 8000fec:	0c31      	lsrs	r1, r6, #16
 8000fee:	4680      	mov	r8, r0
 8000ff0:	4319      	orrs	r1, r3
 8000ff2:	428a      	cmp	r2, r1
 8000ff4:	d90b      	bls.n	800100e <__aeabi_ddiv+0x2c2>
 8000ff6:	2301      	movs	r3, #1
 8000ff8:	425b      	negs	r3, r3
 8000ffa:	469c      	mov	ip, r3
 8000ffc:	1909      	adds	r1, r1, r4
 8000ffe:	44e0      	add	r8, ip
 8001000:	428c      	cmp	r4, r1
 8001002:	d804      	bhi.n	800100e <__aeabi_ddiv+0x2c2>
 8001004:	428a      	cmp	r2, r1
 8001006:	d902      	bls.n	800100e <__aeabi_ddiv+0x2c2>
 8001008:	1e83      	subs	r3, r0, #2
 800100a:	4698      	mov	r8, r3
 800100c:	1909      	adds	r1, r1, r4
 800100e:	1a88      	subs	r0, r1, r2
 8001010:	4649      	mov	r1, r9
 8001012:	f7ff f917 	bl	8000244 <__aeabi_uidivmod>
 8001016:	0409      	lsls	r1, r1, #16
 8001018:	468c      	mov	ip, r1
 800101a:	0431      	lsls	r1, r6, #16
 800101c:	4666      	mov	r6, ip
 800101e:	9a01      	ldr	r2, [sp, #4]
 8001020:	0c09      	lsrs	r1, r1, #16
 8001022:	4342      	muls	r2, r0
 8001024:	0003      	movs	r3, r0
 8001026:	4331      	orrs	r1, r6
 8001028:	428a      	cmp	r2, r1
 800102a:	d904      	bls.n	8001036 <__aeabi_ddiv+0x2ea>
 800102c:	1909      	adds	r1, r1, r4
 800102e:	3b01      	subs	r3, #1
 8001030:	428c      	cmp	r4, r1
 8001032:	d800      	bhi.n	8001036 <__aeabi_ddiv+0x2ea>
 8001034:	e111      	b.n	800125a <__aeabi_ddiv+0x50e>
 8001036:	1a89      	subs	r1, r1, r2
 8001038:	4642      	mov	r2, r8
 800103a:	9e00      	ldr	r6, [sp, #0]
 800103c:	0412      	lsls	r2, r2, #16
 800103e:	431a      	orrs	r2, r3
 8001040:	0c33      	lsrs	r3, r6, #16
 8001042:	001f      	movs	r7, r3
 8001044:	0c10      	lsrs	r0, r2, #16
 8001046:	4690      	mov	r8, r2
 8001048:	9302      	str	r3, [sp, #8]
 800104a:	0413      	lsls	r3, r2, #16
 800104c:	0432      	lsls	r2, r6, #16
 800104e:	0c16      	lsrs	r6, r2, #16
 8001050:	0032      	movs	r2, r6
 8001052:	0c1b      	lsrs	r3, r3, #16
 8001054:	435a      	muls	r2, r3
 8001056:	9603      	str	r6, [sp, #12]
 8001058:	437b      	muls	r3, r7
 800105a:	4346      	muls	r6, r0
 800105c:	4378      	muls	r0, r7
 800105e:	0c17      	lsrs	r7, r2, #16
 8001060:	46bc      	mov	ip, r7
 8001062:	199b      	adds	r3, r3, r6
 8001064:	4463      	add	r3, ip
 8001066:	429e      	cmp	r6, r3
 8001068:	d903      	bls.n	8001072 <__aeabi_ddiv+0x326>
 800106a:	2680      	movs	r6, #128	; 0x80
 800106c:	0276      	lsls	r6, r6, #9
 800106e:	46b4      	mov	ip, r6
 8001070:	4460      	add	r0, ip
 8001072:	0c1e      	lsrs	r6, r3, #16
 8001074:	1830      	adds	r0, r6, r0
 8001076:	0416      	lsls	r6, r2, #16
 8001078:	041b      	lsls	r3, r3, #16
 800107a:	0c36      	lsrs	r6, r6, #16
 800107c:	199e      	adds	r6, r3, r6
 800107e:	4281      	cmp	r1, r0
 8001080:	d200      	bcs.n	8001084 <__aeabi_ddiv+0x338>
 8001082:	e09c      	b.n	80011be <__aeabi_ddiv+0x472>
 8001084:	d100      	bne.n	8001088 <__aeabi_ddiv+0x33c>
 8001086:	e097      	b.n	80011b8 <__aeabi_ddiv+0x46c>
 8001088:	1bae      	subs	r6, r5, r6
 800108a:	1a09      	subs	r1, r1, r0
 800108c:	42b5      	cmp	r5, r6
 800108e:	4180      	sbcs	r0, r0
 8001090:	4240      	negs	r0, r0
 8001092:	1a08      	subs	r0, r1, r0
 8001094:	4284      	cmp	r4, r0
 8001096:	d100      	bne.n	800109a <__aeabi_ddiv+0x34e>
 8001098:	e111      	b.n	80012be <__aeabi_ddiv+0x572>
 800109a:	4649      	mov	r1, r9
 800109c:	f7ff f8d2 	bl	8000244 <__aeabi_uidivmod>
 80010a0:	9a01      	ldr	r2, [sp, #4]
 80010a2:	040b      	lsls	r3, r1, #16
 80010a4:	4342      	muls	r2, r0
 80010a6:	0c31      	lsrs	r1, r6, #16
 80010a8:	0005      	movs	r5, r0
 80010aa:	4319      	orrs	r1, r3
 80010ac:	428a      	cmp	r2, r1
 80010ae:	d907      	bls.n	80010c0 <__aeabi_ddiv+0x374>
 80010b0:	1909      	adds	r1, r1, r4
 80010b2:	3d01      	subs	r5, #1
 80010b4:	428c      	cmp	r4, r1
 80010b6:	d803      	bhi.n	80010c0 <__aeabi_ddiv+0x374>
 80010b8:	428a      	cmp	r2, r1
 80010ba:	d901      	bls.n	80010c0 <__aeabi_ddiv+0x374>
 80010bc:	1e85      	subs	r5, r0, #2
 80010be:	1909      	adds	r1, r1, r4
 80010c0:	1a88      	subs	r0, r1, r2
 80010c2:	4649      	mov	r1, r9
 80010c4:	f7ff f8be 	bl	8000244 <__aeabi_uidivmod>
 80010c8:	0409      	lsls	r1, r1, #16
 80010ca:	468c      	mov	ip, r1
 80010cc:	0431      	lsls	r1, r6, #16
 80010ce:	4666      	mov	r6, ip
 80010d0:	9a01      	ldr	r2, [sp, #4]
 80010d2:	0c09      	lsrs	r1, r1, #16
 80010d4:	4342      	muls	r2, r0
 80010d6:	0003      	movs	r3, r0
 80010d8:	4331      	orrs	r1, r6
 80010da:	428a      	cmp	r2, r1
 80010dc:	d907      	bls.n	80010ee <__aeabi_ddiv+0x3a2>
 80010de:	1909      	adds	r1, r1, r4
 80010e0:	3b01      	subs	r3, #1
 80010e2:	428c      	cmp	r4, r1
 80010e4:	d803      	bhi.n	80010ee <__aeabi_ddiv+0x3a2>
 80010e6:	428a      	cmp	r2, r1
 80010e8:	d901      	bls.n	80010ee <__aeabi_ddiv+0x3a2>
 80010ea:	1e83      	subs	r3, r0, #2
 80010ec:	1909      	adds	r1, r1, r4
 80010ee:	9e03      	ldr	r6, [sp, #12]
 80010f0:	1a89      	subs	r1, r1, r2
 80010f2:	0032      	movs	r2, r6
 80010f4:	042d      	lsls	r5, r5, #16
 80010f6:	431d      	orrs	r5, r3
 80010f8:	9f02      	ldr	r7, [sp, #8]
 80010fa:	042b      	lsls	r3, r5, #16
 80010fc:	0c1b      	lsrs	r3, r3, #16
 80010fe:	435a      	muls	r2, r3
 8001100:	437b      	muls	r3, r7
 8001102:	469c      	mov	ip, r3
 8001104:	0c28      	lsrs	r0, r5, #16
 8001106:	4346      	muls	r6, r0
 8001108:	0c13      	lsrs	r3, r2, #16
 800110a:	44b4      	add	ip, r6
 800110c:	4463      	add	r3, ip
 800110e:	4378      	muls	r0, r7
 8001110:	429e      	cmp	r6, r3
 8001112:	d903      	bls.n	800111c <__aeabi_ddiv+0x3d0>
 8001114:	2680      	movs	r6, #128	; 0x80
 8001116:	0276      	lsls	r6, r6, #9
 8001118:	46b4      	mov	ip, r6
 800111a:	4460      	add	r0, ip
 800111c:	0c1e      	lsrs	r6, r3, #16
 800111e:	0412      	lsls	r2, r2, #16
 8001120:	041b      	lsls	r3, r3, #16
 8001122:	0c12      	lsrs	r2, r2, #16
 8001124:	1830      	adds	r0, r6, r0
 8001126:	189b      	adds	r3, r3, r2
 8001128:	4281      	cmp	r1, r0
 800112a:	d306      	bcc.n	800113a <__aeabi_ddiv+0x3ee>
 800112c:	d002      	beq.n	8001134 <__aeabi_ddiv+0x3e8>
 800112e:	2301      	movs	r3, #1
 8001130:	431d      	orrs	r5, r3
 8001132:	e6ce      	b.n	8000ed2 <__aeabi_ddiv+0x186>
 8001134:	2b00      	cmp	r3, #0
 8001136:	d100      	bne.n	800113a <__aeabi_ddiv+0x3ee>
 8001138:	e6cb      	b.n	8000ed2 <__aeabi_ddiv+0x186>
 800113a:	1861      	adds	r1, r4, r1
 800113c:	1e6e      	subs	r6, r5, #1
 800113e:	42a1      	cmp	r1, r4
 8001140:	d200      	bcs.n	8001144 <__aeabi_ddiv+0x3f8>
 8001142:	e0a4      	b.n	800128e <__aeabi_ddiv+0x542>
 8001144:	4281      	cmp	r1, r0
 8001146:	d200      	bcs.n	800114a <__aeabi_ddiv+0x3fe>
 8001148:	e0c9      	b.n	80012de <__aeabi_ddiv+0x592>
 800114a:	d100      	bne.n	800114e <__aeabi_ddiv+0x402>
 800114c:	e0d9      	b.n	8001302 <__aeabi_ddiv+0x5b6>
 800114e:	0035      	movs	r5, r6
 8001150:	e7ed      	b.n	800112e <__aeabi_ddiv+0x3e2>
 8001152:	2501      	movs	r5, #1
 8001154:	426d      	negs	r5, r5
 8001156:	2101      	movs	r1, #1
 8001158:	1a89      	subs	r1, r1, r2
 800115a:	2938      	cmp	r1, #56	; 0x38
 800115c:	dd00      	ble.n	8001160 <__aeabi_ddiv+0x414>
 800115e:	e64c      	b.n	8000dfa <__aeabi_ddiv+0xae>
 8001160:	291f      	cmp	r1, #31
 8001162:	dc00      	bgt.n	8001166 <__aeabi_ddiv+0x41a>
 8001164:	e07f      	b.n	8001266 <__aeabi_ddiv+0x51a>
 8001166:	231f      	movs	r3, #31
 8001168:	425b      	negs	r3, r3
 800116a:	1a9a      	subs	r2, r3, r2
 800116c:	4643      	mov	r3, r8
 800116e:	40d3      	lsrs	r3, r2
 8001170:	2920      	cmp	r1, #32
 8001172:	d004      	beq.n	800117e <__aeabi_ddiv+0x432>
 8001174:	4644      	mov	r4, r8
 8001176:	4a65      	ldr	r2, [pc, #404]	; (800130c <__aeabi_ddiv+0x5c0>)
 8001178:	445a      	add	r2, fp
 800117a:	4094      	lsls	r4, r2
 800117c:	4325      	orrs	r5, r4
 800117e:	1e6a      	subs	r2, r5, #1
 8001180:	4195      	sbcs	r5, r2
 8001182:	2207      	movs	r2, #7
 8001184:	432b      	orrs	r3, r5
 8001186:	0015      	movs	r5, r2
 8001188:	2400      	movs	r4, #0
 800118a:	401d      	ands	r5, r3
 800118c:	421a      	tst	r2, r3
 800118e:	d100      	bne.n	8001192 <__aeabi_ddiv+0x446>
 8001190:	e0a1      	b.n	80012d6 <__aeabi_ddiv+0x58a>
 8001192:	220f      	movs	r2, #15
 8001194:	2400      	movs	r4, #0
 8001196:	401a      	ands	r2, r3
 8001198:	2a04      	cmp	r2, #4
 800119a:	d100      	bne.n	800119e <__aeabi_ddiv+0x452>
 800119c:	e098      	b.n	80012d0 <__aeabi_ddiv+0x584>
 800119e:	1d1a      	adds	r2, r3, #4
 80011a0:	429a      	cmp	r2, r3
 80011a2:	419b      	sbcs	r3, r3
 80011a4:	425b      	negs	r3, r3
 80011a6:	18e4      	adds	r4, r4, r3
 80011a8:	0013      	movs	r3, r2
 80011aa:	0222      	lsls	r2, r4, #8
 80011ac:	d400      	bmi.n	80011b0 <__aeabi_ddiv+0x464>
 80011ae:	e08f      	b.n	80012d0 <__aeabi_ddiv+0x584>
 80011b0:	2301      	movs	r3, #1
 80011b2:	2400      	movs	r4, #0
 80011b4:	2500      	movs	r5, #0
 80011b6:	e623      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 80011b8:	42b5      	cmp	r5, r6
 80011ba:	d300      	bcc.n	80011be <__aeabi_ddiv+0x472>
 80011bc:	e764      	b.n	8001088 <__aeabi_ddiv+0x33c>
 80011be:	4643      	mov	r3, r8
 80011c0:	1e5a      	subs	r2, r3, #1
 80011c2:	9b00      	ldr	r3, [sp, #0]
 80011c4:	469c      	mov	ip, r3
 80011c6:	4465      	add	r5, ip
 80011c8:	001f      	movs	r7, r3
 80011ca:	429d      	cmp	r5, r3
 80011cc:	419b      	sbcs	r3, r3
 80011ce:	425b      	negs	r3, r3
 80011d0:	191b      	adds	r3, r3, r4
 80011d2:	18c9      	adds	r1, r1, r3
 80011d4:	428c      	cmp	r4, r1
 80011d6:	d23a      	bcs.n	800124e <__aeabi_ddiv+0x502>
 80011d8:	4288      	cmp	r0, r1
 80011da:	d863      	bhi.n	80012a4 <__aeabi_ddiv+0x558>
 80011dc:	d060      	beq.n	80012a0 <__aeabi_ddiv+0x554>
 80011de:	4690      	mov	r8, r2
 80011e0:	e752      	b.n	8001088 <__aeabi_ddiv+0x33c>
 80011e2:	42aa      	cmp	r2, r5
 80011e4:	d900      	bls.n	80011e8 <__aeabi_ddiv+0x49c>
 80011e6:	e6ea      	b.n	8000fbe <__aeabi_ddiv+0x272>
 80011e8:	4643      	mov	r3, r8
 80011ea:	07de      	lsls	r6, r3, #31
 80011ec:	0858      	lsrs	r0, r3, #1
 80011ee:	086b      	lsrs	r3, r5, #1
 80011f0:	431e      	orrs	r6, r3
 80011f2:	07ed      	lsls	r5, r5, #31
 80011f4:	e6ea      	b.n	8000fcc <__aeabi_ddiv+0x280>
 80011f6:	4648      	mov	r0, r9
 80011f8:	f001 f856 	bl	80022a8 <__clzsi2>
 80011fc:	0001      	movs	r1, r0
 80011fe:	0002      	movs	r2, r0
 8001200:	3115      	adds	r1, #21
 8001202:	3220      	adds	r2, #32
 8001204:	291c      	cmp	r1, #28
 8001206:	dc00      	bgt.n	800120a <__aeabi_ddiv+0x4be>
 8001208:	e61a      	b.n	8000e40 <__aeabi_ddiv+0xf4>
 800120a:	464b      	mov	r3, r9
 800120c:	3808      	subs	r0, #8
 800120e:	4083      	lsls	r3, r0
 8001210:	2500      	movs	r5, #0
 8001212:	4698      	mov	r8, r3
 8001214:	e620      	b.n	8000e58 <__aeabi_ddiv+0x10c>
 8001216:	f001 f847 	bl	80022a8 <__clzsi2>
 800121a:	0003      	movs	r3, r0
 800121c:	001a      	movs	r2, r3
 800121e:	3215      	adds	r2, #21
 8001220:	3020      	adds	r0, #32
 8001222:	2a1c      	cmp	r2, #28
 8001224:	dc00      	bgt.n	8001228 <__aeabi_ddiv+0x4dc>
 8001226:	e630      	b.n	8000e8a <__aeabi_ddiv+0x13e>
 8001228:	4654      	mov	r4, sl
 800122a:	3b08      	subs	r3, #8
 800122c:	2200      	movs	r2, #0
 800122e:	409c      	lsls	r4, r3
 8001230:	e635      	b.n	8000e9e <__aeabi_ddiv+0x152>
 8001232:	230f      	movs	r3, #15
 8001234:	402b      	ands	r3, r5
 8001236:	2b04      	cmp	r3, #4
 8001238:	d100      	bne.n	800123c <__aeabi_ddiv+0x4f0>
 800123a:	e652      	b.n	8000ee2 <__aeabi_ddiv+0x196>
 800123c:	2305      	movs	r3, #5
 800123e:	425b      	negs	r3, r3
 8001240:	42ab      	cmp	r3, r5
 8001242:	419b      	sbcs	r3, r3
 8001244:	3504      	adds	r5, #4
 8001246:	425b      	negs	r3, r3
 8001248:	08ed      	lsrs	r5, r5, #3
 800124a:	4498      	add	r8, r3
 800124c:	e64a      	b.n	8000ee4 <__aeabi_ddiv+0x198>
 800124e:	428c      	cmp	r4, r1
 8001250:	d1c5      	bne.n	80011de <__aeabi_ddiv+0x492>
 8001252:	42af      	cmp	r7, r5
 8001254:	d9c0      	bls.n	80011d8 <__aeabi_ddiv+0x48c>
 8001256:	4690      	mov	r8, r2
 8001258:	e716      	b.n	8001088 <__aeabi_ddiv+0x33c>
 800125a:	428a      	cmp	r2, r1
 800125c:	d800      	bhi.n	8001260 <__aeabi_ddiv+0x514>
 800125e:	e6ea      	b.n	8001036 <__aeabi_ddiv+0x2ea>
 8001260:	1e83      	subs	r3, r0, #2
 8001262:	1909      	adds	r1, r1, r4
 8001264:	e6e7      	b.n	8001036 <__aeabi_ddiv+0x2ea>
 8001266:	4a2a      	ldr	r2, [pc, #168]	; (8001310 <__aeabi_ddiv+0x5c4>)
 8001268:	0028      	movs	r0, r5
 800126a:	445a      	add	r2, fp
 800126c:	4643      	mov	r3, r8
 800126e:	4095      	lsls	r5, r2
 8001270:	4093      	lsls	r3, r2
 8001272:	40c8      	lsrs	r0, r1
 8001274:	1e6a      	subs	r2, r5, #1
 8001276:	4195      	sbcs	r5, r2
 8001278:	4644      	mov	r4, r8
 800127a:	4303      	orrs	r3, r0
 800127c:	432b      	orrs	r3, r5
 800127e:	40cc      	lsrs	r4, r1
 8001280:	075a      	lsls	r2, r3, #29
 8001282:	d092      	beq.n	80011aa <__aeabi_ddiv+0x45e>
 8001284:	220f      	movs	r2, #15
 8001286:	401a      	ands	r2, r3
 8001288:	2a04      	cmp	r2, #4
 800128a:	d188      	bne.n	800119e <__aeabi_ddiv+0x452>
 800128c:	e78d      	b.n	80011aa <__aeabi_ddiv+0x45e>
 800128e:	0035      	movs	r5, r6
 8001290:	4281      	cmp	r1, r0
 8001292:	d000      	beq.n	8001296 <__aeabi_ddiv+0x54a>
 8001294:	e74b      	b.n	800112e <__aeabi_ddiv+0x3e2>
 8001296:	9a00      	ldr	r2, [sp, #0]
 8001298:	4293      	cmp	r3, r2
 800129a:	d000      	beq.n	800129e <__aeabi_ddiv+0x552>
 800129c:	e747      	b.n	800112e <__aeabi_ddiv+0x3e2>
 800129e:	e618      	b.n	8000ed2 <__aeabi_ddiv+0x186>
 80012a0:	42ae      	cmp	r6, r5
 80012a2:	d99c      	bls.n	80011de <__aeabi_ddiv+0x492>
 80012a4:	2302      	movs	r3, #2
 80012a6:	425b      	negs	r3, r3
 80012a8:	469c      	mov	ip, r3
 80012aa:	9b00      	ldr	r3, [sp, #0]
 80012ac:	44e0      	add	r8, ip
 80012ae:	469c      	mov	ip, r3
 80012b0:	4465      	add	r5, ip
 80012b2:	429d      	cmp	r5, r3
 80012b4:	419b      	sbcs	r3, r3
 80012b6:	425b      	negs	r3, r3
 80012b8:	191b      	adds	r3, r3, r4
 80012ba:	18c9      	adds	r1, r1, r3
 80012bc:	e6e4      	b.n	8001088 <__aeabi_ddiv+0x33c>
 80012be:	4a15      	ldr	r2, [pc, #84]	; (8001314 <__aeabi_ddiv+0x5c8>)
 80012c0:	445a      	add	r2, fp
 80012c2:	2a00      	cmp	r2, #0
 80012c4:	dc00      	bgt.n	80012c8 <__aeabi_ddiv+0x57c>
 80012c6:	e744      	b.n	8001152 <__aeabi_ddiv+0x406>
 80012c8:	2301      	movs	r3, #1
 80012ca:	2500      	movs	r5, #0
 80012cc:	4498      	add	r8, r3
 80012ce:	e609      	b.n	8000ee4 <__aeabi_ddiv+0x198>
 80012d0:	0765      	lsls	r5, r4, #29
 80012d2:	0264      	lsls	r4, r4, #9
 80012d4:	0b24      	lsrs	r4, r4, #12
 80012d6:	08db      	lsrs	r3, r3, #3
 80012d8:	431d      	orrs	r5, r3
 80012da:	2300      	movs	r3, #0
 80012dc:	e590      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 80012de:	9e00      	ldr	r6, [sp, #0]
 80012e0:	3d02      	subs	r5, #2
 80012e2:	0072      	lsls	r2, r6, #1
 80012e4:	42b2      	cmp	r2, r6
 80012e6:	41bf      	sbcs	r7, r7
 80012e8:	427f      	negs	r7, r7
 80012ea:	193c      	adds	r4, r7, r4
 80012ec:	1909      	adds	r1, r1, r4
 80012ee:	9200      	str	r2, [sp, #0]
 80012f0:	e7ce      	b.n	8001290 <__aeabi_ddiv+0x544>
 80012f2:	2480      	movs	r4, #128	; 0x80
 80012f4:	4643      	mov	r3, r8
 80012f6:	0324      	lsls	r4, r4, #12
 80012f8:	431c      	orrs	r4, r3
 80012fa:	0324      	lsls	r4, r4, #12
 80012fc:	4b06      	ldr	r3, [pc, #24]	; (8001318 <__aeabi_ddiv+0x5cc>)
 80012fe:	0b24      	lsrs	r4, r4, #12
 8001300:	e57e      	b.n	8000e00 <__aeabi_ddiv+0xb4>
 8001302:	9a00      	ldr	r2, [sp, #0]
 8001304:	429a      	cmp	r2, r3
 8001306:	d3ea      	bcc.n	80012de <__aeabi_ddiv+0x592>
 8001308:	0035      	movs	r5, r6
 800130a:	e7c4      	b.n	8001296 <__aeabi_ddiv+0x54a>
 800130c:	0000043e 	.word	0x0000043e
 8001310:	0000041e 	.word	0x0000041e
 8001314:	000003ff 	.word	0x000003ff
 8001318:	000007ff 	.word	0x000007ff

0800131c <__eqdf2>:
 800131c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800131e:	464f      	mov	r7, r9
 8001320:	4646      	mov	r6, r8
 8001322:	46d6      	mov	lr, sl
 8001324:	4694      	mov	ip, r2
 8001326:	4691      	mov	r9, r2
 8001328:	031a      	lsls	r2, r3, #12
 800132a:	0b12      	lsrs	r2, r2, #12
 800132c:	4d18      	ldr	r5, [pc, #96]	; (8001390 <__eqdf2+0x74>)
 800132e:	b5c0      	push	{r6, r7, lr}
 8001330:	004c      	lsls	r4, r1, #1
 8001332:	030f      	lsls	r7, r1, #12
 8001334:	4692      	mov	sl, r2
 8001336:	005a      	lsls	r2, r3, #1
 8001338:	0006      	movs	r6, r0
 800133a:	4680      	mov	r8, r0
 800133c:	0b3f      	lsrs	r7, r7, #12
 800133e:	2001      	movs	r0, #1
 8001340:	0d64      	lsrs	r4, r4, #21
 8001342:	0fc9      	lsrs	r1, r1, #31
 8001344:	0d52      	lsrs	r2, r2, #21
 8001346:	0fdb      	lsrs	r3, r3, #31
 8001348:	42ac      	cmp	r4, r5
 800134a:	d00a      	beq.n	8001362 <__eqdf2+0x46>
 800134c:	42aa      	cmp	r2, r5
 800134e:	d003      	beq.n	8001358 <__eqdf2+0x3c>
 8001350:	4294      	cmp	r4, r2
 8001352:	d101      	bne.n	8001358 <__eqdf2+0x3c>
 8001354:	4557      	cmp	r7, sl
 8001356:	d00d      	beq.n	8001374 <__eqdf2+0x58>
 8001358:	bce0      	pop	{r5, r6, r7}
 800135a:	46ba      	mov	sl, r7
 800135c:	46b1      	mov	r9, r6
 800135e:	46a8      	mov	r8, r5
 8001360:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001362:	003d      	movs	r5, r7
 8001364:	4335      	orrs	r5, r6
 8001366:	d1f7      	bne.n	8001358 <__eqdf2+0x3c>
 8001368:	42a2      	cmp	r2, r4
 800136a:	d1f5      	bne.n	8001358 <__eqdf2+0x3c>
 800136c:	4652      	mov	r2, sl
 800136e:	4665      	mov	r5, ip
 8001370:	432a      	orrs	r2, r5
 8001372:	d1f1      	bne.n	8001358 <__eqdf2+0x3c>
 8001374:	2001      	movs	r0, #1
 8001376:	45c8      	cmp	r8, r9
 8001378:	d1ee      	bne.n	8001358 <__eqdf2+0x3c>
 800137a:	4299      	cmp	r1, r3
 800137c:	d006      	beq.n	800138c <__eqdf2+0x70>
 800137e:	2c00      	cmp	r4, #0
 8001380:	d1ea      	bne.n	8001358 <__eqdf2+0x3c>
 8001382:	433e      	orrs	r6, r7
 8001384:	0030      	movs	r0, r6
 8001386:	1e46      	subs	r6, r0, #1
 8001388:	41b0      	sbcs	r0, r6
 800138a:	e7e5      	b.n	8001358 <__eqdf2+0x3c>
 800138c:	2000      	movs	r0, #0
 800138e:	e7e3      	b.n	8001358 <__eqdf2+0x3c>
 8001390:	000007ff 	.word	0x000007ff

08001394 <__gedf2>:
 8001394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001396:	464e      	mov	r6, r9
 8001398:	4645      	mov	r5, r8
 800139a:	4657      	mov	r7, sl
 800139c:	46de      	mov	lr, fp
 800139e:	0004      	movs	r4, r0
 80013a0:	0018      	movs	r0, r3
 80013a2:	b5e0      	push	{r5, r6, r7, lr}
 80013a4:	0016      	movs	r6, r2
 80013a6:	031b      	lsls	r3, r3, #12
 80013a8:	0b1b      	lsrs	r3, r3, #12
 80013aa:	4d32      	ldr	r5, [pc, #200]	; (8001474 <__gedf2+0xe0>)
 80013ac:	030f      	lsls	r7, r1, #12
 80013ae:	004a      	lsls	r2, r1, #1
 80013b0:	4699      	mov	r9, r3
 80013b2:	0043      	lsls	r3, r0, #1
 80013b4:	46a4      	mov	ip, r4
 80013b6:	46b0      	mov	r8, r6
 80013b8:	0b3f      	lsrs	r7, r7, #12
 80013ba:	0d52      	lsrs	r2, r2, #21
 80013bc:	0fc9      	lsrs	r1, r1, #31
 80013be:	0d5b      	lsrs	r3, r3, #21
 80013c0:	0fc0      	lsrs	r0, r0, #31
 80013c2:	42aa      	cmp	r2, r5
 80013c4:	d029      	beq.n	800141a <__gedf2+0x86>
 80013c6:	42ab      	cmp	r3, r5
 80013c8:	d018      	beq.n	80013fc <__gedf2+0x68>
 80013ca:	2a00      	cmp	r2, #0
 80013cc:	d12a      	bne.n	8001424 <__gedf2+0x90>
 80013ce:	433c      	orrs	r4, r7
 80013d0:	46a3      	mov	fp, r4
 80013d2:	4265      	negs	r5, r4
 80013d4:	4165      	adcs	r5, r4
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d102      	bne.n	80013e0 <__gedf2+0x4c>
 80013da:	464c      	mov	r4, r9
 80013dc:	4326      	orrs	r6, r4
 80013de:	d027      	beq.n	8001430 <__gedf2+0x9c>
 80013e0:	2d00      	cmp	r5, #0
 80013e2:	d115      	bne.n	8001410 <__gedf2+0x7c>
 80013e4:	4281      	cmp	r1, r0
 80013e6:	d028      	beq.n	800143a <__gedf2+0xa6>
 80013e8:	2002      	movs	r0, #2
 80013ea:	3901      	subs	r1, #1
 80013ec:	4008      	ands	r0, r1
 80013ee:	3801      	subs	r0, #1
 80013f0:	bcf0      	pop	{r4, r5, r6, r7}
 80013f2:	46bb      	mov	fp, r7
 80013f4:	46b2      	mov	sl, r6
 80013f6:	46a9      	mov	r9, r5
 80013f8:	46a0      	mov	r8, r4
 80013fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013fc:	464d      	mov	r5, r9
 80013fe:	432e      	orrs	r6, r5
 8001400:	d12f      	bne.n	8001462 <__gedf2+0xce>
 8001402:	2a00      	cmp	r2, #0
 8001404:	d1ee      	bne.n	80013e4 <__gedf2+0x50>
 8001406:	433c      	orrs	r4, r7
 8001408:	4265      	negs	r5, r4
 800140a:	4165      	adcs	r5, r4
 800140c:	2d00      	cmp	r5, #0
 800140e:	d0e9      	beq.n	80013e4 <__gedf2+0x50>
 8001410:	2800      	cmp	r0, #0
 8001412:	d1ed      	bne.n	80013f0 <__gedf2+0x5c>
 8001414:	2001      	movs	r0, #1
 8001416:	4240      	negs	r0, r0
 8001418:	e7ea      	b.n	80013f0 <__gedf2+0x5c>
 800141a:	003d      	movs	r5, r7
 800141c:	4325      	orrs	r5, r4
 800141e:	d120      	bne.n	8001462 <__gedf2+0xce>
 8001420:	4293      	cmp	r3, r2
 8001422:	d0eb      	beq.n	80013fc <__gedf2+0x68>
 8001424:	2b00      	cmp	r3, #0
 8001426:	d1dd      	bne.n	80013e4 <__gedf2+0x50>
 8001428:	464c      	mov	r4, r9
 800142a:	4326      	orrs	r6, r4
 800142c:	d1da      	bne.n	80013e4 <__gedf2+0x50>
 800142e:	e7db      	b.n	80013e8 <__gedf2+0x54>
 8001430:	465b      	mov	r3, fp
 8001432:	2000      	movs	r0, #0
 8001434:	2b00      	cmp	r3, #0
 8001436:	d0db      	beq.n	80013f0 <__gedf2+0x5c>
 8001438:	e7d6      	b.n	80013e8 <__gedf2+0x54>
 800143a:	429a      	cmp	r2, r3
 800143c:	dc0a      	bgt.n	8001454 <__gedf2+0xc0>
 800143e:	dbe7      	blt.n	8001410 <__gedf2+0x7c>
 8001440:	454f      	cmp	r7, r9
 8001442:	d8d1      	bhi.n	80013e8 <__gedf2+0x54>
 8001444:	d010      	beq.n	8001468 <__gedf2+0xd4>
 8001446:	2000      	movs	r0, #0
 8001448:	454f      	cmp	r7, r9
 800144a:	d2d1      	bcs.n	80013f0 <__gedf2+0x5c>
 800144c:	2900      	cmp	r1, #0
 800144e:	d0e1      	beq.n	8001414 <__gedf2+0x80>
 8001450:	0008      	movs	r0, r1
 8001452:	e7cd      	b.n	80013f0 <__gedf2+0x5c>
 8001454:	4243      	negs	r3, r0
 8001456:	4158      	adcs	r0, r3
 8001458:	2302      	movs	r3, #2
 800145a:	4240      	negs	r0, r0
 800145c:	4018      	ands	r0, r3
 800145e:	3801      	subs	r0, #1
 8001460:	e7c6      	b.n	80013f0 <__gedf2+0x5c>
 8001462:	2002      	movs	r0, #2
 8001464:	4240      	negs	r0, r0
 8001466:	e7c3      	b.n	80013f0 <__gedf2+0x5c>
 8001468:	45c4      	cmp	ip, r8
 800146a:	d8bd      	bhi.n	80013e8 <__gedf2+0x54>
 800146c:	2000      	movs	r0, #0
 800146e:	45c4      	cmp	ip, r8
 8001470:	d2be      	bcs.n	80013f0 <__gedf2+0x5c>
 8001472:	e7eb      	b.n	800144c <__gedf2+0xb8>
 8001474:	000007ff 	.word	0x000007ff

08001478 <__ledf2>:
 8001478:	b5f0      	push	{r4, r5, r6, r7, lr}
 800147a:	464e      	mov	r6, r9
 800147c:	4645      	mov	r5, r8
 800147e:	4657      	mov	r7, sl
 8001480:	46de      	mov	lr, fp
 8001482:	0004      	movs	r4, r0
 8001484:	0018      	movs	r0, r3
 8001486:	b5e0      	push	{r5, r6, r7, lr}
 8001488:	0016      	movs	r6, r2
 800148a:	031b      	lsls	r3, r3, #12
 800148c:	0b1b      	lsrs	r3, r3, #12
 800148e:	4d31      	ldr	r5, [pc, #196]	; (8001554 <__ledf2+0xdc>)
 8001490:	030f      	lsls	r7, r1, #12
 8001492:	004a      	lsls	r2, r1, #1
 8001494:	4699      	mov	r9, r3
 8001496:	0043      	lsls	r3, r0, #1
 8001498:	46a4      	mov	ip, r4
 800149a:	46b0      	mov	r8, r6
 800149c:	0b3f      	lsrs	r7, r7, #12
 800149e:	0d52      	lsrs	r2, r2, #21
 80014a0:	0fc9      	lsrs	r1, r1, #31
 80014a2:	0d5b      	lsrs	r3, r3, #21
 80014a4:	0fc0      	lsrs	r0, r0, #31
 80014a6:	42aa      	cmp	r2, r5
 80014a8:	d011      	beq.n	80014ce <__ledf2+0x56>
 80014aa:	42ab      	cmp	r3, r5
 80014ac:	d014      	beq.n	80014d8 <__ledf2+0x60>
 80014ae:	2a00      	cmp	r2, #0
 80014b0:	d12f      	bne.n	8001512 <__ledf2+0x9a>
 80014b2:	433c      	orrs	r4, r7
 80014b4:	46a3      	mov	fp, r4
 80014b6:	4265      	negs	r5, r4
 80014b8:	4165      	adcs	r5, r4
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d114      	bne.n	80014e8 <__ledf2+0x70>
 80014be:	464c      	mov	r4, r9
 80014c0:	4326      	orrs	r6, r4
 80014c2:	d111      	bne.n	80014e8 <__ledf2+0x70>
 80014c4:	465b      	mov	r3, fp
 80014c6:	2000      	movs	r0, #0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d017      	beq.n	80014fc <__ledf2+0x84>
 80014cc:	e010      	b.n	80014f0 <__ledf2+0x78>
 80014ce:	003d      	movs	r5, r7
 80014d0:	4325      	orrs	r5, r4
 80014d2:	d112      	bne.n	80014fa <__ledf2+0x82>
 80014d4:	4293      	cmp	r3, r2
 80014d6:	d11c      	bne.n	8001512 <__ledf2+0x9a>
 80014d8:	464d      	mov	r5, r9
 80014da:	432e      	orrs	r6, r5
 80014dc:	d10d      	bne.n	80014fa <__ledf2+0x82>
 80014de:	2a00      	cmp	r2, #0
 80014e0:	d104      	bne.n	80014ec <__ledf2+0x74>
 80014e2:	433c      	orrs	r4, r7
 80014e4:	4265      	negs	r5, r4
 80014e6:	4165      	adcs	r5, r4
 80014e8:	2d00      	cmp	r5, #0
 80014ea:	d10d      	bne.n	8001508 <__ledf2+0x90>
 80014ec:	4281      	cmp	r1, r0
 80014ee:	d016      	beq.n	800151e <__ledf2+0xa6>
 80014f0:	2002      	movs	r0, #2
 80014f2:	3901      	subs	r1, #1
 80014f4:	4008      	ands	r0, r1
 80014f6:	3801      	subs	r0, #1
 80014f8:	e000      	b.n	80014fc <__ledf2+0x84>
 80014fa:	2002      	movs	r0, #2
 80014fc:	bcf0      	pop	{r4, r5, r6, r7}
 80014fe:	46bb      	mov	fp, r7
 8001500:	46b2      	mov	sl, r6
 8001502:	46a9      	mov	r9, r5
 8001504:	46a0      	mov	r8, r4
 8001506:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001508:	2800      	cmp	r0, #0
 800150a:	d1f7      	bne.n	80014fc <__ledf2+0x84>
 800150c:	2001      	movs	r0, #1
 800150e:	4240      	negs	r0, r0
 8001510:	e7f4      	b.n	80014fc <__ledf2+0x84>
 8001512:	2b00      	cmp	r3, #0
 8001514:	d1ea      	bne.n	80014ec <__ledf2+0x74>
 8001516:	464c      	mov	r4, r9
 8001518:	4326      	orrs	r6, r4
 800151a:	d1e7      	bne.n	80014ec <__ledf2+0x74>
 800151c:	e7e8      	b.n	80014f0 <__ledf2+0x78>
 800151e:	429a      	cmp	r2, r3
 8001520:	dd06      	ble.n	8001530 <__ledf2+0xb8>
 8001522:	4243      	negs	r3, r0
 8001524:	4158      	adcs	r0, r3
 8001526:	2302      	movs	r3, #2
 8001528:	4240      	negs	r0, r0
 800152a:	4018      	ands	r0, r3
 800152c:	3801      	subs	r0, #1
 800152e:	e7e5      	b.n	80014fc <__ledf2+0x84>
 8001530:	429a      	cmp	r2, r3
 8001532:	dbe9      	blt.n	8001508 <__ledf2+0x90>
 8001534:	454f      	cmp	r7, r9
 8001536:	d8db      	bhi.n	80014f0 <__ledf2+0x78>
 8001538:	d006      	beq.n	8001548 <__ledf2+0xd0>
 800153a:	2000      	movs	r0, #0
 800153c:	454f      	cmp	r7, r9
 800153e:	d2dd      	bcs.n	80014fc <__ledf2+0x84>
 8001540:	2900      	cmp	r1, #0
 8001542:	d0e3      	beq.n	800150c <__ledf2+0x94>
 8001544:	0008      	movs	r0, r1
 8001546:	e7d9      	b.n	80014fc <__ledf2+0x84>
 8001548:	45c4      	cmp	ip, r8
 800154a:	d8d1      	bhi.n	80014f0 <__ledf2+0x78>
 800154c:	2000      	movs	r0, #0
 800154e:	45c4      	cmp	ip, r8
 8001550:	d2d4      	bcs.n	80014fc <__ledf2+0x84>
 8001552:	e7f5      	b.n	8001540 <__ledf2+0xc8>
 8001554:	000007ff 	.word	0x000007ff

08001558 <__aeabi_dmul>:
 8001558:	b5f0      	push	{r4, r5, r6, r7, lr}
 800155a:	4657      	mov	r7, sl
 800155c:	464e      	mov	r6, r9
 800155e:	4645      	mov	r5, r8
 8001560:	46de      	mov	lr, fp
 8001562:	b5e0      	push	{r5, r6, r7, lr}
 8001564:	4698      	mov	r8, r3
 8001566:	030c      	lsls	r4, r1, #12
 8001568:	004b      	lsls	r3, r1, #1
 800156a:	0006      	movs	r6, r0
 800156c:	4692      	mov	sl, r2
 800156e:	b087      	sub	sp, #28
 8001570:	0b24      	lsrs	r4, r4, #12
 8001572:	0d5b      	lsrs	r3, r3, #21
 8001574:	0fcf      	lsrs	r7, r1, #31
 8001576:	2b00      	cmp	r3, #0
 8001578:	d06c      	beq.n	8001654 <__aeabi_dmul+0xfc>
 800157a:	4add      	ldr	r2, [pc, #884]	; (80018f0 <__aeabi_dmul+0x398>)
 800157c:	4293      	cmp	r3, r2
 800157e:	d100      	bne.n	8001582 <__aeabi_dmul+0x2a>
 8001580:	e086      	b.n	8001690 <__aeabi_dmul+0x138>
 8001582:	0f42      	lsrs	r2, r0, #29
 8001584:	00e4      	lsls	r4, r4, #3
 8001586:	4314      	orrs	r4, r2
 8001588:	2280      	movs	r2, #128	; 0x80
 800158a:	0412      	lsls	r2, r2, #16
 800158c:	4314      	orrs	r4, r2
 800158e:	4ad9      	ldr	r2, [pc, #868]	; (80018f4 <__aeabi_dmul+0x39c>)
 8001590:	00c5      	lsls	r5, r0, #3
 8001592:	4694      	mov	ip, r2
 8001594:	4463      	add	r3, ip
 8001596:	9300      	str	r3, [sp, #0]
 8001598:	2300      	movs	r3, #0
 800159a:	4699      	mov	r9, r3
 800159c:	469b      	mov	fp, r3
 800159e:	4643      	mov	r3, r8
 80015a0:	4642      	mov	r2, r8
 80015a2:	031e      	lsls	r6, r3, #12
 80015a4:	0fd2      	lsrs	r2, r2, #31
 80015a6:	005b      	lsls	r3, r3, #1
 80015a8:	4650      	mov	r0, sl
 80015aa:	4690      	mov	r8, r2
 80015ac:	0b36      	lsrs	r6, r6, #12
 80015ae:	0d5b      	lsrs	r3, r3, #21
 80015b0:	d100      	bne.n	80015b4 <__aeabi_dmul+0x5c>
 80015b2:	e078      	b.n	80016a6 <__aeabi_dmul+0x14e>
 80015b4:	4ace      	ldr	r2, [pc, #824]	; (80018f0 <__aeabi_dmul+0x398>)
 80015b6:	4293      	cmp	r3, r2
 80015b8:	d01d      	beq.n	80015f6 <__aeabi_dmul+0x9e>
 80015ba:	49ce      	ldr	r1, [pc, #824]	; (80018f4 <__aeabi_dmul+0x39c>)
 80015bc:	0f42      	lsrs	r2, r0, #29
 80015be:	468c      	mov	ip, r1
 80015c0:	9900      	ldr	r1, [sp, #0]
 80015c2:	4463      	add	r3, ip
 80015c4:	00f6      	lsls	r6, r6, #3
 80015c6:	468c      	mov	ip, r1
 80015c8:	4316      	orrs	r6, r2
 80015ca:	2280      	movs	r2, #128	; 0x80
 80015cc:	449c      	add	ip, r3
 80015ce:	0412      	lsls	r2, r2, #16
 80015d0:	4663      	mov	r3, ip
 80015d2:	4316      	orrs	r6, r2
 80015d4:	00c2      	lsls	r2, r0, #3
 80015d6:	2000      	movs	r0, #0
 80015d8:	9300      	str	r3, [sp, #0]
 80015da:	9900      	ldr	r1, [sp, #0]
 80015dc:	4643      	mov	r3, r8
 80015de:	3101      	adds	r1, #1
 80015e0:	468c      	mov	ip, r1
 80015e2:	4649      	mov	r1, r9
 80015e4:	407b      	eors	r3, r7
 80015e6:	9301      	str	r3, [sp, #4]
 80015e8:	290f      	cmp	r1, #15
 80015ea:	d900      	bls.n	80015ee <__aeabi_dmul+0x96>
 80015ec:	e07e      	b.n	80016ec <__aeabi_dmul+0x194>
 80015ee:	4bc2      	ldr	r3, [pc, #776]	; (80018f8 <__aeabi_dmul+0x3a0>)
 80015f0:	0089      	lsls	r1, r1, #2
 80015f2:	5859      	ldr	r1, [r3, r1]
 80015f4:	468f      	mov	pc, r1
 80015f6:	4652      	mov	r2, sl
 80015f8:	9b00      	ldr	r3, [sp, #0]
 80015fa:	4332      	orrs	r2, r6
 80015fc:	d000      	beq.n	8001600 <__aeabi_dmul+0xa8>
 80015fe:	e156      	b.n	80018ae <__aeabi_dmul+0x356>
 8001600:	49bb      	ldr	r1, [pc, #748]	; (80018f0 <__aeabi_dmul+0x398>)
 8001602:	2600      	movs	r6, #0
 8001604:	468c      	mov	ip, r1
 8001606:	4463      	add	r3, ip
 8001608:	4649      	mov	r1, r9
 800160a:	9300      	str	r3, [sp, #0]
 800160c:	2302      	movs	r3, #2
 800160e:	4319      	orrs	r1, r3
 8001610:	4689      	mov	r9, r1
 8001612:	2002      	movs	r0, #2
 8001614:	e7e1      	b.n	80015da <__aeabi_dmul+0x82>
 8001616:	4643      	mov	r3, r8
 8001618:	9301      	str	r3, [sp, #4]
 800161a:	0034      	movs	r4, r6
 800161c:	0015      	movs	r5, r2
 800161e:	4683      	mov	fp, r0
 8001620:	465b      	mov	r3, fp
 8001622:	2b02      	cmp	r3, #2
 8001624:	d05e      	beq.n	80016e4 <__aeabi_dmul+0x18c>
 8001626:	2b03      	cmp	r3, #3
 8001628:	d100      	bne.n	800162c <__aeabi_dmul+0xd4>
 800162a:	e1f3      	b.n	8001a14 <__aeabi_dmul+0x4bc>
 800162c:	2b01      	cmp	r3, #1
 800162e:	d000      	beq.n	8001632 <__aeabi_dmul+0xda>
 8001630:	e118      	b.n	8001864 <__aeabi_dmul+0x30c>
 8001632:	2200      	movs	r2, #0
 8001634:	2400      	movs	r4, #0
 8001636:	2500      	movs	r5, #0
 8001638:	9b01      	ldr	r3, [sp, #4]
 800163a:	0512      	lsls	r2, r2, #20
 800163c:	4322      	orrs	r2, r4
 800163e:	07db      	lsls	r3, r3, #31
 8001640:	431a      	orrs	r2, r3
 8001642:	0028      	movs	r0, r5
 8001644:	0011      	movs	r1, r2
 8001646:	b007      	add	sp, #28
 8001648:	bcf0      	pop	{r4, r5, r6, r7}
 800164a:	46bb      	mov	fp, r7
 800164c:	46b2      	mov	sl, r6
 800164e:	46a9      	mov	r9, r5
 8001650:	46a0      	mov	r8, r4
 8001652:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001654:	0025      	movs	r5, r4
 8001656:	4305      	orrs	r5, r0
 8001658:	d100      	bne.n	800165c <__aeabi_dmul+0x104>
 800165a:	e141      	b.n	80018e0 <__aeabi_dmul+0x388>
 800165c:	2c00      	cmp	r4, #0
 800165e:	d100      	bne.n	8001662 <__aeabi_dmul+0x10a>
 8001660:	e1ad      	b.n	80019be <__aeabi_dmul+0x466>
 8001662:	0020      	movs	r0, r4
 8001664:	f000 fe20 	bl	80022a8 <__clzsi2>
 8001668:	0001      	movs	r1, r0
 800166a:	0002      	movs	r2, r0
 800166c:	390b      	subs	r1, #11
 800166e:	231d      	movs	r3, #29
 8001670:	0010      	movs	r0, r2
 8001672:	1a5b      	subs	r3, r3, r1
 8001674:	0031      	movs	r1, r6
 8001676:	0035      	movs	r5, r6
 8001678:	3808      	subs	r0, #8
 800167a:	4084      	lsls	r4, r0
 800167c:	40d9      	lsrs	r1, r3
 800167e:	4085      	lsls	r5, r0
 8001680:	430c      	orrs	r4, r1
 8001682:	489e      	ldr	r0, [pc, #632]	; (80018fc <__aeabi_dmul+0x3a4>)
 8001684:	1a83      	subs	r3, r0, r2
 8001686:	9300      	str	r3, [sp, #0]
 8001688:	2300      	movs	r3, #0
 800168a:	4699      	mov	r9, r3
 800168c:	469b      	mov	fp, r3
 800168e:	e786      	b.n	800159e <__aeabi_dmul+0x46>
 8001690:	0005      	movs	r5, r0
 8001692:	4325      	orrs	r5, r4
 8001694:	d000      	beq.n	8001698 <__aeabi_dmul+0x140>
 8001696:	e11c      	b.n	80018d2 <__aeabi_dmul+0x37a>
 8001698:	2208      	movs	r2, #8
 800169a:	9300      	str	r3, [sp, #0]
 800169c:	2302      	movs	r3, #2
 800169e:	2400      	movs	r4, #0
 80016a0:	4691      	mov	r9, r2
 80016a2:	469b      	mov	fp, r3
 80016a4:	e77b      	b.n	800159e <__aeabi_dmul+0x46>
 80016a6:	4652      	mov	r2, sl
 80016a8:	4332      	orrs	r2, r6
 80016aa:	d100      	bne.n	80016ae <__aeabi_dmul+0x156>
 80016ac:	e10a      	b.n	80018c4 <__aeabi_dmul+0x36c>
 80016ae:	2e00      	cmp	r6, #0
 80016b0:	d100      	bne.n	80016b4 <__aeabi_dmul+0x15c>
 80016b2:	e176      	b.n	80019a2 <__aeabi_dmul+0x44a>
 80016b4:	0030      	movs	r0, r6
 80016b6:	f000 fdf7 	bl	80022a8 <__clzsi2>
 80016ba:	0002      	movs	r2, r0
 80016bc:	3a0b      	subs	r2, #11
 80016be:	231d      	movs	r3, #29
 80016c0:	0001      	movs	r1, r0
 80016c2:	1a9b      	subs	r3, r3, r2
 80016c4:	4652      	mov	r2, sl
 80016c6:	3908      	subs	r1, #8
 80016c8:	40da      	lsrs	r2, r3
 80016ca:	408e      	lsls	r6, r1
 80016cc:	4316      	orrs	r6, r2
 80016ce:	4652      	mov	r2, sl
 80016d0:	408a      	lsls	r2, r1
 80016d2:	9b00      	ldr	r3, [sp, #0]
 80016d4:	4989      	ldr	r1, [pc, #548]	; (80018fc <__aeabi_dmul+0x3a4>)
 80016d6:	1a18      	subs	r0, r3, r0
 80016d8:	0003      	movs	r3, r0
 80016da:	468c      	mov	ip, r1
 80016dc:	4463      	add	r3, ip
 80016de:	2000      	movs	r0, #0
 80016e0:	9300      	str	r3, [sp, #0]
 80016e2:	e77a      	b.n	80015da <__aeabi_dmul+0x82>
 80016e4:	2400      	movs	r4, #0
 80016e6:	2500      	movs	r5, #0
 80016e8:	4a81      	ldr	r2, [pc, #516]	; (80018f0 <__aeabi_dmul+0x398>)
 80016ea:	e7a5      	b.n	8001638 <__aeabi_dmul+0xe0>
 80016ec:	0c2f      	lsrs	r7, r5, #16
 80016ee:	042d      	lsls	r5, r5, #16
 80016f0:	0c2d      	lsrs	r5, r5, #16
 80016f2:	002b      	movs	r3, r5
 80016f4:	0c11      	lsrs	r1, r2, #16
 80016f6:	0412      	lsls	r2, r2, #16
 80016f8:	0c12      	lsrs	r2, r2, #16
 80016fa:	4353      	muls	r3, r2
 80016fc:	4698      	mov	r8, r3
 80016fe:	0013      	movs	r3, r2
 8001700:	0028      	movs	r0, r5
 8001702:	437b      	muls	r3, r7
 8001704:	4699      	mov	r9, r3
 8001706:	4348      	muls	r0, r1
 8001708:	4448      	add	r0, r9
 800170a:	4683      	mov	fp, r0
 800170c:	4640      	mov	r0, r8
 800170e:	000b      	movs	r3, r1
 8001710:	0c00      	lsrs	r0, r0, #16
 8001712:	4682      	mov	sl, r0
 8001714:	4658      	mov	r0, fp
 8001716:	437b      	muls	r3, r7
 8001718:	4450      	add	r0, sl
 800171a:	9302      	str	r3, [sp, #8]
 800171c:	4581      	cmp	r9, r0
 800171e:	d906      	bls.n	800172e <__aeabi_dmul+0x1d6>
 8001720:	469a      	mov	sl, r3
 8001722:	2380      	movs	r3, #128	; 0x80
 8001724:	025b      	lsls	r3, r3, #9
 8001726:	4699      	mov	r9, r3
 8001728:	44ca      	add	sl, r9
 800172a:	4653      	mov	r3, sl
 800172c:	9302      	str	r3, [sp, #8]
 800172e:	0c03      	lsrs	r3, r0, #16
 8001730:	469b      	mov	fp, r3
 8001732:	4643      	mov	r3, r8
 8001734:	041b      	lsls	r3, r3, #16
 8001736:	0400      	lsls	r0, r0, #16
 8001738:	0c1b      	lsrs	r3, r3, #16
 800173a:	4698      	mov	r8, r3
 800173c:	0003      	movs	r3, r0
 800173e:	4443      	add	r3, r8
 8001740:	9304      	str	r3, [sp, #16]
 8001742:	0c33      	lsrs	r3, r6, #16
 8001744:	4699      	mov	r9, r3
 8001746:	002b      	movs	r3, r5
 8001748:	0436      	lsls	r6, r6, #16
 800174a:	0c36      	lsrs	r6, r6, #16
 800174c:	4373      	muls	r3, r6
 800174e:	4698      	mov	r8, r3
 8001750:	0033      	movs	r3, r6
 8001752:	437b      	muls	r3, r7
 8001754:	469a      	mov	sl, r3
 8001756:	464b      	mov	r3, r9
 8001758:	435d      	muls	r5, r3
 800175a:	435f      	muls	r7, r3
 800175c:	4643      	mov	r3, r8
 800175e:	4455      	add	r5, sl
 8001760:	0c18      	lsrs	r0, r3, #16
 8001762:	1940      	adds	r0, r0, r5
 8001764:	4582      	cmp	sl, r0
 8001766:	d903      	bls.n	8001770 <__aeabi_dmul+0x218>
 8001768:	2380      	movs	r3, #128	; 0x80
 800176a:	025b      	lsls	r3, r3, #9
 800176c:	469a      	mov	sl, r3
 800176e:	4457      	add	r7, sl
 8001770:	0c05      	lsrs	r5, r0, #16
 8001772:	19eb      	adds	r3, r5, r7
 8001774:	9305      	str	r3, [sp, #20]
 8001776:	4643      	mov	r3, r8
 8001778:	041d      	lsls	r5, r3, #16
 800177a:	0c2d      	lsrs	r5, r5, #16
 800177c:	0400      	lsls	r0, r0, #16
 800177e:	1940      	adds	r0, r0, r5
 8001780:	0c25      	lsrs	r5, r4, #16
 8001782:	0424      	lsls	r4, r4, #16
 8001784:	0c24      	lsrs	r4, r4, #16
 8001786:	0027      	movs	r7, r4
 8001788:	4357      	muls	r7, r2
 800178a:	436a      	muls	r2, r5
 800178c:	4690      	mov	r8, r2
 800178e:	002a      	movs	r2, r5
 8001790:	0c3b      	lsrs	r3, r7, #16
 8001792:	469a      	mov	sl, r3
 8001794:	434a      	muls	r2, r1
 8001796:	4361      	muls	r1, r4
 8001798:	4441      	add	r1, r8
 800179a:	4451      	add	r1, sl
 800179c:	4483      	add	fp, r0
 800179e:	4588      	cmp	r8, r1
 80017a0:	d903      	bls.n	80017aa <__aeabi_dmul+0x252>
 80017a2:	2380      	movs	r3, #128	; 0x80
 80017a4:	025b      	lsls	r3, r3, #9
 80017a6:	4698      	mov	r8, r3
 80017a8:	4442      	add	r2, r8
 80017aa:	043f      	lsls	r7, r7, #16
 80017ac:	0c0b      	lsrs	r3, r1, #16
 80017ae:	0c3f      	lsrs	r7, r7, #16
 80017b0:	0409      	lsls	r1, r1, #16
 80017b2:	19c9      	adds	r1, r1, r7
 80017b4:	0027      	movs	r7, r4
 80017b6:	4698      	mov	r8, r3
 80017b8:	464b      	mov	r3, r9
 80017ba:	4377      	muls	r7, r6
 80017bc:	435c      	muls	r4, r3
 80017be:	436e      	muls	r6, r5
 80017c0:	435d      	muls	r5, r3
 80017c2:	0c3b      	lsrs	r3, r7, #16
 80017c4:	4699      	mov	r9, r3
 80017c6:	19a4      	adds	r4, r4, r6
 80017c8:	444c      	add	r4, r9
 80017ca:	4442      	add	r2, r8
 80017cc:	9503      	str	r5, [sp, #12]
 80017ce:	42a6      	cmp	r6, r4
 80017d0:	d904      	bls.n	80017dc <__aeabi_dmul+0x284>
 80017d2:	2380      	movs	r3, #128	; 0x80
 80017d4:	025b      	lsls	r3, r3, #9
 80017d6:	4698      	mov	r8, r3
 80017d8:	4445      	add	r5, r8
 80017da:	9503      	str	r5, [sp, #12]
 80017dc:	9b02      	ldr	r3, [sp, #8]
 80017de:	043f      	lsls	r7, r7, #16
 80017e0:	445b      	add	r3, fp
 80017e2:	001e      	movs	r6, r3
 80017e4:	4283      	cmp	r3, r0
 80017e6:	4180      	sbcs	r0, r0
 80017e8:	0423      	lsls	r3, r4, #16
 80017ea:	4698      	mov	r8, r3
 80017ec:	9b05      	ldr	r3, [sp, #20]
 80017ee:	0c3f      	lsrs	r7, r7, #16
 80017f0:	4447      	add	r7, r8
 80017f2:	4698      	mov	r8, r3
 80017f4:	1876      	adds	r6, r6, r1
 80017f6:	428e      	cmp	r6, r1
 80017f8:	4189      	sbcs	r1, r1
 80017fa:	4447      	add	r7, r8
 80017fc:	4240      	negs	r0, r0
 80017fe:	183d      	adds	r5, r7, r0
 8001800:	46a8      	mov	r8, r5
 8001802:	4693      	mov	fp, r2
 8001804:	4249      	negs	r1, r1
 8001806:	468a      	mov	sl, r1
 8001808:	44c3      	add	fp, r8
 800180a:	429f      	cmp	r7, r3
 800180c:	41bf      	sbcs	r7, r7
 800180e:	4580      	cmp	r8, r0
 8001810:	4180      	sbcs	r0, r0
 8001812:	9b03      	ldr	r3, [sp, #12]
 8001814:	44da      	add	sl, fp
 8001816:	4698      	mov	r8, r3
 8001818:	4653      	mov	r3, sl
 800181a:	4240      	negs	r0, r0
 800181c:	427f      	negs	r7, r7
 800181e:	4307      	orrs	r7, r0
 8001820:	0c24      	lsrs	r4, r4, #16
 8001822:	4593      	cmp	fp, r2
 8001824:	4192      	sbcs	r2, r2
 8001826:	458a      	cmp	sl, r1
 8001828:	4189      	sbcs	r1, r1
 800182a:	193f      	adds	r7, r7, r4
 800182c:	0ddc      	lsrs	r4, r3, #23
 800182e:	9b04      	ldr	r3, [sp, #16]
 8001830:	0275      	lsls	r5, r6, #9
 8001832:	431d      	orrs	r5, r3
 8001834:	1e68      	subs	r0, r5, #1
 8001836:	4185      	sbcs	r5, r0
 8001838:	4653      	mov	r3, sl
 800183a:	4252      	negs	r2, r2
 800183c:	4249      	negs	r1, r1
 800183e:	430a      	orrs	r2, r1
 8001840:	18bf      	adds	r7, r7, r2
 8001842:	4447      	add	r7, r8
 8001844:	0df6      	lsrs	r6, r6, #23
 8001846:	027f      	lsls	r7, r7, #9
 8001848:	4335      	orrs	r5, r6
 800184a:	025a      	lsls	r2, r3, #9
 800184c:	433c      	orrs	r4, r7
 800184e:	4315      	orrs	r5, r2
 8001850:	01fb      	lsls	r3, r7, #7
 8001852:	d400      	bmi.n	8001856 <__aeabi_dmul+0x2fe>
 8001854:	e0c1      	b.n	80019da <__aeabi_dmul+0x482>
 8001856:	2101      	movs	r1, #1
 8001858:	086a      	lsrs	r2, r5, #1
 800185a:	400d      	ands	r5, r1
 800185c:	4315      	orrs	r5, r2
 800185e:	07e2      	lsls	r2, r4, #31
 8001860:	4315      	orrs	r5, r2
 8001862:	0864      	lsrs	r4, r4, #1
 8001864:	4926      	ldr	r1, [pc, #152]	; (8001900 <__aeabi_dmul+0x3a8>)
 8001866:	4461      	add	r1, ip
 8001868:	2900      	cmp	r1, #0
 800186a:	dd56      	ble.n	800191a <__aeabi_dmul+0x3c2>
 800186c:	076b      	lsls	r3, r5, #29
 800186e:	d009      	beq.n	8001884 <__aeabi_dmul+0x32c>
 8001870:	220f      	movs	r2, #15
 8001872:	402a      	ands	r2, r5
 8001874:	2a04      	cmp	r2, #4
 8001876:	d005      	beq.n	8001884 <__aeabi_dmul+0x32c>
 8001878:	1d2a      	adds	r2, r5, #4
 800187a:	42aa      	cmp	r2, r5
 800187c:	41ad      	sbcs	r5, r5
 800187e:	426d      	negs	r5, r5
 8001880:	1964      	adds	r4, r4, r5
 8001882:	0015      	movs	r5, r2
 8001884:	01e3      	lsls	r3, r4, #7
 8001886:	d504      	bpl.n	8001892 <__aeabi_dmul+0x33a>
 8001888:	2180      	movs	r1, #128	; 0x80
 800188a:	4a1e      	ldr	r2, [pc, #120]	; (8001904 <__aeabi_dmul+0x3ac>)
 800188c:	00c9      	lsls	r1, r1, #3
 800188e:	4014      	ands	r4, r2
 8001890:	4461      	add	r1, ip
 8001892:	4a1d      	ldr	r2, [pc, #116]	; (8001908 <__aeabi_dmul+0x3b0>)
 8001894:	4291      	cmp	r1, r2
 8001896:	dd00      	ble.n	800189a <__aeabi_dmul+0x342>
 8001898:	e724      	b.n	80016e4 <__aeabi_dmul+0x18c>
 800189a:	0762      	lsls	r2, r4, #29
 800189c:	08ed      	lsrs	r5, r5, #3
 800189e:	0264      	lsls	r4, r4, #9
 80018a0:	0549      	lsls	r1, r1, #21
 80018a2:	4315      	orrs	r5, r2
 80018a4:	0b24      	lsrs	r4, r4, #12
 80018a6:	0d4a      	lsrs	r2, r1, #21
 80018a8:	e6c6      	b.n	8001638 <__aeabi_dmul+0xe0>
 80018aa:	9701      	str	r7, [sp, #4]
 80018ac:	e6b8      	b.n	8001620 <__aeabi_dmul+0xc8>
 80018ae:	4a10      	ldr	r2, [pc, #64]	; (80018f0 <__aeabi_dmul+0x398>)
 80018b0:	2003      	movs	r0, #3
 80018b2:	4694      	mov	ip, r2
 80018b4:	4463      	add	r3, ip
 80018b6:	464a      	mov	r2, r9
 80018b8:	9300      	str	r3, [sp, #0]
 80018ba:	2303      	movs	r3, #3
 80018bc:	431a      	orrs	r2, r3
 80018be:	4691      	mov	r9, r2
 80018c0:	4652      	mov	r2, sl
 80018c2:	e68a      	b.n	80015da <__aeabi_dmul+0x82>
 80018c4:	4649      	mov	r1, r9
 80018c6:	2301      	movs	r3, #1
 80018c8:	4319      	orrs	r1, r3
 80018ca:	4689      	mov	r9, r1
 80018cc:	2600      	movs	r6, #0
 80018ce:	2001      	movs	r0, #1
 80018d0:	e683      	b.n	80015da <__aeabi_dmul+0x82>
 80018d2:	220c      	movs	r2, #12
 80018d4:	9300      	str	r3, [sp, #0]
 80018d6:	2303      	movs	r3, #3
 80018d8:	0005      	movs	r5, r0
 80018da:	4691      	mov	r9, r2
 80018dc:	469b      	mov	fp, r3
 80018de:	e65e      	b.n	800159e <__aeabi_dmul+0x46>
 80018e0:	2304      	movs	r3, #4
 80018e2:	4699      	mov	r9, r3
 80018e4:	2300      	movs	r3, #0
 80018e6:	9300      	str	r3, [sp, #0]
 80018e8:	3301      	adds	r3, #1
 80018ea:	2400      	movs	r4, #0
 80018ec:	469b      	mov	fp, r3
 80018ee:	e656      	b.n	800159e <__aeabi_dmul+0x46>
 80018f0:	000007ff 	.word	0x000007ff
 80018f4:	fffffc01 	.word	0xfffffc01
 80018f8:	08008ff0 	.word	0x08008ff0
 80018fc:	fffffc0d 	.word	0xfffffc0d
 8001900:	000003ff 	.word	0x000003ff
 8001904:	feffffff 	.word	0xfeffffff
 8001908:	000007fe 	.word	0x000007fe
 800190c:	2300      	movs	r3, #0
 800190e:	2480      	movs	r4, #128	; 0x80
 8001910:	2500      	movs	r5, #0
 8001912:	4a44      	ldr	r2, [pc, #272]	; (8001a24 <__aeabi_dmul+0x4cc>)
 8001914:	9301      	str	r3, [sp, #4]
 8001916:	0324      	lsls	r4, r4, #12
 8001918:	e68e      	b.n	8001638 <__aeabi_dmul+0xe0>
 800191a:	2001      	movs	r0, #1
 800191c:	1a40      	subs	r0, r0, r1
 800191e:	2838      	cmp	r0, #56	; 0x38
 8001920:	dd00      	ble.n	8001924 <__aeabi_dmul+0x3cc>
 8001922:	e686      	b.n	8001632 <__aeabi_dmul+0xda>
 8001924:	281f      	cmp	r0, #31
 8001926:	dd5b      	ble.n	80019e0 <__aeabi_dmul+0x488>
 8001928:	221f      	movs	r2, #31
 800192a:	0023      	movs	r3, r4
 800192c:	4252      	negs	r2, r2
 800192e:	1a51      	subs	r1, r2, r1
 8001930:	40cb      	lsrs	r3, r1
 8001932:	0019      	movs	r1, r3
 8001934:	2820      	cmp	r0, #32
 8001936:	d003      	beq.n	8001940 <__aeabi_dmul+0x3e8>
 8001938:	4a3b      	ldr	r2, [pc, #236]	; (8001a28 <__aeabi_dmul+0x4d0>)
 800193a:	4462      	add	r2, ip
 800193c:	4094      	lsls	r4, r2
 800193e:	4325      	orrs	r5, r4
 8001940:	1e6a      	subs	r2, r5, #1
 8001942:	4195      	sbcs	r5, r2
 8001944:	002a      	movs	r2, r5
 8001946:	430a      	orrs	r2, r1
 8001948:	2107      	movs	r1, #7
 800194a:	000d      	movs	r5, r1
 800194c:	2400      	movs	r4, #0
 800194e:	4015      	ands	r5, r2
 8001950:	4211      	tst	r1, r2
 8001952:	d05b      	beq.n	8001a0c <__aeabi_dmul+0x4b4>
 8001954:	210f      	movs	r1, #15
 8001956:	2400      	movs	r4, #0
 8001958:	4011      	ands	r1, r2
 800195a:	2904      	cmp	r1, #4
 800195c:	d053      	beq.n	8001a06 <__aeabi_dmul+0x4ae>
 800195e:	1d11      	adds	r1, r2, #4
 8001960:	4291      	cmp	r1, r2
 8001962:	4192      	sbcs	r2, r2
 8001964:	4252      	negs	r2, r2
 8001966:	18a4      	adds	r4, r4, r2
 8001968:	000a      	movs	r2, r1
 800196a:	0223      	lsls	r3, r4, #8
 800196c:	d54b      	bpl.n	8001a06 <__aeabi_dmul+0x4ae>
 800196e:	2201      	movs	r2, #1
 8001970:	2400      	movs	r4, #0
 8001972:	2500      	movs	r5, #0
 8001974:	e660      	b.n	8001638 <__aeabi_dmul+0xe0>
 8001976:	2380      	movs	r3, #128	; 0x80
 8001978:	031b      	lsls	r3, r3, #12
 800197a:	421c      	tst	r4, r3
 800197c:	d009      	beq.n	8001992 <__aeabi_dmul+0x43a>
 800197e:	421e      	tst	r6, r3
 8001980:	d107      	bne.n	8001992 <__aeabi_dmul+0x43a>
 8001982:	4333      	orrs	r3, r6
 8001984:	031c      	lsls	r4, r3, #12
 8001986:	4643      	mov	r3, r8
 8001988:	0015      	movs	r5, r2
 800198a:	0b24      	lsrs	r4, r4, #12
 800198c:	4a25      	ldr	r2, [pc, #148]	; (8001a24 <__aeabi_dmul+0x4cc>)
 800198e:	9301      	str	r3, [sp, #4]
 8001990:	e652      	b.n	8001638 <__aeabi_dmul+0xe0>
 8001992:	2280      	movs	r2, #128	; 0x80
 8001994:	0312      	lsls	r2, r2, #12
 8001996:	4314      	orrs	r4, r2
 8001998:	0324      	lsls	r4, r4, #12
 800199a:	4a22      	ldr	r2, [pc, #136]	; (8001a24 <__aeabi_dmul+0x4cc>)
 800199c:	0b24      	lsrs	r4, r4, #12
 800199e:	9701      	str	r7, [sp, #4]
 80019a0:	e64a      	b.n	8001638 <__aeabi_dmul+0xe0>
 80019a2:	f000 fc81 	bl	80022a8 <__clzsi2>
 80019a6:	0003      	movs	r3, r0
 80019a8:	001a      	movs	r2, r3
 80019aa:	3215      	adds	r2, #21
 80019ac:	3020      	adds	r0, #32
 80019ae:	2a1c      	cmp	r2, #28
 80019b0:	dc00      	bgt.n	80019b4 <__aeabi_dmul+0x45c>
 80019b2:	e684      	b.n	80016be <__aeabi_dmul+0x166>
 80019b4:	4656      	mov	r6, sl
 80019b6:	3b08      	subs	r3, #8
 80019b8:	2200      	movs	r2, #0
 80019ba:	409e      	lsls	r6, r3
 80019bc:	e689      	b.n	80016d2 <__aeabi_dmul+0x17a>
 80019be:	f000 fc73 	bl	80022a8 <__clzsi2>
 80019c2:	0001      	movs	r1, r0
 80019c4:	0002      	movs	r2, r0
 80019c6:	3115      	adds	r1, #21
 80019c8:	3220      	adds	r2, #32
 80019ca:	291c      	cmp	r1, #28
 80019cc:	dc00      	bgt.n	80019d0 <__aeabi_dmul+0x478>
 80019ce:	e64e      	b.n	800166e <__aeabi_dmul+0x116>
 80019d0:	0034      	movs	r4, r6
 80019d2:	3808      	subs	r0, #8
 80019d4:	2500      	movs	r5, #0
 80019d6:	4084      	lsls	r4, r0
 80019d8:	e653      	b.n	8001682 <__aeabi_dmul+0x12a>
 80019da:	9b00      	ldr	r3, [sp, #0]
 80019dc:	469c      	mov	ip, r3
 80019de:	e741      	b.n	8001864 <__aeabi_dmul+0x30c>
 80019e0:	4912      	ldr	r1, [pc, #72]	; (8001a2c <__aeabi_dmul+0x4d4>)
 80019e2:	0022      	movs	r2, r4
 80019e4:	4461      	add	r1, ip
 80019e6:	002e      	movs	r6, r5
 80019e8:	408d      	lsls	r5, r1
 80019ea:	408a      	lsls	r2, r1
 80019ec:	40c6      	lsrs	r6, r0
 80019ee:	1e69      	subs	r1, r5, #1
 80019f0:	418d      	sbcs	r5, r1
 80019f2:	4332      	orrs	r2, r6
 80019f4:	432a      	orrs	r2, r5
 80019f6:	40c4      	lsrs	r4, r0
 80019f8:	0753      	lsls	r3, r2, #29
 80019fa:	d0b6      	beq.n	800196a <__aeabi_dmul+0x412>
 80019fc:	210f      	movs	r1, #15
 80019fe:	4011      	ands	r1, r2
 8001a00:	2904      	cmp	r1, #4
 8001a02:	d1ac      	bne.n	800195e <__aeabi_dmul+0x406>
 8001a04:	e7b1      	b.n	800196a <__aeabi_dmul+0x412>
 8001a06:	0765      	lsls	r5, r4, #29
 8001a08:	0264      	lsls	r4, r4, #9
 8001a0a:	0b24      	lsrs	r4, r4, #12
 8001a0c:	08d2      	lsrs	r2, r2, #3
 8001a0e:	4315      	orrs	r5, r2
 8001a10:	2200      	movs	r2, #0
 8001a12:	e611      	b.n	8001638 <__aeabi_dmul+0xe0>
 8001a14:	2280      	movs	r2, #128	; 0x80
 8001a16:	0312      	lsls	r2, r2, #12
 8001a18:	4314      	orrs	r4, r2
 8001a1a:	0324      	lsls	r4, r4, #12
 8001a1c:	4a01      	ldr	r2, [pc, #4]	; (8001a24 <__aeabi_dmul+0x4cc>)
 8001a1e:	0b24      	lsrs	r4, r4, #12
 8001a20:	e60a      	b.n	8001638 <__aeabi_dmul+0xe0>
 8001a22:	46c0      	nop			; (mov r8, r8)
 8001a24:	000007ff 	.word	0x000007ff
 8001a28:	0000043e 	.word	0x0000043e
 8001a2c:	0000041e 	.word	0x0000041e

08001a30 <__aeabi_dsub>:
 8001a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a32:	4657      	mov	r7, sl
 8001a34:	464e      	mov	r6, r9
 8001a36:	4645      	mov	r5, r8
 8001a38:	46de      	mov	lr, fp
 8001a3a:	0004      	movs	r4, r0
 8001a3c:	b5e0      	push	{r5, r6, r7, lr}
 8001a3e:	001f      	movs	r7, r3
 8001a40:	0010      	movs	r0, r2
 8001a42:	030b      	lsls	r3, r1, #12
 8001a44:	0f62      	lsrs	r2, r4, #29
 8001a46:	004e      	lsls	r6, r1, #1
 8001a48:	0fcd      	lsrs	r5, r1, #31
 8001a4a:	0a5b      	lsrs	r3, r3, #9
 8001a4c:	0339      	lsls	r1, r7, #12
 8001a4e:	4313      	orrs	r3, r2
 8001a50:	0a49      	lsrs	r1, r1, #9
 8001a52:	00e2      	lsls	r2, r4, #3
 8001a54:	0f44      	lsrs	r4, r0, #29
 8001a56:	4321      	orrs	r1, r4
 8001a58:	4cc2      	ldr	r4, [pc, #776]	; (8001d64 <__aeabi_dsub+0x334>)
 8001a5a:	4691      	mov	r9, r2
 8001a5c:	4692      	mov	sl, r2
 8001a5e:	00c0      	lsls	r0, r0, #3
 8001a60:	007a      	lsls	r2, r7, #1
 8001a62:	4680      	mov	r8, r0
 8001a64:	0d76      	lsrs	r6, r6, #21
 8001a66:	0d52      	lsrs	r2, r2, #21
 8001a68:	0fff      	lsrs	r7, r7, #31
 8001a6a:	42a2      	cmp	r2, r4
 8001a6c:	d100      	bne.n	8001a70 <__aeabi_dsub+0x40>
 8001a6e:	e0b4      	b.n	8001bda <__aeabi_dsub+0x1aa>
 8001a70:	2401      	movs	r4, #1
 8001a72:	4067      	eors	r7, r4
 8001a74:	46bb      	mov	fp, r7
 8001a76:	42bd      	cmp	r5, r7
 8001a78:	d100      	bne.n	8001a7c <__aeabi_dsub+0x4c>
 8001a7a:	e088      	b.n	8001b8e <__aeabi_dsub+0x15e>
 8001a7c:	1ab4      	subs	r4, r6, r2
 8001a7e:	46a4      	mov	ip, r4
 8001a80:	2c00      	cmp	r4, #0
 8001a82:	dc00      	bgt.n	8001a86 <__aeabi_dsub+0x56>
 8001a84:	e0b2      	b.n	8001bec <__aeabi_dsub+0x1bc>
 8001a86:	2a00      	cmp	r2, #0
 8001a88:	d100      	bne.n	8001a8c <__aeabi_dsub+0x5c>
 8001a8a:	e0c5      	b.n	8001c18 <__aeabi_dsub+0x1e8>
 8001a8c:	4ab5      	ldr	r2, [pc, #724]	; (8001d64 <__aeabi_dsub+0x334>)
 8001a8e:	4296      	cmp	r6, r2
 8001a90:	d100      	bne.n	8001a94 <__aeabi_dsub+0x64>
 8001a92:	e28b      	b.n	8001fac <__aeabi_dsub+0x57c>
 8001a94:	2280      	movs	r2, #128	; 0x80
 8001a96:	0412      	lsls	r2, r2, #16
 8001a98:	4311      	orrs	r1, r2
 8001a9a:	4662      	mov	r2, ip
 8001a9c:	2a38      	cmp	r2, #56	; 0x38
 8001a9e:	dd00      	ble.n	8001aa2 <__aeabi_dsub+0x72>
 8001aa0:	e1a1      	b.n	8001de6 <__aeabi_dsub+0x3b6>
 8001aa2:	2a1f      	cmp	r2, #31
 8001aa4:	dd00      	ble.n	8001aa8 <__aeabi_dsub+0x78>
 8001aa6:	e216      	b.n	8001ed6 <__aeabi_dsub+0x4a6>
 8001aa8:	2720      	movs	r7, #32
 8001aaa:	000c      	movs	r4, r1
 8001aac:	1abf      	subs	r7, r7, r2
 8001aae:	40bc      	lsls	r4, r7
 8001ab0:	0002      	movs	r2, r0
 8001ab2:	46a0      	mov	r8, r4
 8001ab4:	4664      	mov	r4, ip
 8001ab6:	40b8      	lsls	r0, r7
 8001ab8:	40e2      	lsrs	r2, r4
 8001aba:	4644      	mov	r4, r8
 8001abc:	4314      	orrs	r4, r2
 8001abe:	0002      	movs	r2, r0
 8001ac0:	1e50      	subs	r0, r2, #1
 8001ac2:	4182      	sbcs	r2, r0
 8001ac4:	4660      	mov	r0, ip
 8001ac6:	40c1      	lsrs	r1, r0
 8001ac8:	4322      	orrs	r2, r4
 8001aca:	1a5b      	subs	r3, r3, r1
 8001acc:	4649      	mov	r1, r9
 8001ace:	1a8c      	subs	r4, r1, r2
 8001ad0:	45a1      	cmp	r9, r4
 8001ad2:	4192      	sbcs	r2, r2
 8001ad4:	4252      	negs	r2, r2
 8001ad6:	1a9b      	subs	r3, r3, r2
 8001ad8:	4698      	mov	r8, r3
 8001ada:	4643      	mov	r3, r8
 8001adc:	021b      	lsls	r3, r3, #8
 8001ade:	d400      	bmi.n	8001ae2 <__aeabi_dsub+0xb2>
 8001ae0:	e117      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 8001ae2:	4643      	mov	r3, r8
 8001ae4:	025b      	lsls	r3, r3, #9
 8001ae6:	0a5b      	lsrs	r3, r3, #9
 8001ae8:	4698      	mov	r8, r3
 8001aea:	4643      	mov	r3, r8
 8001aec:	2b00      	cmp	r3, #0
 8001aee:	d100      	bne.n	8001af2 <__aeabi_dsub+0xc2>
 8001af0:	e16c      	b.n	8001dcc <__aeabi_dsub+0x39c>
 8001af2:	4640      	mov	r0, r8
 8001af4:	f000 fbd8 	bl	80022a8 <__clzsi2>
 8001af8:	0002      	movs	r2, r0
 8001afa:	3a08      	subs	r2, #8
 8001afc:	2120      	movs	r1, #32
 8001afe:	0020      	movs	r0, r4
 8001b00:	4643      	mov	r3, r8
 8001b02:	1a89      	subs	r1, r1, r2
 8001b04:	4093      	lsls	r3, r2
 8001b06:	40c8      	lsrs	r0, r1
 8001b08:	4094      	lsls	r4, r2
 8001b0a:	4303      	orrs	r3, r0
 8001b0c:	4296      	cmp	r6, r2
 8001b0e:	dd00      	ble.n	8001b12 <__aeabi_dsub+0xe2>
 8001b10:	e157      	b.n	8001dc2 <__aeabi_dsub+0x392>
 8001b12:	1b96      	subs	r6, r2, r6
 8001b14:	1c71      	adds	r1, r6, #1
 8001b16:	291f      	cmp	r1, #31
 8001b18:	dd00      	ble.n	8001b1c <__aeabi_dsub+0xec>
 8001b1a:	e1cb      	b.n	8001eb4 <__aeabi_dsub+0x484>
 8001b1c:	2220      	movs	r2, #32
 8001b1e:	0018      	movs	r0, r3
 8001b20:	0026      	movs	r6, r4
 8001b22:	1a52      	subs	r2, r2, r1
 8001b24:	4094      	lsls	r4, r2
 8001b26:	4090      	lsls	r0, r2
 8001b28:	40ce      	lsrs	r6, r1
 8001b2a:	40cb      	lsrs	r3, r1
 8001b2c:	1e62      	subs	r2, r4, #1
 8001b2e:	4194      	sbcs	r4, r2
 8001b30:	4330      	orrs	r0, r6
 8001b32:	4698      	mov	r8, r3
 8001b34:	2600      	movs	r6, #0
 8001b36:	4304      	orrs	r4, r0
 8001b38:	0763      	lsls	r3, r4, #29
 8001b3a:	d009      	beq.n	8001b50 <__aeabi_dsub+0x120>
 8001b3c:	230f      	movs	r3, #15
 8001b3e:	4023      	ands	r3, r4
 8001b40:	2b04      	cmp	r3, #4
 8001b42:	d005      	beq.n	8001b50 <__aeabi_dsub+0x120>
 8001b44:	1d23      	adds	r3, r4, #4
 8001b46:	42a3      	cmp	r3, r4
 8001b48:	41a4      	sbcs	r4, r4
 8001b4a:	4264      	negs	r4, r4
 8001b4c:	44a0      	add	r8, r4
 8001b4e:	001c      	movs	r4, r3
 8001b50:	4643      	mov	r3, r8
 8001b52:	021b      	lsls	r3, r3, #8
 8001b54:	d400      	bmi.n	8001b58 <__aeabi_dsub+0x128>
 8001b56:	e0df      	b.n	8001d18 <__aeabi_dsub+0x2e8>
 8001b58:	4b82      	ldr	r3, [pc, #520]	; (8001d64 <__aeabi_dsub+0x334>)
 8001b5a:	3601      	adds	r6, #1
 8001b5c:	429e      	cmp	r6, r3
 8001b5e:	d100      	bne.n	8001b62 <__aeabi_dsub+0x132>
 8001b60:	e0fb      	b.n	8001d5a <__aeabi_dsub+0x32a>
 8001b62:	4642      	mov	r2, r8
 8001b64:	4b80      	ldr	r3, [pc, #512]	; (8001d68 <__aeabi_dsub+0x338>)
 8001b66:	08e4      	lsrs	r4, r4, #3
 8001b68:	401a      	ands	r2, r3
 8001b6a:	0013      	movs	r3, r2
 8001b6c:	0571      	lsls	r1, r6, #21
 8001b6e:	0752      	lsls	r2, r2, #29
 8001b70:	025b      	lsls	r3, r3, #9
 8001b72:	4322      	orrs	r2, r4
 8001b74:	0b1b      	lsrs	r3, r3, #12
 8001b76:	0d49      	lsrs	r1, r1, #21
 8001b78:	0509      	lsls	r1, r1, #20
 8001b7a:	07ed      	lsls	r5, r5, #31
 8001b7c:	4319      	orrs	r1, r3
 8001b7e:	4329      	orrs	r1, r5
 8001b80:	0010      	movs	r0, r2
 8001b82:	bcf0      	pop	{r4, r5, r6, r7}
 8001b84:	46bb      	mov	fp, r7
 8001b86:	46b2      	mov	sl, r6
 8001b88:	46a9      	mov	r9, r5
 8001b8a:	46a0      	mov	r8, r4
 8001b8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b8e:	1ab4      	subs	r4, r6, r2
 8001b90:	46a4      	mov	ip, r4
 8001b92:	2c00      	cmp	r4, #0
 8001b94:	dd58      	ble.n	8001c48 <__aeabi_dsub+0x218>
 8001b96:	2a00      	cmp	r2, #0
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x16c>
 8001b9a:	e09e      	b.n	8001cda <__aeabi_dsub+0x2aa>
 8001b9c:	4a71      	ldr	r2, [pc, #452]	; (8001d64 <__aeabi_dsub+0x334>)
 8001b9e:	4296      	cmp	r6, r2
 8001ba0:	d100      	bne.n	8001ba4 <__aeabi_dsub+0x174>
 8001ba2:	e13b      	b.n	8001e1c <__aeabi_dsub+0x3ec>
 8001ba4:	2280      	movs	r2, #128	; 0x80
 8001ba6:	0412      	lsls	r2, r2, #16
 8001ba8:	4311      	orrs	r1, r2
 8001baa:	4662      	mov	r2, ip
 8001bac:	2a38      	cmp	r2, #56	; 0x38
 8001bae:	dd00      	ble.n	8001bb2 <__aeabi_dsub+0x182>
 8001bb0:	e0c1      	b.n	8001d36 <__aeabi_dsub+0x306>
 8001bb2:	2a1f      	cmp	r2, #31
 8001bb4:	dc00      	bgt.n	8001bb8 <__aeabi_dsub+0x188>
 8001bb6:	e1bb      	b.n	8001f30 <__aeabi_dsub+0x500>
 8001bb8:	000c      	movs	r4, r1
 8001bba:	3a20      	subs	r2, #32
 8001bbc:	40d4      	lsrs	r4, r2
 8001bbe:	0022      	movs	r2, r4
 8001bc0:	4664      	mov	r4, ip
 8001bc2:	2c20      	cmp	r4, #32
 8001bc4:	d004      	beq.n	8001bd0 <__aeabi_dsub+0x1a0>
 8001bc6:	2740      	movs	r7, #64	; 0x40
 8001bc8:	1b3f      	subs	r7, r7, r4
 8001bca:	40b9      	lsls	r1, r7
 8001bcc:	4308      	orrs	r0, r1
 8001bce:	4680      	mov	r8, r0
 8001bd0:	4644      	mov	r4, r8
 8001bd2:	1e61      	subs	r1, r4, #1
 8001bd4:	418c      	sbcs	r4, r1
 8001bd6:	4314      	orrs	r4, r2
 8001bd8:	e0b1      	b.n	8001d3e <__aeabi_dsub+0x30e>
 8001bda:	000c      	movs	r4, r1
 8001bdc:	4304      	orrs	r4, r0
 8001bde:	d02a      	beq.n	8001c36 <__aeabi_dsub+0x206>
 8001be0:	46bb      	mov	fp, r7
 8001be2:	42bd      	cmp	r5, r7
 8001be4:	d02d      	beq.n	8001c42 <__aeabi_dsub+0x212>
 8001be6:	4c61      	ldr	r4, [pc, #388]	; (8001d6c <__aeabi_dsub+0x33c>)
 8001be8:	46a4      	mov	ip, r4
 8001bea:	44b4      	add	ip, r6
 8001bec:	4664      	mov	r4, ip
 8001bee:	2c00      	cmp	r4, #0
 8001bf0:	d05c      	beq.n	8001cac <__aeabi_dsub+0x27c>
 8001bf2:	1b94      	subs	r4, r2, r6
 8001bf4:	46a4      	mov	ip, r4
 8001bf6:	2e00      	cmp	r6, #0
 8001bf8:	d000      	beq.n	8001bfc <__aeabi_dsub+0x1cc>
 8001bfa:	e115      	b.n	8001e28 <__aeabi_dsub+0x3f8>
 8001bfc:	464d      	mov	r5, r9
 8001bfe:	431d      	orrs	r5, r3
 8001c00:	d100      	bne.n	8001c04 <__aeabi_dsub+0x1d4>
 8001c02:	e1c3      	b.n	8001f8c <__aeabi_dsub+0x55c>
 8001c04:	1e65      	subs	r5, r4, #1
 8001c06:	2c01      	cmp	r4, #1
 8001c08:	d100      	bne.n	8001c0c <__aeabi_dsub+0x1dc>
 8001c0a:	e20c      	b.n	8002026 <__aeabi_dsub+0x5f6>
 8001c0c:	4e55      	ldr	r6, [pc, #340]	; (8001d64 <__aeabi_dsub+0x334>)
 8001c0e:	42b4      	cmp	r4, r6
 8001c10:	d100      	bne.n	8001c14 <__aeabi_dsub+0x1e4>
 8001c12:	e1f8      	b.n	8002006 <__aeabi_dsub+0x5d6>
 8001c14:	46ac      	mov	ip, r5
 8001c16:	e10e      	b.n	8001e36 <__aeabi_dsub+0x406>
 8001c18:	000a      	movs	r2, r1
 8001c1a:	4302      	orrs	r2, r0
 8001c1c:	d100      	bne.n	8001c20 <__aeabi_dsub+0x1f0>
 8001c1e:	e136      	b.n	8001e8e <__aeabi_dsub+0x45e>
 8001c20:	0022      	movs	r2, r4
 8001c22:	3a01      	subs	r2, #1
 8001c24:	2c01      	cmp	r4, #1
 8001c26:	d100      	bne.n	8001c2a <__aeabi_dsub+0x1fa>
 8001c28:	e1c6      	b.n	8001fb8 <__aeabi_dsub+0x588>
 8001c2a:	4c4e      	ldr	r4, [pc, #312]	; (8001d64 <__aeabi_dsub+0x334>)
 8001c2c:	45a4      	cmp	ip, r4
 8001c2e:	d100      	bne.n	8001c32 <__aeabi_dsub+0x202>
 8001c30:	e0f4      	b.n	8001e1c <__aeabi_dsub+0x3ec>
 8001c32:	4694      	mov	ip, r2
 8001c34:	e731      	b.n	8001a9a <__aeabi_dsub+0x6a>
 8001c36:	2401      	movs	r4, #1
 8001c38:	4067      	eors	r7, r4
 8001c3a:	46bb      	mov	fp, r7
 8001c3c:	42bd      	cmp	r5, r7
 8001c3e:	d000      	beq.n	8001c42 <__aeabi_dsub+0x212>
 8001c40:	e71c      	b.n	8001a7c <__aeabi_dsub+0x4c>
 8001c42:	4c4a      	ldr	r4, [pc, #296]	; (8001d6c <__aeabi_dsub+0x33c>)
 8001c44:	46a4      	mov	ip, r4
 8001c46:	44b4      	add	ip, r6
 8001c48:	4664      	mov	r4, ip
 8001c4a:	2c00      	cmp	r4, #0
 8001c4c:	d100      	bne.n	8001c50 <__aeabi_dsub+0x220>
 8001c4e:	e0cf      	b.n	8001df0 <__aeabi_dsub+0x3c0>
 8001c50:	1b94      	subs	r4, r2, r6
 8001c52:	46a4      	mov	ip, r4
 8001c54:	2e00      	cmp	r6, #0
 8001c56:	d100      	bne.n	8001c5a <__aeabi_dsub+0x22a>
 8001c58:	e15c      	b.n	8001f14 <__aeabi_dsub+0x4e4>
 8001c5a:	4e42      	ldr	r6, [pc, #264]	; (8001d64 <__aeabi_dsub+0x334>)
 8001c5c:	42b2      	cmp	r2, r6
 8001c5e:	d100      	bne.n	8001c62 <__aeabi_dsub+0x232>
 8001c60:	e1ec      	b.n	800203c <__aeabi_dsub+0x60c>
 8001c62:	2680      	movs	r6, #128	; 0x80
 8001c64:	0436      	lsls	r6, r6, #16
 8001c66:	4333      	orrs	r3, r6
 8001c68:	4664      	mov	r4, ip
 8001c6a:	2c38      	cmp	r4, #56	; 0x38
 8001c6c:	dd00      	ble.n	8001c70 <__aeabi_dsub+0x240>
 8001c6e:	e1b3      	b.n	8001fd8 <__aeabi_dsub+0x5a8>
 8001c70:	2c1f      	cmp	r4, #31
 8001c72:	dd00      	ble.n	8001c76 <__aeabi_dsub+0x246>
 8001c74:	e238      	b.n	80020e8 <__aeabi_dsub+0x6b8>
 8001c76:	2620      	movs	r6, #32
 8001c78:	1b36      	subs	r6, r6, r4
 8001c7a:	001c      	movs	r4, r3
 8001c7c:	40b4      	lsls	r4, r6
 8001c7e:	464f      	mov	r7, r9
 8001c80:	46a0      	mov	r8, r4
 8001c82:	4664      	mov	r4, ip
 8001c84:	40e7      	lsrs	r7, r4
 8001c86:	4644      	mov	r4, r8
 8001c88:	433c      	orrs	r4, r7
 8001c8a:	464f      	mov	r7, r9
 8001c8c:	40b7      	lsls	r7, r6
 8001c8e:	003e      	movs	r6, r7
 8001c90:	1e77      	subs	r7, r6, #1
 8001c92:	41be      	sbcs	r6, r7
 8001c94:	4334      	orrs	r4, r6
 8001c96:	4666      	mov	r6, ip
 8001c98:	40f3      	lsrs	r3, r6
 8001c9a:	18c9      	adds	r1, r1, r3
 8001c9c:	1824      	adds	r4, r4, r0
 8001c9e:	4284      	cmp	r4, r0
 8001ca0:	419b      	sbcs	r3, r3
 8001ca2:	425b      	negs	r3, r3
 8001ca4:	4698      	mov	r8, r3
 8001ca6:	0016      	movs	r6, r2
 8001ca8:	4488      	add	r8, r1
 8001caa:	e04e      	b.n	8001d4a <__aeabi_dsub+0x31a>
 8001cac:	4a30      	ldr	r2, [pc, #192]	; (8001d70 <__aeabi_dsub+0x340>)
 8001cae:	1c74      	adds	r4, r6, #1
 8001cb0:	4214      	tst	r4, r2
 8001cb2:	d000      	beq.n	8001cb6 <__aeabi_dsub+0x286>
 8001cb4:	e0d6      	b.n	8001e64 <__aeabi_dsub+0x434>
 8001cb6:	464a      	mov	r2, r9
 8001cb8:	431a      	orrs	r2, r3
 8001cba:	2e00      	cmp	r6, #0
 8001cbc:	d000      	beq.n	8001cc0 <__aeabi_dsub+0x290>
 8001cbe:	e15b      	b.n	8001f78 <__aeabi_dsub+0x548>
 8001cc0:	2a00      	cmp	r2, #0
 8001cc2:	d100      	bne.n	8001cc6 <__aeabi_dsub+0x296>
 8001cc4:	e1a5      	b.n	8002012 <__aeabi_dsub+0x5e2>
 8001cc6:	000a      	movs	r2, r1
 8001cc8:	4302      	orrs	r2, r0
 8001cca:	d000      	beq.n	8001cce <__aeabi_dsub+0x29e>
 8001ccc:	e1bb      	b.n	8002046 <__aeabi_dsub+0x616>
 8001cce:	464a      	mov	r2, r9
 8001cd0:	0759      	lsls	r1, r3, #29
 8001cd2:	08d2      	lsrs	r2, r2, #3
 8001cd4:	430a      	orrs	r2, r1
 8001cd6:	08db      	lsrs	r3, r3, #3
 8001cd8:	e027      	b.n	8001d2a <__aeabi_dsub+0x2fa>
 8001cda:	000a      	movs	r2, r1
 8001cdc:	4302      	orrs	r2, r0
 8001cde:	d100      	bne.n	8001ce2 <__aeabi_dsub+0x2b2>
 8001ce0:	e174      	b.n	8001fcc <__aeabi_dsub+0x59c>
 8001ce2:	0022      	movs	r2, r4
 8001ce4:	3a01      	subs	r2, #1
 8001ce6:	2c01      	cmp	r4, #1
 8001ce8:	d005      	beq.n	8001cf6 <__aeabi_dsub+0x2c6>
 8001cea:	4c1e      	ldr	r4, [pc, #120]	; (8001d64 <__aeabi_dsub+0x334>)
 8001cec:	45a4      	cmp	ip, r4
 8001cee:	d100      	bne.n	8001cf2 <__aeabi_dsub+0x2c2>
 8001cf0:	e094      	b.n	8001e1c <__aeabi_dsub+0x3ec>
 8001cf2:	4694      	mov	ip, r2
 8001cf4:	e759      	b.n	8001baa <__aeabi_dsub+0x17a>
 8001cf6:	4448      	add	r0, r9
 8001cf8:	4548      	cmp	r0, r9
 8001cfa:	4192      	sbcs	r2, r2
 8001cfc:	185b      	adds	r3, r3, r1
 8001cfe:	4698      	mov	r8, r3
 8001d00:	0004      	movs	r4, r0
 8001d02:	4252      	negs	r2, r2
 8001d04:	4490      	add	r8, r2
 8001d06:	4643      	mov	r3, r8
 8001d08:	2602      	movs	r6, #2
 8001d0a:	021b      	lsls	r3, r3, #8
 8001d0c:	d500      	bpl.n	8001d10 <__aeabi_dsub+0x2e0>
 8001d0e:	e0c4      	b.n	8001e9a <__aeabi_dsub+0x46a>
 8001d10:	3e01      	subs	r6, #1
 8001d12:	0763      	lsls	r3, r4, #29
 8001d14:	d000      	beq.n	8001d18 <__aeabi_dsub+0x2e8>
 8001d16:	e711      	b.n	8001b3c <__aeabi_dsub+0x10c>
 8001d18:	4643      	mov	r3, r8
 8001d1a:	46b4      	mov	ip, r6
 8001d1c:	0759      	lsls	r1, r3, #29
 8001d1e:	08e2      	lsrs	r2, r4, #3
 8001d20:	430a      	orrs	r2, r1
 8001d22:	08db      	lsrs	r3, r3, #3
 8001d24:	490f      	ldr	r1, [pc, #60]	; (8001d64 <__aeabi_dsub+0x334>)
 8001d26:	458c      	cmp	ip, r1
 8001d28:	d040      	beq.n	8001dac <__aeabi_dsub+0x37c>
 8001d2a:	4661      	mov	r1, ip
 8001d2c:	031b      	lsls	r3, r3, #12
 8001d2e:	0549      	lsls	r1, r1, #21
 8001d30:	0b1b      	lsrs	r3, r3, #12
 8001d32:	0d49      	lsrs	r1, r1, #21
 8001d34:	e720      	b.n	8001b78 <__aeabi_dsub+0x148>
 8001d36:	4301      	orrs	r1, r0
 8001d38:	000c      	movs	r4, r1
 8001d3a:	1e61      	subs	r1, r4, #1
 8001d3c:	418c      	sbcs	r4, r1
 8001d3e:	444c      	add	r4, r9
 8001d40:	454c      	cmp	r4, r9
 8001d42:	4192      	sbcs	r2, r2
 8001d44:	4252      	negs	r2, r2
 8001d46:	4690      	mov	r8, r2
 8001d48:	4498      	add	r8, r3
 8001d4a:	4643      	mov	r3, r8
 8001d4c:	021b      	lsls	r3, r3, #8
 8001d4e:	d5e0      	bpl.n	8001d12 <__aeabi_dsub+0x2e2>
 8001d50:	4b04      	ldr	r3, [pc, #16]	; (8001d64 <__aeabi_dsub+0x334>)
 8001d52:	3601      	adds	r6, #1
 8001d54:	429e      	cmp	r6, r3
 8001d56:	d000      	beq.n	8001d5a <__aeabi_dsub+0x32a>
 8001d58:	e09f      	b.n	8001e9a <__aeabi_dsub+0x46a>
 8001d5a:	0031      	movs	r1, r6
 8001d5c:	2300      	movs	r3, #0
 8001d5e:	2200      	movs	r2, #0
 8001d60:	e70a      	b.n	8001b78 <__aeabi_dsub+0x148>
 8001d62:	46c0      	nop			; (mov r8, r8)
 8001d64:	000007ff 	.word	0x000007ff
 8001d68:	ff7fffff 	.word	0xff7fffff
 8001d6c:	fffff801 	.word	0xfffff801
 8001d70:	000007fe 	.word	0x000007fe
 8001d74:	2a00      	cmp	r2, #0
 8001d76:	d100      	bne.n	8001d7a <__aeabi_dsub+0x34a>
 8001d78:	e160      	b.n	800203c <__aeabi_dsub+0x60c>
 8001d7a:	000a      	movs	r2, r1
 8001d7c:	4302      	orrs	r2, r0
 8001d7e:	d04d      	beq.n	8001e1c <__aeabi_dsub+0x3ec>
 8001d80:	464a      	mov	r2, r9
 8001d82:	075c      	lsls	r4, r3, #29
 8001d84:	08d2      	lsrs	r2, r2, #3
 8001d86:	4322      	orrs	r2, r4
 8001d88:	2480      	movs	r4, #128	; 0x80
 8001d8a:	08db      	lsrs	r3, r3, #3
 8001d8c:	0324      	lsls	r4, r4, #12
 8001d8e:	4223      	tst	r3, r4
 8001d90:	d007      	beq.n	8001da2 <__aeabi_dsub+0x372>
 8001d92:	08ce      	lsrs	r6, r1, #3
 8001d94:	4226      	tst	r6, r4
 8001d96:	d104      	bne.n	8001da2 <__aeabi_dsub+0x372>
 8001d98:	465d      	mov	r5, fp
 8001d9a:	0033      	movs	r3, r6
 8001d9c:	08c2      	lsrs	r2, r0, #3
 8001d9e:	0749      	lsls	r1, r1, #29
 8001da0:	430a      	orrs	r2, r1
 8001da2:	0f51      	lsrs	r1, r2, #29
 8001da4:	00d2      	lsls	r2, r2, #3
 8001da6:	08d2      	lsrs	r2, r2, #3
 8001da8:	0749      	lsls	r1, r1, #29
 8001daa:	430a      	orrs	r2, r1
 8001dac:	0011      	movs	r1, r2
 8001dae:	4319      	orrs	r1, r3
 8001db0:	d100      	bne.n	8001db4 <__aeabi_dsub+0x384>
 8001db2:	e1c8      	b.n	8002146 <__aeabi_dsub+0x716>
 8001db4:	2180      	movs	r1, #128	; 0x80
 8001db6:	0309      	lsls	r1, r1, #12
 8001db8:	430b      	orrs	r3, r1
 8001dba:	031b      	lsls	r3, r3, #12
 8001dbc:	49d5      	ldr	r1, [pc, #852]	; (8002114 <__aeabi_dsub+0x6e4>)
 8001dbe:	0b1b      	lsrs	r3, r3, #12
 8001dc0:	e6da      	b.n	8001b78 <__aeabi_dsub+0x148>
 8001dc2:	49d5      	ldr	r1, [pc, #852]	; (8002118 <__aeabi_dsub+0x6e8>)
 8001dc4:	1ab6      	subs	r6, r6, r2
 8001dc6:	400b      	ands	r3, r1
 8001dc8:	4698      	mov	r8, r3
 8001dca:	e6b5      	b.n	8001b38 <__aeabi_dsub+0x108>
 8001dcc:	0020      	movs	r0, r4
 8001dce:	f000 fa6b 	bl	80022a8 <__clzsi2>
 8001dd2:	0002      	movs	r2, r0
 8001dd4:	3218      	adds	r2, #24
 8001dd6:	2a1f      	cmp	r2, #31
 8001dd8:	dc00      	bgt.n	8001ddc <__aeabi_dsub+0x3ac>
 8001dda:	e68f      	b.n	8001afc <__aeabi_dsub+0xcc>
 8001ddc:	0023      	movs	r3, r4
 8001dde:	3808      	subs	r0, #8
 8001de0:	4083      	lsls	r3, r0
 8001de2:	2400      	movs	r4, #0
 8001de4:	e692      	b.n	8001b0c <__aeabi_dsub+0xdc>
 8001de6:	4308      	orrs	r0, r1
 8001de8:	0002      	movs	r2, r0
 8001dea:	1e50      	subs	r0, r2, #1
 8001dec:	4182      	sbcs	r2, r0
 8001dee:	e66d      	b.n	8001acc <__aeabi_dsub+0x9c>
 8001df0:	4cca      	ldr	r4, [pc, #808]	; (800211c <__aeabi_dsub+0x6ec>)
 8001df2:	1c72      	adds	r2, r6, #1
 8001df4:	4222      	tst	r2, r4
 8001df6:	d000      	beq.n	8001dfa <__aeabi_dsub+0x3ca>
 8001df8:	e0ad      	b.n	8001f56 <__aeabi_dsub+0x526>
 8001dfa:	464a      	mov	r2, r9
 8001dfc:	431a      	orrs	r2, r3
 8001dfe:	2e00      	cmp	r6, #0
 8001e00:	d1b8      	bne.n	8001d74 <__aeabi_dsub+0x344>
 8001e02:	2a00      	cmp	r2, #0
 8001e04:	d100      	bne.n	8001e08 <__aeabi_dsub+0x3d8>
 8001e06:	e158      	b.n	80020ba <__aeabi_dsub+0x68a>
 8001e08:	000a      	movs	r2, r1
 8001e0a:	4302      	orrs	r2, r0
 8001e0c:	d000      	beq.n	8001e10 <__aeabi_dsub+0x3e0>
 8001e0e:	e159      	b.n	80020c4 <__aeabi_dsub+0x694>
 8001e10:	464a      	mov	r2, r9
 8001e12:	0759      	lsls	r1, r3, #29
 8001e14:	08d2      	lsrs	r2, r2, #3
 8001e16:	430a      	orrs	r2, r1
 8001e18:	08db      	lsrs	r3, r3, #3
 8001e1a:	e786      	b.n	8001d2a <__aeabi_dsub+0x2fa>
 8001e1c:	464a      	mov	r2, r9
 8001e1e:	0759      	lsls	r1, r3, #29
 8001e20:	08d2      	lsrs	r2, r2, #3
 8001e22:	430a      	orrs	r2, r1
 8001e24:	08db      	lsrs	r3, r3, #3
 8001e26:	e7c1      	b.n	8001dac <__aeabi_dsub+0x37c>
 8001e28:	4dba      	ldr	r5, [pc, #744]	; (8002114 <__aeabi_dsub+0x6e4>)
 8001e2a:	42aa      	cmp	r2, r5
 8001e2c:	d100      	bne.n	8001e30 <__aeabi_dsub+0x400>
 8001e2e:	e11e      	b.n	800206e <__aeabi_dsub+0x63e>
 8001e30:	2580      	movs	r5, #128	; 0x80
 8001e32:	042d      	lsls	r5, r5, #16
 8001e34:	432b      	orrs	r3, r5
 8001e36:	4664      	mov	r4, ip
 8001e38:	2c38      	cmp	r4, #56	; 0x38
 8001e3a:	dc5d      	bgt.n	8001ef8 <__aeabi_dsub+0x4c8>
 8001e3c:	2c1f      	cmp	r4, #31
 8001e3e:	dd00      	ble.n	8001e42 <__aeabi_dsub+0x412>
 8001e40:	e0d0      	b.n	8001fe4 <__aeabi_dsub+0x5b4>
 8001e42:	2520      	movs	r5, #32
 8001e44:	4667      	mov	r7, ip
 8001e46:	1b2d      	subs	r5, r5, r4
 8001e48:	464e      	mov	r6, r9
 8001e4a:	001c      	movs	r4, r3
 8001e4c:	40fe      	lsrs	r6, r7
 8001e4e:	40ac      	lsls	r4, r5
 8001e50:	4334      	orrs	r4, r6
 8001e52:	464e      	mov	r6, r9
 8001e54:	40ae      	lsls	r6, r5
 8001e56:	0035      	movs	r5, r6
 8001e58:	40fb      	lsrs	r3, r7
 8001e5a:	1e6e      	subs	r6, r5, #1
 8001e5c:	41b5      	sbcs	r5, r6
 8001e5e:	1ac9      	subs	r1, r1, r3
 8001e60:	432c      	orrs	r4, r5
 8001e62:	e04e      	b.n	8001f02 <__aeabi_dsub+0x4d2>
 8001e64:	464a      	mov	r2, r9
 8001e66:	1a14      	subs	r4, r2, r0
 8001e68:	45a1      	cmp	r9, r4
 8001e6a:	4192      	sbcs	r2, r2
 8001e6c:	4252      	negs	r2, r2
 8001e6e:	4690      	mov	r8, r2
 8001e70:	1a5f      	subs	r7, r3, r1
 8001e72:	003a      	movs	r2, r7
 8001e74:	4647      	mov	r7, r8
 8001e76:	1bd2      	subs	r2, r2, r7
 8001e78:	4690      	mov	r8, r2
 8001e7a:	0212      	lsls	r2, r2, #8
 8001e7c:	d500      	bpl.n	8001e80 <__aeabi_dsub+0x450>
 8001e7e:	e08b      	b.n	8001f98 <__aeabi_dsub+0x568>
 8001e80:	4642      	mov	r2, r8
 8001e82:	4322      	orrs	r2, r4
 8001e84:	d000      	beq.n	8001e88 <__aeabi_dsub+0x458>
 8001e86:	e630      	b.n	8001aea <__aeabi_dsub+0xba>
 8001e88:	2300      	movs	r3, #0
 8001e8a:	2500      	movs	r5, #0
 8001e8c:	e74d      	b.n	8001d2a <__aeabi_dsub+0x2fa>
 8001e8e:	464a      	mov	r2, r9
 8001e90:	0759      	lsls	r1, r3, #29
 8001e92:	08d2      	lsrs	r2, r2, #3
 8001e94:	430a      	orrs	r2, r1
 8001e96:	08db      	lsrs	r3, r3, #3
 8001e98:	e744      	b.n	8001d24 <__aeabi_dsub+0x2f4>
 8001e9a:	4642      	mov	r2, r8
 8001e9c:	4b9e      	ldr	r3, [pc, #632]	; (8002118 <__aeabi_dsub+0x6e8>)
 8001e9e:	0861      	lsrs	r1, r4, #1
 8001ea0:	401a      	ands	r2, r3
 8001ea2:	0013      	movs	r3, r2
 8001ea4:	2201      	movs	r2, #1
 8001ea6:	4014      	ands	r4, r2
 8001ea8:	430c      	orrs	r4, r1
 8001eaa:	07da      	lsls	r2, r3, #31
 8001eac:	085b      	lsrs	r3, r3, #1
 8001eae:	4698      	mov	r8, r3
 8001eb0:	4314      	orrs	r4, r2
 8001eb2:	e641      	b.n	8001b38 <__aeabi_dsub+0x108>
 8001eb4:	001a      	movs	r2, r3
 8001eb6:	3e1f      	subs	r6, #31
 8001eb8:	40f2      	lsrs	r2, r6
 8001eba:	0016      	movs	r6, r2
 8001ebc:	2920      	cmp	r1, #32
 8001ebe:	d003      	beq.n	8001ec8 <__aeabi_dsub+0x498>
 8001ec0:	2240      	movs	r2, #64	; 0x40
 8001ec2:	1a51      	subs	r1, r2, r1
 8001ec4:	408b      	lsls	r3, r1
 8001ec6:	431c      	orrs	r4, r3
 8001ec8:	1e62      	subs	r2, r4, #1
 8001eca:	4194      	sbcs	r4, r2
 8001ecc:	2300      	movs	r3, #0
 8001ece:	4334      	orrs	r4, r6
 8001ed0:	4698      	mov	r8, r3
 8001ed2:	2600      	movs	r6, #0
 8001ed4:	e71d      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 8001ed6:	000c      	movs	r4, r1
 8001ed8:	3a20      	subs	r2, #32
 8001eda:	40d4      	lsrs	r4, r2
 8001edc:	0022      	movs	r2, r4
 8001ede:	4664      	mov	r4, ip
 8001ee0:	2c20      	cmp	r4, #32
 8001ee2:	d004      	beq.n	8001eee <__aeabi_dsub+0x4be>
 8001ee4:	2740      	movs	r7, #64	; 0x40
 8001ee6:	1b3f      	subs	r7, r7, r4
 8001ee8:	40b9      	lsls	r1, r7
 8001eea:	4308      	orrs	r0, r1
 8001eec:	4680      	mov	r8, r0
 8001eee:	4644      	mov	r4, r8
 8001ef0:	1e61      	subs	r1, r4, #1
 8001ef2:	418c      	sbcs	r4, r1
 8001ef4:	4322      	orrs	r2, r4
 8001ef6:	e5e9      	b.n	8001acc <__aeabi_dsub+0x9c>
 8001ef8:	464c      	mov	r4, r9
 8001efa:	4323      	orrs	r3, r4
 8001efc:	001c      	movs	r4, r3
 8001efe:	1e63      	subs	r3, r4, #1
 8001f00:	419c      	sbcs	r4, r3
 8001f02:	1b04      	subs	r4, r0, r4
 8001f04:	42a0      	cmp	r0, r4
 8001f06:	419b      	sbcs	r3, r3
 8001f08:	425b      	negs	r3, r3
 8001f0a:	1acb      	subs	r3, r1, r3
 8001f0c:	4698      	mov	r8, r3
 8001f0e:	465d      	mov	r5, fp
 8001f10:	0016      	movs	r6, r2
 8001f12:	e5e2      	b.n	8001ada <__aeabi_dsub+0xaa>
 8001f14:	464e      	mov	r6, r9
 8001f16:	431e      	orrs	r6, r3
 8001f18:	d100      	bne.n	8001f1c <__aeabi_dsub+0x4ec>
 8001f1a:	e0ae      	b.n	800207a <__aeabi_dsub+0x64a>
 8001f1c:	1e66      	subs	r6, r4, #1
 8001f1e:	2c01      	cmp	r4, #1
 8001f20:	d100      	bne.n	8001f24 <__aeabi_dsub+0x4f4>
 8001f22:	e0fd      	b.n	8002120 <__aeabi_dsub+0x6f0>
 8001f24:	4f7b      	ldr	r7, [pc, #492]	; (8002114 <__aeabi_dsub+0x6e4>)
 8001f26:	42bc      	cmp	r4, r7
 8001f28:	d100      	bne.n	8001f2c <__aeabi_dsub+0x4fc>
 8001f2a:	e107      	b.n	800213c <__aeabi_dsub+0x70c>
 8001f2c:	46b4      	mov	ip, r6
 8001f2e:	e69b      	b.n	8001c68 <__aeabi_dsub+0x238>
 8001f30:	4664      	mov	r4, ip
 8001f32:	2220      	movs	r2, #32
 8001f34:	1b12      	subs	r2, r2, r4
 8001f36:	000c      	movs	r4, r1
 8001f38:	4094      	lsls	r4, r2
 8001f3a:	0007      	movs	r7, r0
 8001f3c:	4090      	lsls	r0, r2
 8001f3e:	46a0      	mov	r8, r4
 8001f40:	4664      	mov	r4, ip
 8001f42:	1e42      	subs	r2, r0, #1
 8001f44:	4190      	sbcs	r0, r2
 8001f46:	4662      	mov	r2, ip
 8001f48:	40e7      	lsrs	r7, r4
 8001f4a:	4644      	mov	r4, r8
 8001f4c:	40d1      	lsrs	r1, r2
 8001f4e:	433c      	orrs	r4, r7
 8001f50:	4304      	orrs	r4, r0
 8001f52:	185b      	adds	r3, r3, r1
 8001f54:	e6f3      	b.n	8001d3e <__aeabi_dsub+0x30e>
 8001f56:	4c6f      	ldr	r4, [pc, #444]	; (8002114 <__aeabi_dsub+0x6e4>)
 8001f58:	42a2      	cmp	r2, r4
 8001f5a:	d100      	bne.n	8001f5e <__aeabi_dsub+0x52e>
 8001f5c:	e0d5      	b.n	800210a <__aeabi_dsub+0x6da>
 8001f5e:	4448      	add	r0, r9
 8001f60:	185b      	adds	r3, r3, r1
 8001f62:	4548      	cmp	r0, r9
 8001f64:	4189      	sbcs	r1, r1
 8001f66:	4249      	negs	r1, r1
 8001f68:	185b      	adds	r3, r3, r1
 8001f6a:	07dc      	lsls	r4, r3, #31
 8001f6c:	0840      	lsrs	r0, r0, #1
 8001f6e:	085b      	lsrs	r3, r3, #1
 8001f70:	4698      	mov	r8, r3
 8001f72:	0016      	movs	r6, r2
 8001f74:	4304      	orrs	r4, r0
 8001f76:	e6cc      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 8001f78:	2a00      	cmp	r2, #0
 8001f7a:	d000      	beq.n	8001f7e <__aeabi_dsub+0x54e>
 8001f7c:	e082      	b.n	8002084 <__aeabi_dsub+0x654>
 8001f7e:	000a      	movs	r2, r1
 8001f80:	4302      	orrs	r2, r0
 8001f82:	d140      	bne.n	8002006 <__aeabi_dsub+0x5d6>
 8001f84:	2380      	movs	r3, #128	; 0x80
 8001f86:	2500      	movs	r5, #0
 8001f88:	031b      	lsls	r3, r3, #12
 8001f8a:	e713      	b.n	8001db4 <__aeabi_dsub+0x384>
 8001f8c:	074b      	lsls	r3, r1, #29
 8001f8e:	08c2      	lsrs	r2, r0, #3
 8001f90:	431a      	orrs	r2, r3
 8001f92:	465d      	mov	r5, fp
 8001f94:	08cb      	lsrs	r3, r1, #3
 8001f96:	e6c5      	b.n	8001d24 <__aeabi_dsub+0x2f4>
 8001f98:	464a      	mov	r2, r9
 8001f9a:	1a84      	subs	r4, r0, r2
 8001f9c:	42a0      	cmp	r0, r4
 8001f9e:	4192      	sbcs	r2, r2
 8001fa0:	1acb      	subs	r3, r1, r3
 8001fa2:	4252      	negs	r2, r2
 8001fa4:	1a9b      	subs	r3, r3, r2
 8001fa6:	4698      	mov	r8, r3
 8001fa8:	465d      	mov	r5, fp
 8001faa:	e59e      	b.n	8001aea <__aeabi_dsub+0xba>
 8001fac:	464a      	mov	r2, r9
 8001fae:	0759      	lsls	r1, r3, #29
 8001fb0:	08d2      	lsrs	r2, r2, #3
 8001fb2:	430a      	orrs	r2, r1
 8001fb4:	08db      	lsrs	r3, r3, #3
 8001fb6:	e6f9      	b.n	8001dac <__aeabi_dsub+0x37c>
 8001fb8:	464a      	mov	r2, r9
 8001fba:	1a14      	subs	r4, r2, r0
 8001fbc:	45a1      	cmp	r9, r4
 8001fbe:	4192      	sbcs	r2, r2
 8001fc0:	1a5b      	subs	r3, r3, r1
 8001fc2:	4252      	negs	r2, r2
 8001fc4:	1a9b      	subs	r3, r3, r2
 8001fc6:	4698      	mov	r8, r3
 8001fc8:	2601      	movs	r6, #1
 8001fca:	e586      	b.n	8001ada <__aeabi_dsub+0xaa>
 8001fcc:	464a      	mov	r2, r9
 8001fce:	0759      	lsls	r1, r3, #29
 8001fd0:	08d2      	lsrs	r2, r2, #3
 8001fd2:	430a      	orrs	r2, r1
 8001fd4:	08db      	lsrs	r3, r3, #3
 8001fd6:	e6a5      	b.n	8001d24 <__aeabi_dsub+0x2f4>
 8001fd8:	464c      	mov	r4, r9
 8001fda:	4323      	orrs	r3, r4
 8001fdc:	001c      	movs	r4, r3
 8001fde:	1e63      	subs	r3, r4, #1
 8001fe0:	419c      	sbcs	r4, r3
 8001fe2:	e65b      	b.n	8001c9c <__aeabi_dsub+0x26c>
 8001fe4:	4665      	mov	r5, ip
 8001fe6:	001e      	movs	r6, r3
 8001fe8:	3d20      	subs	r5, #32
 8001fea:	40ee      	lsrs	r6, r5
 8001fec:	2c20      	cmp	r4, #32
 8001fee:	d005      	beq.n	8001ffc <__aeabi_dsub+0x5cc>
 8001ff0:	2540      	movs	r5, #64	; 0x40
 8001ff2:	1b2d      	subs	r5, r5, r4
 8001ff4:	40ab      	lsls	r3, r5
 8001ff6:	464c      	mov	r4, r9
 8001ff8:	431c      	orrs	r4, r3
 8001ffa:	46a2      	mov	sl, r4
 8001ffc:	4654      	mov	r4, sl
 8001ffe:	1e63      	subs	r3, r4, #1
 8002000:	419c      	sbcs	r4, r3
 8002002:	4334      	orrs	r4, r6
 8002004:	e77d      	b.n	8001f02 <__aeabi_dsub+0x4d2>
 8002006:	074b      	lsls	r3, r1, #29
 8002008:	08c2      	lsrs	r2, r0, #3
 800200a:	431a      	orrs	r2, r3
 800200c:	465d      	mov	r5, fp
 800200e:	08cb      	lsrs	r3, r1, #3
 8002010:	e6cc      	b.n	8001dac <__aeabi_dsub+0x37c>
 8002012:	000a      	movs	r2, r1
 8002014:	4302      	orrs	r2, r0
 8002016:	d100      	bne.n	800201a <__aeabi_dsub+0x5ea>
 8002018:	e736      	b.n	8001e88 <__aeabi_dsub+0x458>
 800201a:	074b      	lsls	r3, r1, #29
 800201c:	08c2      	lsrs	r2, r0, #3
 800201e:	431a      	orrs	r2, r3
 8002020:	465d      	mov	r5, fp
 8002022:	08cb      	lsrs	r3, r1, #3
 8002024:	e681      	b.n	8001d2a <__aeabi_dsub+0x2fa>
 8002026:	464a      	mov	r2, r9
 8002028:	1a84      	subs	r4, r0, r2
 800202a:	42a0      	cmp	r0, r4
 800202c:	4192      	sbcs	r2, r2
 800202e:	1acb      	subs	r3, r1, r3
 8002030:	4252      	negs	r2, r2
 8002032:	1a9b      	subs	r3, r3, r2
 8002034:	4698      	mov	r8, r3
 8002036:	465d      	mov	r5, fp
 8002038:	2601      	movs	r6, #1
 800203a:	e54e      	b.n	8001ada <__aeabi_dsub+0xaa>
 800203c:	074b      	lsls	r3, r1, #29
 800203e:	08c2      	lsrs	r2, r0, #3
 8002040:	431a      	orrs	r2, r3
 8002042:	08cb      	lsrs	r3, r1, #3
 8002044:	e6b2      	b.n	8001dac <__aeabi_dsub+0x37c>
 8002046:	464a      	mov	r2, r9
 8002048:	1a14      	subs	r4, r2, r0
 800204a:	45a1      	cmp	r9, r4
 800204c:	4192      	sbcs	r2, r2
 800204e:	1a5f      	subs	r7, r3, r1
 8002050:	4252      	negs	r2, r2
 8002052:	1aba      	subs	r2, r7, r2
 8002054:	4690      	mov	r8, r2
 8002056:	0212      	lsls	r2, r2, #8
 8002058:	d56b      	bpl.n	8002132 <__aeabi_dsub+0x702>
 800205a:	464a      	mov	r2, r9
 800205c:	1a84      	subs	r4, r0, r2
 800205e:	42a0      	cmp	r0, r4
 8002060:	4192      	sbcs	r2, r2
 8002062:	1acb      	subs	r3, r1, r3
 8002064:	4252      	negs	r2, r2
 8002066:	1a9b      	subs	r3, r3, r2
 8002068:	4698      	mov	r8, r3
 800206a:	465d      	mov	r5, fp
 800206c:	e564      	b.n	8001b38 <__aeabi_dsub+0x108>
 800206e:	074b      	lsls	r3, r1, #29
 8002070:	08c2      	lsrs	r2, r0, #3
 8002072:	431a      	orrs	r2, r3
 8002074:	465d      	mov	r5, fp
 8002076:	08cb      	lsrs	r3, r1, #3
 8002078:	e698      	b.n	8001dac <__aeabi_dsub+0x37c>
 800207a:	074b      	lsls	r3, r1, #29
 800207c:	08c2      	lsrs	r2, r0, #3
 800207e:	431a      	orrs	r2, r3
 8002080:	08cb      	lsrs	r3, r1, #3
 8002082:	e64f      	b.n	8001d24 <__aeabi_dsub+0x2f4>
 8002084:	000a      	movs	r2, r1
 8002086:	4302      	orrs	r2, r0
 8002088:	d090      	beq.n	8001fac <__aeabi_dsub+0x57c>
 800208a:	464a      	mov	r2, r9
 800208c:	075c      	lsls	r4, r3, #29
 800208e:	08d2      	lsrs	r2, r2, #3
 8002090:	4314      	orrs	r4, r2
 8002092:	2280      	movs	r2, #128	; 0x80
 8002094:	08db      	lsrs	r3, r3, #3
 8002096:	0312      	lsls	r2, r2, #12
 8002098:	4213      	tst	r3, r2
 800209a:	d008      	beq.n	80020ae <__aeabi_dsub+0x67e>
 800209c:	08ce      	lsrs	r6, r1, #3
 800209e:	4216      	tst	r6, r2
 80020a0:	d105      	bne.n	80020ae <__aeabi_dsub+0x67e>
 80020a2:	08c0      	lsrs	r0, r0, #3
 80020a4:	0749      	lsls	r1, r1, #29
 80020a6:	4308      	orrs	r0, r1
 80020a8:	0004      	movs	r4, r0
 80020aa:	465d      	mov	r5, fp
 80020ac:	0033      	movs	r3, r6
 80020ae:	0f61      	lsrs	r1, r4, #29
 80020b0:	00e2      	lsls	r2, r4, #3
 80020b2:	0749      	lsls	r1, r1, #29
 80020b4:	08d2      	lsrs	r2, r2, #3
 80020b6:	430a      	orrs	r2, r1
 80020b8:	e678      	b.n	8001dac <__aeabi_dsub+0x37c>
 80020ba:	074b      	lsls	r3, r1, #29
 80020bc:	08c2      	lsrs	r2, r0, #3
 80020be:	431a      	orrs	r2, r3
 80020c0:	08cb      	lsrs	r3, r1, #3
 80020c2:	e632      	b.n	8001d2a <__aeabi_dsub+0x2fa>
 80020c4:	4448      	add	r0, r9
 80020c6:	185b      	adds	r3, r3, r1
 80020c8:	4548      	cmp	r0, r9
 80020ca:	4192      	sbcs	r2, r2
 80020cc:	4698      	mov	r8, r3
 80020ce:	4252      	negs	r2, r2
 80020d0:	4490      	add	r8, r2
 80020d2:	4643      	mov	r3, r8
 80020d4:	0004      	movs	r4, r0
 80020d6:	021b      	lsls	r3, r3, #8
 80020d8:	d400      	bmi.n	80020dc <__aeabi_dsub+0x6ac>
 80020da:	e61a      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 80020dc:	4642      	mov	r2, r8
 80020de:	4b0e      	ldr	r3, [pc, #56]	; (8002118 <__aeabi_dsub+0x6e8>)
 80020e0:	2601      	movs	r6, #1
 80020e2:	401a      	ands	r2, r3
 80020e4:	4690      	mov	r8, r2
 80020e6:	e614      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 80020e8:	4666      	mov	r6, ip
 80020ea:	001f      	movs	r7, r3
 80020ec:	3e20      	subs	r6, #32
 80020ee:	40f7      	lsrs	r7, r6
 80020f0:	2c20      	cmp	r4, #32
 80020f2:	d005      	beq.n	8002100 <__aeabi_dsub+0x6d0>
 80020f4:	2640      	movs	r6, #64	; 0x40
 80020f6:	1b36      	subs	r6, r6, r4
 80020f8:	40b3      	lsls	r3, r6
 80020fa:	464c      	mov	r4, r9
 80020fc:	431c      	orrs	r4, r3
 80020fe:	46a2      	mov	sl, r4
 8002100:	4654      	mov	r4, sl
 8002102:	1e63      	subs	r3, r4, #1
 8002104:	419c      	sbcs	r4, r3
 8002106:	433c      	orrs	r4, r7
 8002108:	e5c8      	b.n	8001c9c <__aeabi_dsub+0x26c>
 800210a:	0011      	movs	r1, r2
 800210c:	2300      	movs	r3, #0
 800210e:	2200      	movs	r2, #0
 8002110:	e532      	b.n	8001b78 <__aeabi_dsub+0x148>
 8002112:	46c0      	nop			; (mov r8, r8)
 8002114:	000007ff 	.word	0x000007ff
 8002118:	ff7fffff 	.word	0xff7fffff
 800211c:	000007fe 	.word	0x000007fe
 8002120:	464a      	mov	r2, r9
 8002122:	1814      	adds	r4, r2, r0
 8002124:	4284      	cmp	r4, r0
 8002126:	4192      	sbcs	r2, r2
 8002128:	185b      	adds	r3, r3, r1
 800212a:	4698      	mov	r8, r3
 800212c:	4252      	negs	r2, r2
 800212e:	4490      	add	r8, r2
 8002130:	e5e9      	b.n	8001d06 <__aeabi_dsub+0x2d6>
 8002132:	4642      	mov	r2, r8
 8002134:	4322      	orrs	r2, r4
 8002136:	d100      	bne.n	800213a <__aeabi_dsub+0x70a>
 8002138:	e6a6      	b.n	8001e88 <__aeabi_dsub+0x458>
 800213a:	e5ea      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 800213c:	074b      	lsls	r3, r1, #29
 800213e:	08c2      	lsrs	r2, r0, #3
 8002140:	431a      	orrs	r2, r3
 8002142:	08cb      	lsrs	r3, r1, #3
 8002144:	e632      	b.n	8001dac <__aeabi_dsub+0x37c>
 8002146:	2200      	movs	r2, #0
 8002148:	4901      	ldr	r1, [pc, #4]	; (8002150 <__aeabi_dsub+0x720>)
 800214a:	0013      	movs	r3, r2
 800214c:	e514      	b.n	8001b78 <__aeabi_dsub+0x148>
 800214e:	46c0      	nop			; (mov r8, r8)
 8002150:	000007ff 	.word	0x000007ff

08002154 <__aeabi_dcmpun>:
 8002154:	b570      	push	{r4, r5, r6, lr}
 8002156:	0005      	movs	r5, r0
 8002158:	480c      	ldr	r0, [pc, #48]	; (800218c <__aeabi_dcmpun+0x38>)
 800215a:	030c      	lsls	r4, r1, #12
 800215c:	0016      	movs	r6, r2
 800215e:	0049      	lsls	r1, r1, #1
 8002160:	031a      	lsls	r2, r3, #12
 8002162:	005b      	lsls	r3, r3, #1
 8002164:	0b24      	lsrs	r4, r4, #12
 8002166:	0d49      	lsrs	r1, r1, #21
 8002168:	0b12      	lsrs	r2, r2, #12
 800216a:	0d5b      	lsrs	r3, r3, #21
 800216c:	4281      	cmp	r1, r0
 800216e:	d008      	beq.n	8002182 <__aeabi_dcmpun+0x2e>
 8002170:	4906      	ldr	r1, [pc, #24]	; (800218c <__aeabi_dcmpun+0x38>)
 8002172:	2000      	movs	r0, #0
 8002174:	428b      	cmp	r3, r1
 8002176:	d103      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002178:	4332      	orrs	r2, r6
 800217a:	0010      	movs	r0, r2
 800217c:	1e42      	subs	r2, r0, #1
 800217e:	4190      	sbcs	r0, r2
 8002180:	bd70      	pop	{r4, r5, r6, pc}
 8002182:	2001      	movs	r0, #1
 8002184:	432c      	orrs	r4, r5
 8002186:	d1fb      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002188:	e7f2      	b.n	8002170 <__aeabi_dcmpun+0x1c>
 800218a:	46c0      	nop			; (mov r8, r8)
 800218c:	000007ff 	.word	0x000007ff

08002190 <__aeabi_d2iz>:
 8002190:	000a      	movs	r2, r1
 8002192:	b530      	push	{r4, r5, lr}
 8002194:	4c13      	ldr	r4, [pc, #76]	; (80021e4 <__aeabi_d2iz+0x54>)
 8002196:	0053      	lsls	r3, r2, #1
 8002198:	0309      	lsls	r1, r1, #12
 800219a:	0005      	movs	r5, r0
 800219c:	0b09      	lsrs	r1, r1, #12
 800219e:	2000      	movs	r0, #0
 80021a0:	0d5b      	lsrs	r3, r3, #21
 80021a2:	0fd2      	lsrs	r2, r2, #31
 80021a4:	42a3      	cmp	r3, r4
 80021a6:	dd04      	ble.n	80021b2 <__aeabi_d2iz+0x22>
 80021a8:	480f      	ldr	r0, [pc, #60]	; (80021e8 <__aeabi_d2iz+0x58>)
 80021aa:	4283      	cmp	r3, r0
 80021ac:	dd02      	ble.n	80021b4 <__aeabi_d2iz+0x24>
 80021ae:	4b0f      	ldr	r3, [pc, #60]	; (80021ec <__aeabi_d2iz+0x5c>)
 80021b0:	18d0      	adds	r0, r2, r3
 80021b2:	bd30      	pop	{r4, r5, pc}
 80021b4:	2080      	movs	r0, #128	; 0x80
 80021b6:	0340      	lsls	r0, r0, #13
 80021b8:	4301      	orrs	r1, r0
 80021ba:	480d      	ldr	r0, [pc, #52]	; (80021f0 <__aeabi_d2iz+0x60>)
 80021bc:	1ac0      	subs	r0, r0, r3
 80021be:	281f      	cmp	r0, #31
 80021c0:	dd08      	ble.n	80021d4 <__aeabi_d2iz+0x44>
 80021c2:	480c      	ldr	r0, [pc, #48]	; (80021f4 <__aeabi_d2iz+0x64>)
 80021c4:	1ac3      	subs	r3, r0, r3
 80021c6:	40d9      	lsrs	r1, r3
 80021c8:	000b      	movs	r3, r1
 80021ca:	4258      	negs	r0, r3
 80021cc:	2a00      	cmp	r2, #0
 80021ce:	d1f0      	bne.n	80021b2 <__aeabi_d2iz+0x22>
 80021d0:	0018      	movs	r0, r3
 80021d2:	e7ee      	b.n	80021b2 <__aeabi_d2iz+0x22>
 80021d4:	4c08      	ldr	r4, [pc, #32]	; (80021f8 <__aeabi_d2iz+0x68>)
 80021d6:	40c5      	lsrs	r5, r0
 80021d8:	46a4      	mov	ip, r4
 80021da:	4463      	add	r3, ip
 80021dc:	4099      	lsls	r1, r3
 80021de:	000b      	movs	r3, r1
 80021e0:	432b      	orrs	r3, r5
 80021e2:	e7f2      	b.n	80021ca <__aeabi_d2iz+0x3a>
 80021e4:	000003fe 	.word	0x000003fe
 80021e8:	0000041d 	.word	0x0000041d
 80021ec:	7fffffff 	.word	0x7fffffff
 80021f0:	00000433 	.word	0x00000433
 80021f4:	00000413 	.word	0x00000413
 80021f8:	fffffbed 	.word	0xfffffbed

080021fc <__aeabi_i2d>:
 80021fc:	b570      	push	{r4, r5, r6, lr}
 80021fe:	2800      	cmp	r0, #0
 8002200:	d016      	beq.n	8002230 <__aeabi_i2d+0x34>
 8002202:	17c3      	asrs	r3, r0, #31
 8002204:	18c5      	adds	r5, r0, r3
 8002206:	405d      	eors	r5, r3
 8002208:	0fc4      	lsrs	r4, r0, #31
 800220a:	0028      	movs	r0, r5
 800220c:	f000 f84c 	bl	80022a8 <__clzsi2>
 8002210:	4a11      	ldr	r2, [pc, #68]	; (8002258 <__aeabi_i2d+0x5c>)
 8002212:	1a12      	subs	r2, r2, r0
 8002214:	280a      	cmp	r0, #10
 8002216:	dc16      	bgt.n	8002246 <__aeabi_i2d+0x4a>
 8002218:	0003      	movs	r3, r0
 800221a:	002e      	movs	r6, r5
 800221c:	3315      	adds	r3, #21
 800221e:	409e      	lsls	r6, r3
 8002220:	230b      	movs	r3, #11
 8002222:	1a18      	subs	r0, r3, r0
 8002224:	40c5      	lsrs	r5, r0
 8002226:	0553      	lsls	r3, r2, #21
 8002228:	032d      	lsls	r5, r5, #12
 800222a:	0b2d      	lsrs	r5, r5, #12
 800222c:	0d5b      	lsrs	r3, r3, #21
 800222e:	e003      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002230:	2400      	movs	r4, #0
 8002232:	2300      	movs	r3, #0
 8002234:	2500      	movs	r5, #0
 8002236:	2600      	movs	r6, #0
 8002238:	051b      	lsls	r3, r3, #20
 800223a:	432b      	orrs	r3, r5
 800223c:	07e4      	lsls	r4, r4, #31
 800223e:	4323      	orrs	r3, r4
 8002240:	0030      	movs	r0, r6
 8002242:	0019      	movs	r1, r3
 8002244:	bd70      	pop	{r4, r5, r6, pc}
 8002246:	380b      	subs	r0, #11
 8002248:	4085      	lsls	r5, r0
 800224a:	0553      	lsls	r3, r2, #21
 800224c:	032d      	lsls	r5, r5, #12
 800224e:	2600      	movs	r6, #0
 8002250:	0b2d      	lsrs	r5, r5, #12
 8002252:	0d5b      	lsrs	r3, r3, #21
 8002254:	e7f0      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002256:	46c0      	nop			; (mov r8, r8)
 8002258:	0000041e 	.word	0x0000041e

0800225c <__aeabi_ui2d>:
 800225c:	b510      	push	{r4, lr}
 800225e:	1e04      	subs	r4, r0, #0
 8002260:	d010      	beq.n	8002284 <__aeabi_ui2d+0x28>
 8002262:	f000 f821 	bl	80022a8 <__clzsi2>
 8002266:	4b0f      	ldr	r3, [pc, #60]	; (80022a4 <__aeabi_ui2d+0x48>)
 8002268:	1a1b      	subs	r3, r3, r0
 800226a:	280a      	cmp	r0, #10
 800226c:	dc11      	bgt.n	8002292 <__aeabi_ui2d+0x36>
 800226e:	220b      	movs	r2, #11
 8002270:	0021      	movs	r1, r4
 8002272:	1a12      	subs	r2, r2, r0
 8002274:	40d1      	lsrs	r1, r2
 8002276:	3015      	adds	r0, #21
 8002278:	030a      	lsls	r2, r1, #12
 800227a:	055b      	lsls	r3, r3, #21
 800227c:	4084      	lsls	r4, r0
 800227e:	0b12      	lsrs	r2, r2, #12
 8002280:	0d5b      	lsrs	r3, r3, #21
 8002282:	e001      	b.n	8002288 <__aeabi_ui2d+0x2c>
 8002284:	2300      	movs	r3, #0
 8002286:	2200      	movs	r2, #0
 8002288:	051b      	lsls	r3, r3, #20
 800228a:	4313      	orrs	r3, r2
 800228c:	0020      	movs	r0, r4
 800228e:	0019      	movs	r1, r3
 8002290:	bd10      	pop	{r4, pc}
 8002292:	0022      	movs	r2, r4
 8002294:	380b      	subs	r0, #11
 8002296:	4082      	lsls	r2, r0
 8002298:	055b      	lsls	r3, r3, #21
 800229a:	0312      	lsls	r2, r2, #12
 800229c:	2400      	movs	r4, #0
 800229e:	0b12      	lsrs	r2, r2, #12
 80022a0:	0d5b      	lsrs	r3, r3, #21
 80022a2:	e7f1      	b.n	8002288 <__aeabi_ui2d+0x2c>
 80022a4:	0000041e 	.word	0x0000041e

080022a8 <__clzsi2>:
 80022a8:	211c      	movs	r1, #28
 80022aa:	2301      	movs	r3, #1
 80022ac:	041b      	lsls	r3, r3, #16
 80022ae:	4298      	cmp	r0, r3
 80022b0:	d301      	bcc.n	80022b6 <__clzsi2+0xe>
 80022b2:	0c00      	lsrs	r0, r0, #16
 80022b4:	3910      	subs	r1, #16
 80022b6:	0a1b      	lsrs	r3, r3, #8
 80022b8:	4298      	cmp	r0, r3
 80022ba:	d301      	bcc.n	80022c0 <__clzsi2+0x18>
 80022bc:	0a00      	lsrs	r0, r0, #8
 80022be:	3908      	subs	r1, #8
 80022c0:	091b      	lsrs	r3, r3, #4
 80022c2:	4298      	cmp	r0, r3
 80022c4:	d301      	bcc.n	80022ca <__clzsi2+0x22>
 80022c6:	0900      	lsrs	r0, r0, #4
 80022c8:	3904      	subs	r1, #4
 80022ca:	a202      	add	r2, pc, #8	; (adr r2, 80022d4 <__clzsi2+0x2c>)
 80022cc:	5c10      	ldrb	r0, [r2, r0]
 80022ce:	1840      	adds	r0, r0, r1
 80022d0:	4770      	bx	lr
 80022d2:	46c0      	nop			; (mov r8, r8)
 80022d4:	02020304 	.word	0x02020304
 80022d8:	01010101 	.word	0x01010101
	...

080022e4 <__clzdi2>:
 80022e4:	b510      	push	{r4, lr}
 80022e6:	2900      	cmp	r1, #0
 80022e8:	d103      	bne.n	80022f2 <__clzdi2+0xe>
 80022ea:	f7ff ffdd 	bl	80022a8 <__clzsi2>
 80022ee:	3020      	adds	r0, #32
 80022f0:	e002      	b.n	80022f8 <__clzdi2+0x14>
 80022f2:	1c08      	adds	r0, r1, #0
 80022f4:	f7ff ffd8 	bl	80022a8 <__clzsi2>
 80022f8:	bd10      	pop	{r4, pc}
 80022fa:	46c0      	nop			; (mov r8, r8)

080022fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80022fc:	b510      	push	{r4, lr}
 80022fe:	b098      	sub	sp, #96	; 0x60
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002300:	2234      	movs	r2, #52	; 0x34
 8002302:	2100      	movs	r1, #0
 8002304:	a80b      	add	r0, sp, #44	; 0x2c
 8002306:	f001 ff65 	bl	80041d4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800230a:	2210      	movs	r2, #16
 800230c:	2100      	movs	r1, #0
 800230e:	a801      	add	r0, sp, #4
 8002310:	f001 ff60 	bl	80041d4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002314:	2218      	movs	r2, #24
 8002316:	2100      	movs	r1, #0
 8002318:	a805      	add	r0, sp, #20
 800231a:	f001 ff5b 	bl	80041d4 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 800231e:	2080      	movs	r0, #128	; 0x80
 8002320:	0080      	lsls	r0, r0, #2
 8002322:	f000 fb35 	bl	8002990 <HAL_PWREx_ControlVoltageScaling>
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002326:	2380      	movs	r3, #128	; 0x80
 8002328:	005b      	lsls	r3, r3, #1
 800232a:	930e      	str	r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 800232c:	2300      	movs	r3, #0
 800232e:	930f      	str	r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8002330:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 8;
 8002332:	3308      	adds	r3, #8
 8002334:	9315      	str	r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002336:	2380      	movs	r3, #128	; 0x80
 8002338:	029b      	lsls	r3, r3, #10
 800233a:	9316      	str	r3, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800233c:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800233e:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002340:	2240      	movs	r2, #64	; 0x40
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8002342:	059b      	lsls	r3, r3, #22
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002344:	a80b      	add	r0, sp, #44	; 0x2c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002346:	940b      	str	r4, [sp, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002348:	9210      	str	r2, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800234a:	9412      	str	r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800234c:	9413      	str	r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800234e:	9317      	str	r3, [sp, #92]	; 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002350:	f000 fb4a 	bl	80029e8 <HAL_RCC_OscConfig>
 8002354:	2800      	cmp	r0, #0
 8002356:	d001      	beq.n	800235c <SystemClock_Config+0x60>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002358:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800235a:	e7fe      	b.n	800235a <SystemClock_Config+0x5e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800235c:	2307      	movs	r3, #7
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800235e:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002360:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002362:	0021      	movs	r1, r4
 8002364:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002366:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002368:	9402      	str	r4, [sp, #8]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800236a:	f000 fd9b 	bl	8002ea4 <HAL_RCC_ClockConfig>
 800236e:	2800      	cmp	r0, #0
 8002370:	d001      	beq.n	8002376 <SystemClock_Config+0x7a>
 8002372:	b672      	cpsid	i
  while (1)
 8002374:	e7fe      	b.n	8002374 <SystemClock_Config+0x78>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8002376:	2301      	movs	r3, #1
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8002378:	9006      	str	r0, [sp, #24]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800237a:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800237c:	9305      	str	r3, [sp, #20]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800237e:	f000 fe53 	bl	8003028 <HAL_RCCEx_PeriphCLKConfig>
 8002382:	2800      	cmp	r0, #0
 8002384:	d001      	beq.n	800238a <SystemClock_Config+0x8e>
 8002386:	b672      	cpsid	i
  while (1)
 8002388:	e7fe      	b.n	8002388 <SystemClock_Config+0x8c>
}
 800238a:	b018      	add	sp, #96	; 0x60
 800238c:	bd10      	pop	{r4, pc}
	...

08002390 <main>:
{
 8002390:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002392:	2501      	movs	r5, #1
  HAL_Init();
 8002394:	f000 f95e 	bl	8002654 <HAL_Init>
  SystemClock_Config();
 8002398:	f7ff ffb0 	bl	80022fc <SystemClock_Config>
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800239c:	4b1c      	ldr	r3, [pc, #112]	; (8002410 <main+0x80>)
  huart1.Instance = USART1;
 800239e:	4c1d      	ldr	r4, [pc, #116]	; (8002414 <main+0x84>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80023a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023a2:	0020      	movs	r0, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80023a4:	432a      	orrs	r2, r5
 80023a6:	635a      	str	r2, [r3, #52]	; 0x34
 80023a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023aa:	220c      	movs	r2, #12
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80023ac:	402b      	ands	r3, r5
 80023ae:	9301      	str	r3, [sp, #4]
 80023b0:	9b01      	ldr	r3, [sp, #4]
  huart1.Instance = USART1;
 80023b2:	4b19      	ldr	r3, [pc, #100]	; (8002418 <main+0x88>)
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023b4:	6162      	str	r2, [r4, #20]
  huart1.Instance = USART1;
 80023b6:	6023      	str	r3, [r4, #0]
  huart1.Init.BaudRate = 115200;
 80023b8:	23e1      	movs	r3, #225	; 0xe1
 80023ba:	025b      	lsls	r3, r3, #9
 80023bc:	6063      	str	r3, [r4, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80023be:	2300      	movs	r3, #0
 80023c0:	60a3      	str	r3, [r4, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80023c2:	60e3      	str	r3, [r4, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80023c4:	6123      	str	r3, [r4, #16]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80023c6:	61a3      	str	r3, [r4, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80023c8:	61e3      	str	r3, [r4, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80023ca:	6223      	str	r3, [r4, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80023cc:	6263      	str	r3, [r4, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80023ce:	62a3      	str	r3, [r4, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023d0:	f001 fcfc 	bl	8003dcc <HAL_UART_Init>
 80023d4:	1e01      	subs	r1, r0, #0
 80023d6:	d001      	beq.n	80023dc <main+0x4c>
 80023d8:	b672      	cpsid	i
  while (1)
 80023da:	e7fe      	b.n	80023da <main+0x4a>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80023dc:	0020      	movs	r0, r4
 80023de:	f001 fe43 	bl	8004068 <HAL_UARTEx_SetTxFifoThreshold>
 80023e2:	1e01      	subs	r1, r0, #0
 80023e4:	d001      	beq.n	80023ea <main+0x5a>
 80023e6:	b672      	cpsid	i
  while (1)
 80023e8:	e7fe      	b.n	80023e8 <main+0x58>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80023ea:	0020      	movs	r0, r4
 80023ec:	f001 fe60 	bl	80040b0 <HAL_UARTEx_SetRxFifoThreshold>
 80023f0:	2800      	cmp	r0, #0
 80023f2:	d001      	beq.n	80023f8 <main+0x68>
 80023f4:	b672      	cpsid	i
  while (1)
 80023f6:	e7fe      	b.n	80023f6 <main+0x66>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 80023f8:	0020      	movs	r0, r4
 80023fa:	f001 fe17 	bl	800402c <HAL_UARTEx_DisableFifoMode>
 80023fe:	2800      	cmp	r0, #0
 8002400:	d001      	beq.n	8002406 <main+0x76>
 8002402:	b672      	cpsid	i
  while (1)
 8002404:	e7fe      	b.n	8002404 <main+0x74>
  SerialUartReceiveEnable(RxBuffer,1);
 8002406:	0029      	movs	r1, r5
 8002408:	4804      	ldr	r0, [pc, #16]	; (800241c <main+0x8c>)
 800240a:	f001 fe77 	bl	80040fc <SerialUartReceiveEnable>
  while (1)
 800240e:	e7fe      	b.n	800240e <main+0x7e>
 8002410:	40021000 	.word	0x40021000
 8002414:	20000a10 	.word	0x20000a10
 8002418:	40013800 	.word	0x40013800
 800241c:	20000aa0 	.word	0x20000aa0

08002420 <HAL_UART_RxCpltCallback>:
	if(huart->Instance == USART1)//preguntamos si la interrupcion fue por la isntancia de usart 2
 8002420:	4b04      	ldr	r3, [pc, #16]	; (8002434 <HAL_UART_RxCpltCallback+0x14>)
 8002422:	6802      	ldr	r2, [r0, #0]
{
 8002424:	b510      	push	{r4, lr}
	if(huart->Instance == USART1)//preguntamos si la interrupcion fue por la isntancia de usart 2
 8002426:	429a      	cmp	r2, r3
 8002428:	d102      	bne.n	8002430 <HAL_UART_RxCpltCallback+0x10>
		SerialUartReceiveCommand(RxBuffer);
 800242a:	4803      	ldr	r0, [pc, #12]	; (8002438 <HAL_UART_RxCpltCallback+0x18>)
 800242c:	f001 fe70 	bl	8004110 <SerialUartReceiveCommand>
}
 8002430:	bd10      	pop	{r4, pc}
 8002432:	46c0      	nop			; (mov r8, r8)
 8002434:	40013800 	.word	0x40013800
 8002438:	20000aa0 	.word	0x20000aa0

0800243c <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800243c:	2001      	movs	r0, #1
 800243e:	4b0a      	ldr	r3, [pc, #40]	; (8002468 <HAL_MspInit+0x2c>)
{
 8002440:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002442:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002444:	4301      	orrs	r1, r0
 8002446:	6419      	str	r1, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 8002448:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800244a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 800244c:	0549      	lsls	r1, r1, #21
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800244e:	4002      	ands	r2, r0
 8002450:	9200      	str	r2, [sp, #0]
 8002452:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002454:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002456:	430a      	orrs	r2, r1
 8002458:	63da      	str	r2, [r3, #60]	; 0x3c
 800245a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800245c:	400b      	ands	r3, r1
 800245e:	9301      	str	r3, [sp, #4]
 8002460:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002462:	b002      	add	sp, #8
 8002464:	4770      	bx	lr
 8002466:	46c0      	nop			; (mov r8, r8)
 8002468:	40021000 	.word	0x40021000

0800246c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800246c:	b530      	push	{r4, r5, lr}
 800246e:	0004      	movs	r4, r0
 8002470:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002472:	2214      	movs	r2, #20
 8002474:	2100      	movs	r1, #0
 8002476:	a803      	add	r0, sp, #12
 8002478:	f001 feac 	bl	80041d4 <memset>
  if(huart->Instance==USART1)
 800247c:	4b16      	ldr	r3, [pc, #88]	; (80024d8 <HAL_UART_MspInit+0x6c>)
 800247e:	6822      	ldr	r2, [r4, #0]
 8002480:	429a      	cmp	r2, r3
 8002482:	d127      	bne.n	80024d4 <HAL_UART_MspInit+0x68>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002484:	2080      	movs	r0, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002486:	2401      	movs	r4, #1
    __HAL_RCC_USART1_CLK_ENABLE();
 8002488:	4b14      	ldr	r3, [pc, #80]	; (80024dc <HAL_UART_MspInit+0x70>)
 800248a:	01c0      	lsls	r0, r0, #7
 800248c:	6c19      	ldr	r1, [r3, #64]	; 0x40
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800248e:	2500      	movs	r5, #0
    __HAL_RCC_USART1_CLK_ENABLE();
 8002490:	4301      	orrs	r1, r0
 8002492:	6419      	str	r1, [r3, #64]	; 0x40
 8002494:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002496:	a903      	add	r1, sp, #12
    __HAL_RCC_USART1_CLK_ENABLE();
 8002498:	4002      	ands	r2, r0
 800249a:	9201      	str	r2, [sp, #4]
 800249c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800249e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024a0:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024a2:	4322      	orrs	r2, r4
 80024a4:	635a      	str	r2, [r3, #52]	; 0x34
 80024a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024a8:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024aa:	4023      	ands	r3, r4
 80024ac:	9302      	str	r3, [sp, #8]
 80024ae:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80024b0:	23c0      	movs	r3, #192	; 0xc0
 80024b2:	00db      	lsls	r3, r3, #3
 80024b4:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024b6:	2302      	movs	r3, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024b8:	9505      	str	r5, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024ba:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024bc:	9506      	str	r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 80024be:	9407      	str	r4, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024c0:	f000 f9b8 	bl	8002834 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
 80024c4:	201b      	movs	r0, #27
 80024c6:	002a      	movs	r2, r5
 80024c8:	0021      	movs	r1, r4
 80024ca:	f000 f8e9 	bl	80026a0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80024ce:	201b      	movs	r0, #27
 80024d0:	f000 f910 	bl	80026f4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 80024d4:	b009      	add	sp, #36	; 0x24
 80024d6:	bd30      	pop	{r4, r5, pc}
 80024d8:	40013800 	.word	0x40013800
 80024dc:	40021000 	.word	0x40021000

080024e0 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80024e0:	e7fe      	b.n	80024e0 <NMI_Handler>

080024e2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80024e2:	e7fe      	b.n	80024e2 <HardFault_Handler>

080024e4 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80024e4:	4770      	bx	lr

080024e6 <PendSV_Handler>:
 80024e6:	4770      	bx	lr

080024e8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80024e8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80024ea:	f000 f8c7 	bl	800267c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80024ee:	bd10      	pop	{r4, pc}

080024f0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25.
  */
void USART1_IRQHandler(void)
{
 80024f0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80024f2:	4802      	ldr	r0, [pc, #8]	; (80024fc <USART1_IRQHandler+0xc>)
 80024f4:	f000 fe82 	bl	80031fc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80024f8:	bd10      	pop	{r4, pc}
 80024fa:	46c0      	nop			; (mov r8, r8)
 80024fc:	20000a10 	.word	0x20000a10

08002500 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002500:	2001      	movs	r0, #1
 8002502:	4770      	bx	lr

08002504 <_kill>:

int _kill(int pid, int sig)
{
 8002504:	b510      	push	{r4, lr}
	errno = EINVAL;
 8002506:	f001 fe3b 	bl	8004180 <__errno>
 800250a:	2316      	movs	r3, #22
 800250c:	6003      	str	r3, [r0, #0]
	return -1;
 800250e:	2001      	movs	r0, #1
}
 8002510:	4240      	negs	r0, r0
 8002512:	bd10      	pop	{r4, pc}

08002514 <_exit>:

void _exit (int status)
{
 8002514:	b510      	push	{r4, lr}
	errno = EINVAL;
 8002516:	f001 fe33 	bl	8004180 <__errno>
 800251a:	2316      	movs	r3, #22
 800251c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800251e:	e7fe      	b.n	800251e <_exit+0xa>

08002520 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002520:	b570      	push	{r4, r5, r6, lr}
 8002522:	000e      	movs	r6, r1
 8002524:	0014      	movs	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002526:	2500      	movs	r5, #0
 8002528:	42a5      	cmp	r5, r4
 800252a:	db01      	blt.n	8002530 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800252c:	0020      	movs	r0, r4
 800252e:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002530:	e000      	b.n	8002534 <_read+0x14>
 8002532:	bf00      	nop
 8002534:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002536:	3501      	adds	r5, #1
 8002538:	e7f6      	b.n	8002528 <_read+0x8>

0800253a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800253a:	b570      	push	{r4, r5, r6, lr}
 800253c:	000e      	movs	r6, r1
 800253e:	0014      	movs	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002540:	2500      	movs	r5, #0
 8002542:	42a5      	cmp	r5, r4
 8002544:	db01      	blt.n	800254a <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002546:	0020      	movs	r0, r4
 8002548:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800254a:	5d70      	ldrb	r0, [r6, r5]
 800254c:	f001 fe0a 	bl	8004164 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002550:	3501      	adds	r5, #1
 8002552:	e7f6      	b.n	8002542 <_write+0x8>

08002554 <_close>:

int _close(int file)
{
	return -1;
 8002554:	2001      	movs	r0, #1
}
 8002556:	4240      	negs	r0, r0
 8002558:	4770      	bx	lr

0800255a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800255a:	2380      	movs	r3, #128	; 0x80
 800255c:	019b      	lsls	r3, r3, #6
	return 0;
}
 800255e:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8002560:	604b      	str	r3, [r1, #4]
}
 8002562:	4770      	bx	lr

08002564 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002564:	2001      	movs	r0, #1
 8002566:	4770      	bx	lr

08002568 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002568:	2000      	movs	r0, #0
 800256a:	4770      	bx	lr

0800256c <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800256c:	4a0b      	ldr	r2, [pc, #44]	; (800259c <_sbrk+0x30>)
 800256e:	490c      	ldr	r1, [pc, #48]	; (80025a0 <_sbrk+0x34>)
{
 8002570:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002572:	1a89      	subs	r1, r1, r2
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002574:	4a0b      	ldr	r2, [pc, #44]	; (80025a4 <_sbrk+0x38>)
{
 8002576:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8002578:	6810      	ldr	r0, [r2, #0]
 800257a:	2800      	cmp	r0, #0
 800257c:	d101      	bne.n	8002582 <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 800257e:	480a      	ldr	r0, [pc, #40]	; (80025a8 <_sbrk+0x3c>)
 8002580:	6010      	str	r0, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002582:	6810      	ldr	r0, [r2, #0]
 8002584:	18c3      	adds	r3, r0, r3
 8002586:	428b      	cmp	r3, r1
 8002588:	d906      	bls.n	8002598 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 800258a:	f001 fdf9 	bl	8004180 <__errno>
 800258e:	230c      	movs	r3, #12
 8002590:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8002592:	2001      	movs	r0, #1
 8002594:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8002596:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8002598:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800259a:	e7fc      	b.n	8002596 <_sbrk+0x2a>
 800259c:	00000400 	.word	0x00000400
 80025a0:	20002000 	.word	0x20002000
 80025a4:	200009d4 	.word	0x200009d4
 80025a8:	20000ae8 	.word	0x20000ae8

080025ac <SystemInit>:
{
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80025ac:	4770      	bx	lr
	...

080025b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80025b0:	480d      	ldr	r0, [pc, #52]	; (80025e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80025b2:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 80025b4:	f7ff fffa 	bl	80025ac <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80025b8:	480c      	ldr	r0, [pc, #48]	; (80025ec <LoopForever+0x6>)
  ldr r1, =_edata
 80025ba:	490d      	ldr	r1, [pc, #52]	; (80025f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80025bc:	4a0d      	ldr	r2, [pc, #52]	; (80025f4 <LoopForever+0xe>)
  movs r3, #0
 80025be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80025c0:	e002      	b.n	80025c8 <LoopCopyDataInit>

080025c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80025c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80025c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80025c6:	3304      	adds	r3, #4

080025c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80025c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80025ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80025cc:	d3f9      	bcc.n	80025c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80025ce:	4a0a      	ldr	r2, [pc, #40]	; (80025f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80025d0:	4c0a      	ldr	r4, [pc, #40]	; (80025fc <LoopForever+0x16>)
  movs r3, #0
 80025d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80025d4:	e001      	b.n	80025da <LoopFillZerobss>

080025d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80025d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80025d8:	3204      	adds	r2, #4

080025da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80025da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80025dc:	d3fb      	bcc.n	80025d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80025de:	f001 fdd5 	bl	800418c <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 80025e2:	f7ff fed5 	bl	8002390 <main>

080025e6 <LoopForever>:

LoopForever:
  b LoopForever
 80025e6:	e7fe      	b.n	80025e6 <LoopForever>
  ldr   r0, =_estack
 80025e8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80025ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80025f0:	200009b8 	.word	0x200009b8
  ldr r2, =_sidata
 80025f4:	08009480 	.word	0x08009480
  ldr r2, =_sbss
 80025f8:	200009b8 	.word	0x200009b8
  ldr r4, =_ebss
 80025fc:	20000ae8 	.word	0x20000ae8

08002600 <ADC1_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002600:	e7fe      	b.n	8002600 <ADC1_IRQHandler>
	...

08002604 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002604:	b570      	push	{r4, r5, r6, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/ 
  if ((uint32_t)uwTickFreq != 0U)
 8002606:	4b10      	ldr	r3, [pc, #64]	; (8002648 <HAL_InitTick+0x44>)
{
 8002608:	0005      	movs	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 800260a:	7819      	ldrb	r1, [r3, #0]
 800260c:	2900      	cmp	r1, #0
 800260e:	d101      	bne.n	8002614 <HAL_InitTick+0x10>
      status = HAL_ERROR;
    }
  }
  else
  {
    status = HAL_ERROR;
 8002610:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 8002612:	bd70      	pop	{r4, r5, r6, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 8002614:	20fa      	movs	r0, #250	; 0xfa
 8002616:	0080      	lsls	r0, r0, #2
 8002618:	f7fd fd8e 	bl	8000138 <__udivsi3>
 800261c:	4b0b      	ldr	r3, [pc, #44]	; (800264c <HAL_InitTick+0x48>)
 800261e:	0001      	movs	r1, r0
 8002620:	6818      	ldr	r0, [r3, #0]
 8002622:	f7fd fd89 	bl	8000138 <__udivsi3>
 8002626:	f000 f871 	bl	800270c <HAL_SYSTICK_Config>
 800262a:	1e04      	subs	r4, r0, #0
 800262c:	d1f0      	bne.n	8002610 <HAL_InitTick+0xc>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800262e:	2d03      	cmp	r5, #3
 8002630:	d8ee      	bhi.n	8002610 <HAL_InitTick+0xc>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002632:	0002      	movs	r2, r0
 8002634:	2001      	movs	r0, #1
 8002636:	0029      	movs	r1, r5
 8002638:	4240      	negs	r0, r0
 800263a:	f000 f831 	bl	80026a0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800263e:	4b04      	ldr	r3, [pc, #16]	; (8002650 <HAL_InitTick+0x4c>)
 8002640:	0020      	movs	r0, r4
 8002642:	601d      	str	r5, [r3, #0]
  return status;
 8002644:	e7e5      	b.n	8002612 <HAL_InitTick+0xe>
 8002646:	46c0      	nop			; (mov r8, r8)
 8002648:	20000004 	.word	0x20000004
 800264c:	20000000 	.word	0x20000000
 8002650:	20000008 	.word	0x20000008

08002654 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002654:	2380      	movs	r3, #128	; 0x80
 8002656:	4a08      	ldr	r2, [pc, #32]	; (8002678 <HAL_Init+0x24>)
 8002658:	005b      	lsls	r3, r3, #1
 800265a:	6811      	ldr	r1, [r2, #0]
{
 800265c:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800265e:	430b      	orrs	r3, r1
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002660:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002662:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002664:	f7ff ffce 	bl	8002604 <HAL_InitTick>
 8002668:	1e04      	subs	r4, r0, #0
 800266a:	d103      	bne.n	8002674 <HAL_Init+0x20>
  HAL_MspInit();
 800266c:	f7ff fee6 	bl	800243c <HAL_MspInit>
}
 8002670:	0020      	movs	r0, r4
 8002672:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8002674:	2401      	movs	r4, #1
 8002676:	e7fb      	b.n	8002670 <HAL_Init+0x1c>
 8002678:	40022000 	.word	0x40022000

0800267c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 800267c:	4a03      	ldr	r2, [pc, #12]	; (800268c <HAL_IncTick+0x10>)
 800267e:	4b04      	ldr	r3, [pc, #16]	; (8002690 <HAL_IncTick+0x14>)
 8002680:	6811      	ldr	r1, [r2, #0]
 8002682:	781b      	ldrb	r3, [r3, #0]
 8002684:	185b      	adds	r3, r3, r1
 8002686:	6013      	str	r3, [r2, #0]
}
 8002688:	4770      	bx	lr
 800268a:	46c0      	nop			; (mov r8, r8)
 800268c:	20000aa4 	.word	0x20000aa4
 8002690:	20000004 	.word	0x20000004

08002694 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002694:	4b01      	ldr	r3, [pc, #4]	; (800269c <HAL_GetTick+0x8>)
 8002696:	6818      	ldr	r0, [r3, #0]
}
 8002698:	4770      	bx	lr
 800269a:	46c0      	nop			; (mov r8, r8)
 800269c:	20000aa4 	.word	0x20000aa4

080026a0 <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80026a0:	b530      	push	{r4, r5, lr}
 80026a2:	25ff      	movs	r5, #255	; 0xff
 80026a4:	2403      	movs	r4, #3
 80026a6:	002a      	movs	r2, r5
 80026a8:	4004      	ands	r4, r0
 80026aa:	00e4      	lsls	r4, r4, #3
 80026ac:	40a2      	lsls	r2, r4
 80026ae:	0189      	lsls	r1, r1, #6
 80026b0:	4029      	ands	r1, r5
 80026b2:	43d2      	mvns	r2, r2
 80026b4:	40a1      	lsls	r1, r4
 80026b6:	b2c3      	uxtb	r3, r0
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
 80026b8:	2800      	cmp	r0, #0
 80026ba:	db0a      	blt.n	80026d2 <HAL_NVIC_SetPriority+0x32>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80026bc:	24c0      	movs	r4, #192	; 0xc0
 80026be:	4b0b      	ldr	r3, [pc, #44]	; (80026ec <HAL_NVIC_SetPriority+0x4c>)
 80026c0:	0880      	lsrs	r0, r0, #2
 80026c2:	0080      	lsls	r0, r0, #2
 80026c4:	18c0      	adds	r0, r0, r3
 80026c6:	00a4      	lsls	r4, r4, #2
 80026c8:	5903      	ldr	r3, [r0, r4]
 80026ca:	401a      	ands	r2, r3
 80026cc:	4311      	orrs	r1, r2
 80026ce:	5101      	str	r1, [r0, r4]
  UNUSED(SubPriority);

  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
}
 80026d0:	bd30      	pop	{r4, r5, pc}
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80026d2:	200f      	movs	r0, #15
 80026d4:	4003      	ands	r3, r0
 80026d6:	3b08      	subs	r3, #8
 80026d8:	4805      	ldr	r0, [pc, #20]	; (80026f0 <HAL_NVIC_SetPriority+0x50>)
 80026da:	089b      	lsrs	r3, r3, #2
 80026dc:	009b      	lsls	r3, r3, #2
 80026de:	181b      	adds	r3, r3, r0
 80026e0:	69d8      	ldr	r0, [r3, #28]
 80026e2:	4002      	ands	r2, r0
 80026e4:	4311      	orrs	r1, r2
 80026e6:	61d9      	str	r1, [r3, #28]
 80026e8:	e7f2      	b.n	80026d0 <HAL_NVIC_SetPriority+0x30>
 80026ea:	46c0      	nop			; (mov r8, r8)
 80026ec:	e000e100 	.word	0xe000e100
 80026f0:	e000ed00 	.word	0xe000ed00

080026f4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80026f4:	2800      	cmp	r0, #0
 80026f6:	db05      	blt.n	8002704 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80026f8:	231f      	movs	r3, #31
 80026fa:	4018      	ands	r0, r3
 80026fc:	3b1e      	subs	r3, #30
 80026fe:	4083      	lsls	r3, r0
 8002700:	4a01      	ldr	r2, [pc, #4]	; (8002708 <HAL_NVIC_EnableIRQ+0x14>)
 8002702:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8002704:	4770      	bx	lr
 8002706:	46c0      	nop			; (mov r8, r8)
 8002708:	e000e100 	.word	0xe000e100

0800270c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800270c:	2280      	movs	r2, #128	; 0x80
 800270e:	1e43      	subs	r3, r0, #1
 8002710:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8002712:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002714:	4293      	cmp	r3, r2
 8002716:	d20d      	bcs.n	8002734 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002718:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800271a:	4a07      	ldr	r2, [pc, #28]	; (8002738 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800271c:	4807      	ldr	r0, [pc, #28]	; (800273c <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800271e:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002720:	6a03      	ldr	r3, [r0, #32]
 8002722:	0609      	lsls	r1, r1, #24
 8002724:	021b      	lsls	r3, r3, #8
 8002726:	0a1b      	lsrs	r3, r3, #8
 8002728:	430b      	orrs	r3, r1
 800272a:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800272c:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800272e:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002730:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002732:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 8002734:	4770      	bx	lr
 8002736:	46c0      	nop			; (mov r8, r8)
 8002738:	e000e010 	.word	0xe000e010
 800273c:	e000ed00 	.word	0xe000ed00

08002740 <HAL_DMA_Abort>:
  * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  *             the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8002740:	0003      	movs	r3, r0
 8002742:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the DMA peripheral handle */
  if (NULL == hdma)
  {
    return HAL_ERROR;
 8002744:	2001      	movs	r0, #1
  if (NULL == hdma)
 8002746:	2b00      	cmp	r3, #0
 8002748:	d009      	beq.n	800275e <HAL_DMA_Abort+0x1e>
  }

  /* Check the DMA peripheral state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 800274a:	1d98      	adds	r0, r3, #6
 800274c:	7fc2      	ldrb	r2, [r0, #31]
 800274e:	1d5c      	adds	r4, r3, #5
 8002750:	2a02      	cmp	r2, #2
 8002752:	d005      	beq.n	8002760 <HAL_DMA_Abort+0x20>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002754:	2204      	movs	r2, #4
 8002756:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8002758:	2300      	movs	r3, #0

    return HAL_ERROR;
 800275a:	2001      	movs	r0, #1
    __HAL_UNLOCK(hdma);
 800275c:	77e3      	strb	r3, [r4, #31]
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
 800275e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8002760:	250e      	movs	r5, #14
 8002762:	6819      	ldr	r1, [r3, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8002764:	6c5e      	ldr	r6, [r3, #68]	; 0x44
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8002766:	680a      	ldr	r2, [r1, #0]
 8002768:	43aa      	bics	r2, r5
 800276a:	600a      	str	r2, [r1, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 800276c:	6832      	ldr	r2, [r6, #0]
 800276e:	4d11      	ldr	r5, [pc, #68]	; (80027b4 <HAL_DMA_Abort+0x74>)
 8002770:	402a      	ands	r2, r5
 8002772:	6032      	str	r2, [r6, #0]
    __HAL_DMA_DISABLE(hdma);
 8002774:	2201      	movs	r2, #1
 8002776:	680e      	ldr	r6, [r1, #0]
 8002778:	4694      	mov	ip, r2
 800277a:	4396      	bics	r6, r2
 800277c:	600e      	str	r6, [r1, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex  & 0x1CU)));
 800277e:	211c      	movs	r1, #28
 8002780:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002782:	4e0d      	ldr	r6, [pc, #52]	; (80027b8 <HAL_DMA_Abort+0x78>)
 8002784:	4011      	ands	r1, r2
 8002786:	4662      	mov	r2, ip
 8002788:	408a      	lsls	r2, r1
 800278a:	6877      	ldr	r7, [r6, #4]
 800278c:	433a      	orrs	r2, r7
 800278e:	6072      	str	r2, [r6, #4]
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8002790:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 8002792:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8002794:	6051      	str	r1, [r2, #4]
    if (hdma->DMAmuxRequestGen != 0U)
 8002796:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002798:	2a00      	cmp	r2, #0
 800279a:	d005      	beq.n	80027a8 <HAL_DMA_Abort+0x68>
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 800279c:	6811      	ldr	r1, [r2, #0]
 800279e:	4029      	ands	r1, r5
 80027a0:	6011      	str	r1, [r2, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80027a2:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80027a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80027a6:	6053      	str	r3, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 80027a8:	2301      	movs	r3, #1
 80027aa:	77c3      	strb	r3, [r0, #31]
    __HAL_UNLOCK(hdma);
 80027ac:	2000      	movs	r0, #0
 80027ae:	77e0      	strb	r0, [r4, #31]
  return HAL_OK;
 80027b0:	e7d5      	b.n	800275e <HAL_DMA_Abort+0x1e>
 80027b2:	46c0      	nop			; (mov r8, r8)
 80027b4:	fffffeff 	.word	0xfffffeff
 80027b8:	40020000 	.word	0x40020000

080027bc <HAL_DMA_Abort_IT>:
  * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  *             the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80027bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  HAL_StatusTypeDef status = HAL_OK;

  if (hdma->State != HAL_DMA_STATE_BUSY)
 80027be:	1d81      	adds	r1, r0, #6
 80027c0:	7fcb      	ldrb	r3, [r1, #31]
 80027c2:	2b02      	cmp	r3, #2
 80027c4:	d004      	beq.n	80027d0 <HAL_DMA_Abort_IT+0x14>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80027c6:	2304      	movs	r3, #4
 80027c8:	63c3      	str	r3, [r0, #60]	; 0x3c

    status = HAL_ERROR;
 80027ca:	3b03      	subs	r3, #3
    {
      hdma->XferAbortCallback(hdma);
    }
  }
  return status;
}
 80027cc:	0018      	movs	r0, r3
 80027ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80027d0:	240e      	movs	r4, #14
 80027d2:	6802      	ldr	r2, [r0, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 80027d4:	4d15      	ldr	r5, [pc, #84]	; (800282c <HAL_DMA_Abort_IT+0x70>)
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80027d6:	6813      	ldr	r3, [r2, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 80027d8:	6c07      	ldr	r7, [r0, #64]	; 0x40
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80027da:	43a3      	bics	r3, r4
 80027dc:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 80027de:	2301      	movs	r3, #1
 80027e0:	6814      	ldr	r4, [r2, #0]
 80027e2:	439c      	bics	r4, r3
 80027e4:	6014      	str	r4, [r2, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 80027e6:	6c44      	ldr	r4, [r0, #68]	; 0x44
 80027e8:	6822      	ldr	r2, [r4, #0]
 80027ea:	402a      	ands	r2, r5
 80027ec:	6022      	str	r2, [r4, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 80027ee:	241c      	movs	r4, #28
 80027f0:	403c      	ands	r4, r7
 80027f2:	40a3      	lsls	r3, r4
 80027f4:	4a0e      	ldr	r2, [pc, #56]	; (8002830 <HAL_DMA_Abort_IT+0x74>)
 80027f6:	6856      	ldr	r6, [r2, #4]
 80027f8:	4333      	orrs	r3, r6
 80027fa:	6053      	str	r3, [r2, #4]
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80027fc:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80027fe:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8002800:	605a      	str	r2, [r3, #4]
    if (hdma->DMAmuxRequestGen != 0U)
 8002802:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8002804:	2b00      	cmp	r3, #0
 8002806:	d005      	beq.n	8002814 <HAL_DMA_Abort_IT+0x58>
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 8002808:	681a      	ldr	r2, [r3, #0]
 800280a:	402a      	ands	r2, r5
 800280c:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800280e:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8002810:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8002812:	605a      	str	r2, [r3, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8002814:	2301      	movs	r3, #1
    __HAL_UNLOCK(hdma);
 8002816:	2400      	movs	r4, #0
    hdma->State = HAL_DMA_STATE_READY;
 8002818:	77cb      	strb	r3, [r1, #31]
    __HAL_UNLOCK(hdma);
 800281a:	1d43      	adds	r3, r0, #5
 800281c:	77dc      	strb	r4, [r3, #31]
    if (hdma->XferAbortCallback != NULL)
 800281e:	6b82      	ldr	r2, [r0, #56]	; 0x38
  HAL_StatusTypeDef status = HAL_OK;
 8002820:	0013      	movs	r3, r2
    if (hdma->XferAbortCallback != NULL)
 8002822:	42a2      	cmp	r2, r4
 8002824:	d0d2      	beq.n	80027cc <HAL_DMA_Abort_IT+0x10>
      hdma->XferAbortCallback(hdma);
 8002826:	4790      	blx	r2
  HAL_StatusTypeDef status = HAL_OK;
 8002828:	0023      	movs	r3, r4
 800282a:	e7cf      	b.n	80027cc <HAL_DMA_Abort_IT+0x10>
 800282c:	fffffeff 	.word	0xfffffeff
 8002830:	40020000 	.word	0x40020000

08002834 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8002834:	2300      	movs	r3, #0
{
 8002836:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002838:	b085      	sub	sp, #20
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800283a:	680a      	ldr	r2, [r1, #0]
 800283c:	0014      	movs	r4, r2
 800283e:	40dc      	lsrs	r4, r3
 8002840:	d101      	bne.n	8002846 <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  }
}
 8002842:	b005      	add	sp, #20
 8002844:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002846:	2501      	movs	r5, #1
 8002848:	0014      	movs	r4, r2
 800284a:	409d      	lsls	r5, r3
 800284c:	402c      	ands	r4, r5
 800284e:	9401      	str	r4, [sp, #4]
    if (iocurrent != 0x00u)
 8002850:	422a      	tst	r2, r5
 8002852:	d100      	bne.n	8002856 <HAL_GPIO_Init+0x22>
 8002854:	e08e      	b.n	8002974 <HAL_GPIO_Init+0x140>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002856:	684a      	ldr	r2, [r1, #4]
 8002858:	005e      	lsls	r6, r3, #1
 800285a:	4694      	mov	ip, r2
 800285c:	2203      	movs	r2, #3
 800285e:	4664      	mov	r4, ip
 8002860:	4022      	ands	r2, r4
 8002862:	2403      	movs	r4, #3
 8002864:	40b4      	lsls	r4, r6
 8002866:	43e4      	mvns	r4, r4
 8002868:	9402      	str	r4, [sp, #8]
 800286a:	1e54      	subs	r4, r2, #1
 800286c:	2c01      	cmp	r4, #1
 800286e:	d82a      	bhi.n	80028c6 <HAL_GPIO_Init+0x92>
        temp = GPIOx->OSPEEDR;
 8002870:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8002872:	9c02      	ldr	r4, [sp, #8]
 8002874:	4027      	ands	r7, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002876:	68cc      	ldr	r4, [r1, #12]
 8002878:	40b4      	lsls	r4, r6
 800287a:	433c      	orrs	r4, r7
        GPIOx->OSPEEDR = temp;
 800287c:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 800287e:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002880:	2701      	movs	r7, #1
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002882:	43ac      	bics	r4, r5
 8002884:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002886:	4664      	mov	r4, ip
 8002888:	0924      	lsrs	r4, r4, #4
 800288a:	403c      	ands	r4, r7
 800288c:	409c      	lsls	r4, r3
 800288e:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8002890:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8002892:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 8002894:	9c02      	ldr	r4, [sp, #8]
 8002896:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8002898:	688c      	ldr	r4, [r1, #8]
 800289a:	40b4      	lsls	r4, r6
 800289c:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 800289e:	60c4      	str	r4, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80028a0:	2a02      	cmp	r2, #2
 80028a2:	d112      	bne.n	80028ca <HAL_GPIO_Init+0x96>
        temp = GPIOx->AFR[position >> 3u];
 80028a4:	08dc      	lsrs	r4, r3, #3
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80028a6:	2507      	movs	r5, #7
 80028a8:	00a4      	lsls	r4, r4, #2
 80028aa:	1904      	adds	r4, r0, r4
        temp = GPIOx->AFR[position >> 3u];
 80028ac:	6a27      	ldr	r7, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80028ae:	9403      	str	r4, [sp, #12]
 80028b0:	240f      	movs	r4, #15
 80028b2:	401d      	ands	r5, r3
 80028b4:	00ad      	lsls	r5, r5, #2
 80028b6:	40ac      	lsls	r4, r5
 80028b8:	43a7      	bics	r7, r4
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80028ba:	690c      	ldr	r4, [r1, #16]
 80028bc:	40ac      	lsls	r4, r5
 80028be:	4327      	orrs	r7, r4
        GPIOx->AFR[position >> 3u] = temp;
 80028c0:	9c03      	ldr	r4, [sp, #12]
 80028c2:	6227      	str	r7, [r4, #32]
 80028c4:	e001      	b.n	80028ca <HAL_GPIO_Init+0x96>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80028c6:	2a03      	cmp	r2, #3
 80028c8:	d1e3      	bne.n	8002892 <HAL_GPIO_Init+0x5e>
      temp = GPIOx->MODER;
 80028ca:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 80028cc:	9d02      	ldr	r5, [sp, #8]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80028ce:	40b2      	lsls	r2, r6
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 80028d0:	4025      	ands	r5, r4
 80028d2:	002c      	movs	r4, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80028d4:	4314      	orrs	r4, r2
      GPIOx->MODER = temp;
 80028d6:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80028d8:	24c0      	movs	r4, #192	; 0xc0
 80028da:	4662      	mov	r2, ip
 80028dc:	02a4      	lsls	r4, r4, #10
 80028de:	4222      	tst	r2, r4
 80028e0:	d048      	beq.n	8002974 <HAL_GPIO_Init+0x140>
        temp = EXTI->EXTICR[position >> 2u];
 80028e2:	4a25      	ldr	r2, [pc, #148]	; (8002978 <HAL_GPIO_Init+0x144>)
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 80028e4:	2503      	movs	r5, #3
        temp = EXTI->EXTICR[position >> 2u];
 80028e6:	089c      	lsrs	r4, r3, #2
 80028e8:	00a4      	lsls	r4, r4, #2
 80028ea:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 80028ec:	220f      	movs	r2, #15
 80028ee:	401d      	ands	r5, r3
 80028f0:	00ed      	lsls	r5, r5, #3
 80028f2:	40aa      	lsls	r2, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80028f4:	27a0      	movs	r7, #160	; 0xa0
        temp = EXTI->EXTICR[position >> 2u];
 80028f6:	6e26      	ldr	r6, [r4, #96]	; 0x60
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80028f8:	05ff      	lsls	r7, r7, #23
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 80028fa:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80028fc:	2200      	movs	r2, #0
 80028fe:	42b8      	cmp	r0, r7
 8002900:	d00c      	beq.n	800291c <HAL_GPIO_Init+0xe8>
 8002902:	4f1e      	ldr	r7, [pc, #120]	; (800297c <HAL_GPIO_Init+0x148>)
 8002904:	3201      	adds	r2, #1
 8002906:	42b8      	cmp	r0, r7
 8002908:	d008      	beq.n	800291c <HAL_GPIO_Init+0xe8>
 800290a:	4f1d      	ldr	r7, [pc, #116]	; (8002980 <HAL_GPIO_Init+0x14c>)
 800290c:	3201      	adds	r2, #1
 800290e:	42b8      	cmp	r0, r7
 8002910:	d004      	beq.n	800291c <HAL_GPIO_Init+0xe8>
 8002912:	4f1c      	ldr	r7, [pc, #112]	; (8002984 <HAL_GPIO_Init+0x150>)
 8002914:	3201      	adds	r2, #1
 8002916:	42b8      	cmp	r0, r7
 8002918:	d000      	beq.n	800291c <HAL_GPIO_Init+0xe8>
 800291a:	3202      	adds	r2, #2
 800291c:	40aa      	lsls	r2, r5
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800291e:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8002920:	4332      	orrs	r2, r6
        EXTI->EXTICR[position >> 2u] = temp;
 8002922:	6622      	str	r2, [r4, #96]	; 0x60
        temp = EXTI->RTSR1;
 8002924:	4c14      	ldr	r4, [pc, #80]	; (8002978 <HAL_GPIO_Init+0x144>)
        temp &= ~(iocurrent);
 8002926:	9a01      	ldr	r2, [sp, #4]
        temp = EXTI->RTSR1;
 8002928:	6826      	ldr	r6, [r4, #0]
          temp |= iocurrent;
 800292a:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(iocurrent);
 800292c:	43d2      	mvns	r2, r2
          temp |= iocurrent;
 800292e:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8002930:	02ff      	lsls	r7, r7, #11
 8002932:	d401      	bmi.n	8002938 <HAL_GPIO_Init+0x104>
        temp &= ~(iocurrent);
 8002934:	0035      	movs	r5, r6
 8002936:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002938:	4667      	mov	r7, ip
        EXTI->RTSR1 = temp;
 800293a:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 800293c:	6866      	ldr	r6, [r4, #4]
          temp |= iocurrent;
 800293e:	9d01      	ldr	r5, [sp, #4]
 8002940:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002942:	02bf      	lsls	r7, r7, #10
 8002944:	d401      	bmi.n	800294a <HAL_GPIO_Init+0x116>
        temp &= ~(iocurrent);
 8002946:	0035      	movs	r5, r6
 8002948:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800294a:	4667      	mov	r7, ip
        EXTI->FTSR1 = temp;
 800294c:	6065      	str	r5, [r4, #4]
        temp = EXTI->EMR1;
 800294e:	4c0e      	ldr	r4, [pc, #56]	; (8002988 <HAL_GPIO_Init+0x154>)
          temp |= iocurrent;
 8002950:	9d01      	ldr	r5, [sp, #4]
        temp = EXTI->EMR1;
 8002952:	6fe6      	ldr	r6, [r4, #124]	; 0x7c
          temp |= iocurrent;
 8002954:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8002956:	03bf      	lsls	r7, r7, #14
 8002958:	d401      	bmi.n	800295e <HAL_GPIO_Init+0x12a>
        temp &= ~(iocurrent);
 800295a:	0035      	movs	r5, r6
 800295c:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800295e:	4667      	mov	r7, ip
        EXTI->EMR1 = temp;
 8002960:	67e5      	str	r5, [r4, #124]	; 0x7c
        temp = EXTI->IMR1;
 8002962:	4c0a      	ldr	r4, [pc, #40]	; (800298c <HAL_GPIO_Init+0x158>)
          temp |= iocurrent;
 8002964:	9e01      	ldr	r6, [sp, #4]
        temp = EXTI->IMR1;
 8002966:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
          temp |= iocurrent;
 8002968:	432e      	orrs	r6, r5
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800296a:	03ff      	lsls	r7, r7, #15
 800296c:	d401      	bmi.n	8002972 <HAL_GPIO_Init+0x13e>
        temp &= ~(iocurrent);
 800296e:	4015      	ands	r5, r2
 8002970:	002e      	movs	r6, r5
        EXTI->IMR1 = temp;
 8002972:	67e6      	str	r6, [r4, #124]	; 0x7c
    position++;
 8002974:	3301      	adds	r3, #1
 8002976:	e760      	b.n	800283a <HAL_GPIO_Init+0x6>
 8002978:	40021800 	.word	0x40021800
 800297c:	50000400 	.word	0x50000400
 8002980:	50000800 	.word	0x50000800
 8002984:	50000c00 	.word	0x50000c00
 8002988:	40021808 	.word	0x40021808
 800298c:	40021804 	.word	0x40021804

08002990 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8002990:	b510      	push	{r4, lr}
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8002992:	4c11      	ldr	r4, [pc, #68]	; (80029d8 <HAL_PWREx_ControlVoltageScaling+0x48>)
 8002994:	4911      	ldr	r1, [pc, #68]	; (80029dc <HAL_PWREx_ControlVoltageScaling+0x4c>)
 8002996:	6823      	ldr	r3, [r4, #0]
{
 8002998:	0002      	movs	r2, r0
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 800299a:	400b      	ands	r3, r1
 800299c:	4303      	orrs	r3, r0
 800299e:	6023      	str	r3, [r4, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80029a0:	2380      	movs	r3, #128	; 0x80
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80029a2:	2000      	movs	r0, #0
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80029a4:	009b      	lsls	r3, r3, #2
 80029a6:	429a      	cmp	r2, r3
 80029a8:	d10e      	bne.n	80029c8 <HAL_PWREx_ControlVoltageScaling+0x38>
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 80029aa:	4b0d      	ldr	r3, [pc, #52]	; (80029e0 <HAL_PWREx_ControlVoltageScaling+0x50>)
 80029ac:	490d      	ldr	r1, [pc, #52]	; (80029e4 <HAL_PWREx_ControlVoltageScaling+0x54>)
 80029ae:	6818      	ldr	r0, [r3, #0]
 80029b0:	2306      	movs	r3, #6
 80029b2:	4358      	muls	r0, r3
 80029b4:	f7fd fbc0 	bl	8000138 <__udivsi3>
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 80029b8:	2280      	movs	r2, #128	; 0x80
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 80029ba:	1c43      	adds	r3, r0, #1
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 80029bc:	00d2      	lsls	r2, r2, #3
 80029be:	6961      	ldr	r1, [r4, #20]
 80029c0:	0008      	movs	r0, r1
 80029c2:	4010      	ands	r0, r2
 80029c4:	4211      	tst	r1, r2
 80029c6:	d100      	bne.n	80029ca <HAL_PWREx_ControlVoltageScaling+0x3a>
}
 80029c8:	bd10      	pop	{r4, pc}
      if (wait_loop_index != 0U)
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	d001      	beq.n	80029d2 <HAL_PWREx_ControlVoltageScaling+0x42>
        wait_loop_index--;
 80029ce:	3b01      	subs	r3, #1
 80029d0:	e7f5      	b.n	80029be <HAL_PWREx_ControlVoltageScaling+0x2e>
        return HAL_TIMEOUT;
 80029d2:	2003      	movs	r0, #3
 80029d4:	e7f8      	b.n	80029c8 <HAL_PWREx_ControlVoltageScaling+0x38>
 80029d6:	46c0      	nop			; (mov r8, r8)
 80029d8:	40007000 	.word	0x40007000
 80029dc:	fffff9ff 	.word	0xfffff9ff
 80029e0:	20000000 	.word	0x20000000
 80029e4:	000f4240 	.word	0x000f4240

080029e8 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80029e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029ea:	0004      	movs	r4, r0
 80029ec:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80029ee:	2800      	cmp	r0, #0
 80029f0:	d023      	beq.n	8002a3a <HAL_RCC_OscConfig+0x52>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80029f2:	6803      	ldr	r3, [r0, #0]
 80029f4:	07db      	lsls	r3, r3, #31
 80029f6:	d410      	bmi.n	8002a1a <HAL_RCC_OscConfig+0x32>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80029f8:	6823      	ldr	r3, [r4, #0]
 80029fa:	079b      	lsls	r3, r3, #30
 80029fc:	d45e      	bmi.n	8002abc <HAL_RCC_OscConfig+0xd4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80029fe:	6823      	ldr	r3, [r4, #0]
 8002a00:	071b      	lsls	r3, r3, #28
 8002a02:	d500      	bpl.n	8002a06 <HAL_RCC_OscConfig+0x1e>
 8002a04:	e0c3      	b.n	8002b8e <HAL_RCC_OscConfig+0x1a6>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002a06:	6823      	ldr	r3, [r4, #0]
 8002a08:	075b      	lsls	r3, r3, #29
 8002a0a:	d500      	bpl.n	8002a0e <HAL_RCC_OscConfig+0x26>
 8002a0c:	e0f5      	b.n	8002bfa <HAL_RCC_OscConfig+0x212>
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8002a0e:	69e2      	ldr	r2, [r4, #28]
 8002a10:	2a00      	cmp	r2, #0
 8002a12:	d000      	beq.n	8002a16 <HAL_RCC_OscConfig+0x2e>
 8002a14:	e17c      	b.n	8002d10 <HAL_RCC_OscConfig+0x328>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8002a16:	2000      	movs	r0, #0
 8002a18:	e029      	b.n	8002a6e <HAL_RCC_OscConfig+0x86>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002a1a:	2238      	movs	r2, #56	; 0x38
 8002a1c:	4db0      	ldr	r5, [pc, #704]	; (8002ce0 <HAL_RCC_OscConfig+0x2f8>)
 8002a1e:	68ab      	ldr	r3, [r5, #8]
 8002a20:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002a22:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 8002a24:	2b10      	cmp	r3, #16
 8002a26:	d10a      	bne.n	8002a3e <HAL_RCC_OscConfig+0x56>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002a28:	43d2      	mvns	r2, r2
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 8002a2a:	0793      	lsls	r3, r2, #30
 8002a2c:	d109      	bne.n	8002a42 <HAL_RCC_OscConfig+0x5a>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002a2e:	682b      	ldr	r3, [r5, #0]
 8002a30:	039b      	lsls	r3, r3, #14
 8002a32:	d5e1      	bpl.n	80029f8 <HAL_RCC_OscConfig+0x10>
 8002a34:	6863      	ldr	r3, [r4, #4]
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d1de      	bne.n	80029f8 <HAL_RCC_OscConfig+0x10>
          return HAL_ERROR;
 8002a3a:	2001      	movs	r0, #1
 8002a3c:	e017      	b.n	8002a6e <HAL_RCC_OscConfig+0x86>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE))
 8002a3e:	2b08      	cmp	r3, #8
 8002a40:	d0f5      	beq.n	8002a2e <HAL_RCC_OscConfig+0x46>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002a42:	2280      	movs	r2, #128	; 0x80
 8002a44:	6863      	ldr	r3, [r4, #4]
 8002a46:	0252      	lsls	r2, r2, #9
 8002a48:	4293      	cmp	r3, r2
 8002a4a:	d112      	bne.n	8002a72 <HAL_RCC_OscConfig+0x8a>
 8002a4c:	682a      	ldr	r2, [r5, #0]
 8002a4e:	4313      	orrs	r3, r2
 8002a50:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002a52:	f7ff fe1f 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002a56:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8002a58:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002a5a:	02bf      	lsls	r7, r7, #10
 8002a5c:	682b      	ldr	r3, [r5, #0]
 8002a5e:	423b      	tst	r3, r7
 8002a60:	d1ca      	bne.n	80029f8 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002a62:	f7ff fe17 	bl	8002694 <HAL_GetTick>
 8002a66:	1b80      	subs	r0, r0, r6
 8002a68:	2864      	cmp	r0, #100	; 0x64
 8002a6a:	d9f7      	bls.n	8002a5c <HAL_RCC_OscConfig+0x74>
            return HAL_TIMEOUT;
 8002a6c:	2003      	movs	r0, #3
}
 8002a6e:	b005      	add	sp, #20
 8002a70:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002a72:	21a0      	movs	r1, #160	; 0xa0
 8002a74:	02c9      	lsls	r1, r1, #11
 8002a76:	428b      	cmp	r3, r1
 8002a78:	d108      	bne.n	8002a8c <HAL_RCC_OscConfig+0xa4>
 8002a7a:	2380      	movs	r3, #128	; 0x80
 8002a7c:	6829      	ldr	r1, [r5, #0]
 8002a7e:	02db      	lsls	r3, r3, #11
 8002a80:	430b      	orrs	r3, r1
 8002a82:	602b      	str	r3, [r5, #0]
 8002a84:	682b      	ldr	r3, [r5, #0]
 8002a86:	431a      	orrs	r2, r3
 8002a88:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002a8a:	e7e2      	b.n	8002a52 <HAL_RCC_OscConfig+0x6a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002a8c:	682a      	ldr	r2, [r5, #0]
 8002a8e:	4995      	ldr	r1, [pc, #596]	; (8002ce4 <HAL_RCC_OscConfig+0x2fc>)
 8002a90:	400a      	ands	r2, r1
 8002a92:	602a      	str	r2, [r5, #0]
 8002a94:	682a      	ldr	r2, [r5, #0]
 8002a96:	4994      	ldr	r1, [pc, #592]	; (8002ce8 <HAL_RCC_OscConfig+0x300>)
 8002a98:	400a      	ands	r2, r1
 8002a9a:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d1d8      	bne.n	8002a52 <HAL_RCC_OscConfig+0x6a>
        tickstart = HAL_GetTick();
 8002aa0:	f7ff fdf8 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002aa4:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8002aa6:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002aa8:	02bf      	lsls	r7, r7, #10
 8002aaa:	682b      	ldr	r3, [r5, #0]
 8002aac:	423b      	tst	r3, r7
 8002aae:	d0a3      	beq.n	80029f8 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002ab0:	f7ff fdf0 	bl	8002694 <HAL_GetTick>
 8002ab4:	1b80      	subs	r0, r0, r6
 8002ab6:	2864      	cmp	r0, #100	; 0x64
 8002ab8:	d9f7      	bls.n	8002aaa <HAL_RCC_OscConfig+0xc2>
 8002aba:	e7d7      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002abc:	2338      	movs	r3, #56	; 0x38
 8002abe:	4d88      	ldr	r5, [pc, #544]	; (8002ce0 <HAL_RCC_OscConfig+0x2f8>)
 8002ac0:	68aa      	ldr	r2, [r5, #8]
 8002ac2:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002ac4:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8002ac6:	2b10      	cmp	r3, #16
 8002ac8:	d128      	bne.n	8002b1c <HAL_RCC_OscConfig+0x134>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002aca:	2103      	movs	r1, #3
 8002acc:	400a      	ands	r2, r1
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8002ace:	2a02      	cmp	r2, #2
 8002ad0:	d126      	bne.n	8002b20 <HAL_RCC_OscConfig+0x138>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8002ad2:	682a      	ldr	r2, [r5, #0]
 8002ad4:	0552      	lsls	r2, r2, #21
 8002ad6:	d502      	bpl.n	8002ade <HAL_RCC_OscConfig+0xf6>
 8002ad8:	68e2      	ldr	r2, [r4, #12]
 8002ada:	2a00      	cmp	r2, #0
 8002adc:	d0ad      	beq.n	8002a3a <HAL_RCC_OscConfig+0x52>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002ade:	6869      	ldr	r1, [r5, #4]
 8002ae0:	6962      	ldr	r2, [r4, #20]
 8002ae2:	4882      	ldr	r0, [pc, #520]	; (8002cec <HAL_RCC_OscConfig+0x304>)
 8002ae4:	0212      	lsls	r2, r2, #8
 8002ae6:	4001      	ands	r1, r0
 8002ae8:	430a      	orrs	r2, r1
 8002aea:	606a      	str	r2, [r5, #4]
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d10d      	bne.n	8002b0c <HAL_RCC_OscConfig+0x124>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002af0:	682b      	ldr	r3, [r5, #0]
 8002af2:	4a7f      	ldr	r2, [pc, #508]	; (8002cf0 <HAL_RCC_OscConfig+0x308>)
 8002af4:	4013      	ands	r3, r2
 8002af6:	6922      	ldr	r2, [r4, #16]
 8002af8:	4313      	orrs	r3, r2
 8002afa:	602b      	str	r3, [r5, #0]
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 8002afc:	682b      	ldr	r3, [r5, #0]
 8002afe:	4a7d      	ldr	r2, [pc, #500]	; (8002cf4 <HAL_RCC_OscConfig+0x30c>)
 8002b00:	049b      	lsls	r3, r3, #18
 8002b02:	0f5b      	lsrs	r3, r3, #29
 8002b04:	40da      	lsrs	r2, r3
 8002b06:	0013      	movs	r3, r2
 8002b08:	4a7b      	ldr	r2, [pc, #492]	; (8002cf8 <HAL_RCC_OscConfig+0x310>)
 8002b0a:	6013      	str	r3, [r2, #0]
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8002b0c:	4b7b      	ldr	r3, [pc, #492]	; (8002cfc <HAL_RCC_OscConfig+0x314>)
 8002b0e:	6818      	ldr	r0, [r3, #0]
 8002b10:	f7ff fd78 	bl	8002604 <HAL_InitTick>
 8002b14:	2800      	cmp	r0, #0
 8002b16:	d100      	bne.n	8002b1a <HAL_RCC_OscConfig+0x132>
 8002b18:	e771      	b.n	80029fe <HAL_RCC_OscConfig+0x16>
 8002b1a:	e78e      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI))
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d0d8      	beq.n	8002ad2 <HAL_RCC_OscConfig+0xea>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8002b20:	68e3      	ldr	r3, [r4, #12]
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d020      	beq.n	8002b68 <HAL_RCC_OscConfig+0x180>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002b26:	682b      	ldr	r3, [r5, #0]
 8002b28:	4a71      	ldr	r2, [pc, #452]	; (8002cf0 <HAL_RCC_OscConfig+0x308>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002b2a:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002b2c:	4013      	ands	r3, r2
 8002b2e:	6922      	ldr	r2, [r4, #16]
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002b30:	00ff      	lsls	r7, r7, #3
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002b32:	4313      	orrs	r3, r2
 8002b34:	602b      	str	r3, [r5, #0]
        __HAL_RCC_HSI_ENABLE();
 8002b36:	2380      	movs	r3, #128	; 0x80
 8002b38:	682a      	ldr	r2, [r5, #0]
 8002b3a:	005b      	lsls	r3, r3, #1
 8002b3c:	4313      	orrs	r3, r2
 8002b3e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002b40:	f7ff fda8 	bl	8002694 <HAL_GetTick>
 8002b44:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002b46:	682b      	ldr	r3, [r5, #0]
 8002b48:	423b      	tst	r3, r7
 8002b4a:	d007      	beq.n	8002b5c <HAL_RCC_OscConfig+0x174>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002b4c:	686a      	ldr	r2, [r5, #4]
 8002b4e:	6963      	ldr	r3, [r4, #20]
 8002b50:	4966      	ldr	r1, [pc, #408]	; (8002cec <HAL_RCC_OscConfig+0x304>)
 8002b52:	021b      	lsls	r3, r3, #8
 8002b54:	400a      	ands	r2, r1
 8002b56:	4313      	orrs	r3, r2
 8002b58:	606b      	str	r3, [r5, #4]
 8002b5a:	e750      	b.n	80029fe <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002b5c:	f7ff fd9a 	bl	8002694 <HAL_GetTick>
 8002b60:	1b80      	subs	r0, r0, r6
 8002b62:	2802      	cmp	r0, #2
 8002b64:	d9ef      	bls.n	8002b46 <HAL_RCC_OscConfig+0x15e>
 8002b66:	e781      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_HSI_DISABLE();
 8002b68:	682b      	ldr	r3, [r5, #0]
 8002b6a:	4a65      	ldr	r2, [pc, #404]	; (8002d00 <HAL_RCC_OscConfig+0x318>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002b6c:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_DISABLE();
 8002b6e:	4013      	ands	r3, r2
 8002b70:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002b72:	f7ff fd8f 	bl	8002694 <HAL_GetTick>
 8002b76:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002b78:	00ff      	lsls	r7, r7, #3
 8002b7a:	682b      	ldr	r3, [r5, #0]
 8002b7c:	423b      	tst	r3, r7
 8002b7e:	d100      	bne.n	8002b82 <HAL_RCC_OscConfig+0x19a>
 8002b80:	e73d      	b.n	80029fe <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002b82:	f7ff fd87 	bl	8002694 <HAL_GetTick>
 8002b86:	1b80      	subs	r0, r0, r6
 8002b88:	2802      	cmp	r0, #2
 8002b8a:	d9f6      	bls.n	8002b7a <HAL_RCC_OscConfig+0x192>
 8002b8c:	e76e      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8002b8e:	2138      	movs	r1, #56	; 0x38
 8002b90:	4b53      	ldr	r3, [pc, #332]	; (8002ce0 <HAL_RCC_OscConfig+0x2f8>)
 8002b92:	689a      	ldr	r2, [r3, #8]
 8002b94:	001d      	movs	r5, r3
 8002b96:	400a      	ands	r2, r1
 8002b98:	2a18      	cmp	r2, #24
 8002b9a:	d108      	bne.n	8002bae <HAL_RCC_OscConfig+0x1c6>
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8002b9c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002b9e:	079b      	lsls	r3, r3, #30
 8002ba0:	d400      	bmi.n	8002ba4 <HAL_RCC_OscConfig+0x1bc>
 8002ba2:	e730      	b.n	8002a06 <HAL_RCC_OscConfig+0x1e>
 8002ba4:	69a3      	ldr	r3, [r4, #24]
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	d000      	beq.n	8002bac <HAL_RCC_OscConfig+0x1c4>
 8002baa:	e72c      	b.n	8002a06 <HAL_RCC_OscConfig+0x1e>
 8002bac:	e745      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002bae:	69a2      	ldr	r2, [r4, #24]
 8002bb0:	2301      	movs	r3, #1
 8002bb2:	2a00      	cmp	r2, #0
 8002bb4:	d010      	beq.n	8002bd8 <HAL_RCC_OscConfig+0x1f0>
        __HAL_RCC_LSI_ENABLE();
 8002bb6:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8002bb8:	2702      	movs	r7, #2
        __HAL_RCC_LSI_ENABLE();
 8002bba:	4313      	orrs	r3, r2
 8002bbc:	662b      	str	r3, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8002bbe:	f7ff fd69 	bl	8002694 <HAL_GetTick>
 8002bc2:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8002bc4:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002bc6:	423b      	tst	r3, r7
 8002bc8:	d000      	beq.n	8002bcc <HAL_RCC_OscConfig+0x1e4>
 8002bca:	e71c      	b.n	8002a06 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002bcc:	f7ff fd62 	bl	8002694 <HAL_GetTick>
 8002bd0:	1b80      	subs	r0, r0, r6
 8002bd2:	2802      	cmp	r0, #2
 8002bd4:	d9f6      	bls.n	8002bc4 <HAL_RCC_OscConfig+0x1dc>
 8002bd6:	e749      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_LSI_DISABLE();
 8002bd8:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8002bda:	2702      	movs	r7, #2
        __HAL_RCC_LSI_DISABLE();
 8002bdc:	439a      	bics	r2, r3
 8002bde:	662a      	str	r2, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8002be0:	f7ff fd58 	bl	8002694 <HAL_GetTick>
 8002be4:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8002be6:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002be8:	423b      	tst	r3, r7
 8002bea:	d100      	bne.n	8002bee <HAL_RCC_OscConfig+0x206>
 8002bec:	e70b      	b.n	8002a06 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002bee:	f7ff fd51 	bl	8002694 <HAL_GetTick>
 8002bf2:	1b80      	subs	r0, r0, r6
 8002bf4:	2802      	cmp	r0, #2
 8002bf6:	d9f6      	bls.n	8002be6 <HAL_RCC_OscConfig+0x1fe>
 8002bf8:	e738      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 8002bfa:	2138      	movs	r1, #56	; 0x38
 8002bfc:	4b38      	ldr	r3, [pc, #224]	; (8002ce0 <HAL_RCC_OscConfig+0x2f8>)
 8002bfe:	689a      	ldr	r2, [r3, #8]
 8002c00:	001d      	movs	r5, r3
 8002c02:	400a      	ands	r2, r1
 8002c04:	2a20      	cmp	r2, #32
 8002c06:	d108      	bne.n	8002c1a <HAL_RCC_OscConfig+0x232>
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 8002c08:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002c0a:	079b      	lsls	r3, r3, #30
 8002c0c:	d400      	bmi.n	8002c10 <HAL_RCC_OscConfig+0x228>
 8002c0e:	e6fe      	b.n	8002a0e <HAL_RCC_OscConfig+0x26>
 8002c10:	68a3      	ldr	r3, [r4, #8]
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d000      	beq.n	8002c18 <HAL_RCC_OscConfig+0x230>
 8002c16:	e6fa      	b.n	8002a0e <HAL_RCC_OscConfig+0x26>
 8002c18:	e70f      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8002c1a:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002c1c:	2100      	movs	r1, #0
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8002c1e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c20:	0552      	lsls	r2, r2, #21
    FlagStatus       pwrclkchanged = RESET;
 8002c22:	9100      	str	r1, [sp, #0]
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8002c24:	4213      	tst	r3, r2
 8002c26:	d108      	bne.n	8002c3a <HAL_RCC_OscConfig+0x252>
        __HAL_RCC_PWR_CLK_ENABLE();
 8002c28:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8002c2a:	4313      	orrs	r3, r2
 8002c2c:	63eb      	str	r3, [r5, #60]	; 0x3c
 8002c2e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8002c30:	4013      	ands	r3, r2
 8002c32:	9303      	str	r3, [sp, #12]
 8002c34:	9b03      	ldr	r3, [sp, #12]
        pwrclkchanged = SET;
 8002c36:	2301      	movs	r3, #1
 8002c38:	9300      	str	r3, [sp, #0]
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002c3a:	2780      	movs	r7, #128	; 0x80
 8002c3c:	4e31      	ldr	r6, [pc, #196]	; (8002d04 <HAL_RCC_OscConfig+0x31c>)
 8002c3e:	007f      	lsls	r7, r7, #1
 8002c40:	6833      	ldr	r3, [r6, #0]
 8002c42:	423b      	tst	r3, r7
 8002c44:	d015      	beq.n	8002c72 <HAL_RCC_OscConfig+0x28a>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002c46:	68a3      	ldr	r3, [r4, #8]
 8002c48:	2b01      	cmp	r3, #1
 8002c4a:	d122      	bne.n	8002c92 <HAL_RCC_OscConfig+0x2aa>
 8002c4c:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8002c4e:	4313      	orrs	r3, r2
 8002c50:	65eb      	str	r3, [r5, #92]	; 0x5c
        tickstart = HAL_GetTick();
 8002c52:	f7ff fd1f 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002c56:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8002c58:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002c5a:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8002c5c:	423b      	tst	r3, r7
 8002c5e:	d038      	beq.n	8002cd2 <HAL_RCC_OscConfig+0x2ea>
      if (pwrclkchanged == SET)
 8002c60:	9b00      	ldr	r3, [sp, #0]
 8002c62:	2b01      	cmp	r3, #1
 8002c64:	d000      	beq.n	8002c68 <HAL_RCC_OscConfig+0x280>
 8002c66:	e6d2      	b.n	8002a0e <HAL_RCC_OscConfig+0x26>
        __HAL_RCC_PWR_CLK_DISABLE();
 8002c68:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8002c6a:	4a27      	ldr	r2, [pc, #156]	; (8002d08 <HAL_RCC_OscConfig+0x320>)
 8002c6c:	4013      	ands	r3, r2
 8002c6e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8002c70:	e6cd      	b.n	8002a0e <HAL_RCC_OscConfig+0x26>
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8002c72:	6833      	ldr	r3, [r6, #0]
 8002c74:	433b      	orrs	r3, r7
 8002c76:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8002c78:	f7ff fd0c 	bl	8002694 <HAL_GetTick>
 8002c7c:	9001      	str	r0, [sp, #4]
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002c7e:	6833      	ldr	r3, [r6, #0]
 8002c80:	423b      	tst	r3, r7
 8002c82:	d1e0      	bne.n	8002c46 <HAL_RCC_OscConfig+0x25e>
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002c84:	f7ff fd06 	bl	8002694 <HAL_GetTick>
 8002c88:	9b01      	ldr	r3, [sp, #4]
 8002c8a:	1ac0      	subs	r0, r0, r3
 8002c8c:	2802      	cmp	r0, #2
 8002c8e:	d9f6      	bls.n	8002c7e <HAL_RCC_OscConfig+0x296>
 8002c90:	e6ec      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002c92:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8002c94:	2b05      	cmp	r3, #5
 8002c96:	d105      	bne.n	8002ca4 <HAL_RCC_OscConfig+0x2bc>
 8002c98:	3b01      	subs	r3, #1
 8002c9a:	4313      	orrs	r3, r2
 8002c9c:	65eb      	str	r3, [r5, #92]	; 0x5c
 8002c9e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	e7d4      	b.n	8002c4e <HAL_RCC_OscConfig+0x266>
 8002ca4:	2101      	movs	r1, #1
 8002ca6:	438a      	bics	r2, r1
 8002ca8:	65ea      	str	r2, [r5, #92]	; 0x5c
 8002caa:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8002cac:	3103      	adds	r1, #3
 8002cae:	438a      	bics	r2, r1
 8002cb0:	65ea      	str	r2, [r5, #92]	; 0x5c
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d1cd      	bne.n	8002c52 <HAL_RCC_OscConfig+0x26a>
        tickstart = HAL_GetTick();
 8002cb6:	f7ff fced 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002cba:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8002cbc:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002cbe:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8002cc0:	423b      	tst	r3, r7
 8002cc2:	d0cd      	beq.n	8002c60 <HAL_RCC_OscConfig+0x278>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002cc4:	f7ff fce6 	bl	8002694 <HAL_GetTick>
 8002cc8:	4b10      	ldr	r3, [pc, #64]	; (8002d0c <HAL_RCC_OscConfig+0x324>)
 8002cca:	1b80      	subs	r0, r0, r6
 8002ccc:	4298      	cmp	r0, r3
 8002cce:	d9f6      	bls.n	8002cbe <HAL_RCC_OscConfig+0x2d6>
 8002cd0:	e6cc      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002cd2:	f7ff fcdf 	bl	8002694 <HAL_GetTick>
 8002cd6:	4b0d      	ldr	r3, [pc, #52]	; (8002d0c <HAL_RCC_OscConfig+0x324>)
 8002cd8:	1b80      	subs	r0, r0, r6
 8002cda:	4298      	cmp	r0, r3
 8002cdc:	d9bd      	bls.n	8002c5a <HAL_RCC_OscConfig+0x272>
 8002cde:	e6c5      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
 8002ce0:	40021000 	.word	0x40021000
 8002ce4:	fffeffff 	.word	0xfffeffff
 8002ce8:	fffbffff 	.word	0xfffbffff
 8002cec:	ffff80ff 	.word	0xffff80ff
 8002cf0:	ffffc7ff 	.word	0xffffc7ff
 8002cf4:	00f42400 	.word	0x00f42400
 8002cf8:	20000000 	.word	0x20000000
 8002cfc:	20000008 	.word	0x20000008
 8002d00:	fffffeff 	.word	0xfffffeff
 8002d04:	40007000 	.word	0x40007000
 8002d08:	efffffff 	.word	0xefffffff
 8002d0c:	00001388 	.word	0x00001388
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002d10:	2038      	movs	r0, #56	; 0x38
 8002d12:	4b3e      	ldr	r3, [pc, #248]	; (8002e0c <HAL_RCC_OscConfig+0x424>)
 8002d14:	6899      	ldr	r1, [r3, #8]
 8002d16:	001d      	movs	r5, r3
 8002d18:	4001      	ands	r1, r0
 8002d1a:	2910      	cmp	r1, #16
 8002d1c:	d050      	beq.n	8002dc0 <HAL_RCC_OscConfig+0x3d8>
        __HAL_RCC_PLL_DISABLE();
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	493b      	ldr	r1, [pc, #236]	; (8002e10 <HAL_RCC_OscConfig+0x428>)
 8002d22:	400b      	ands	r3, r1
 8002d24:	602b      	str	r3, [r5, #0]
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8002d26:	2a02      	cmp	r2, #2
 8002d28:	d135      	bne.n	8002d96 <HAL_RCC_OscConfig+0x3ae>
        tickstart = HAL_GetTick();
 8002d2a:	f7ff fcb3 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8002d2e:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8002d30:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8002d32:	04bf      	lsls	r7, r7, #18
 8002d34:	682b      	ldr	r3, [r5, #0]
 8002d36:	423b      	tst	r3, r7
 8002d38:	d127      	bne.n	8002d8a <HAL_RCC_OscConfig+0x3a2>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002d3a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8002d3c:	6a23      	ldr	r3, [r4, #32]
 8002d3e:	68ea      	ldr	r2, [r5, #12]
 8002d40:	430b      	orrs	r3, r1
 8002d42:	4934      	ldr	r1, [pc, #208]	; (8002e14 <HAL_RCC_OscConfig+0x42c>)
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8002d44:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002d46:	400a      	ands	r2, r1
 8002d48:	4313      	orrs	r3, r2
 8002d4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8002d4c:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002d4e:	4313      	orrs	r3, r2
 8002d50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8002d52:	4313      	orrs	r3, r2
 8002d54:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002d56:	0212      	lsls	r2, r2, #8
 8002d58:	4313      	orrs	r3, r2
 8002d5a:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 8002d5c:	2380      	movs	r3, #128	; 0x80
 8002d5e:	682a      	ldr	r2, [r5, #0]
 8002d60:	045b      	lsls	r3, r3, #17
 8002d62:	4313      	orrs	r3, r2
 8002d64:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 8002d66:	2380      	movs	r3, #128	; 0x80
 8002d68:	68ea      	ldr	r2, [r5, #12]
 8002d6a:	055b      	lsls	r3, r3, #21
 8002d6c:	4313      	orrs	r3, r2
 8002d6e:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 8002d70:	f7ff fc90 	bl	8002694 <HAL_GetTick>
 8002d74:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8002d76:	682b      	ldr	r3, [r5, #0]
 8002d78:	4233      	tst	r3, r6
 8002d7a:	d000      	beq.n	8002d7e <HAL_RCC_OscConfig+0x396>
 8002d7c:	e64b      	b.n	8002a16 <HAL_RCC_OscConfig+0x2e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002d7e:	f7ff fc89 	bl	8002694 <HAL_GetTick>
 8002d82:	1b00      	subs	r0, r0, r4
 8002d84:	2802      	cmp	r0, #2
 8002d86:	d9f6      	bls.n	8002d76 <HAL_RCC_OscConfig+0x38e>
 8002d88:	e670      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002d8a:	f7ff fc83 	bl	8002694 <HAL_GetTick>
 8002d8e:	1b80      	subs	r0, r0, r6
 8002d90:	2802      	cmp	r0, #2
 8002d92:	d9cf      	bls.n	8002d34 <HAL_RCC_OscConfig+0x34c>
 8002d94:	e66a      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
        tickstart = HAL_GetTick();
 8002d96:	f7ff fc7d 	bl	8002694 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8002d9a:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 8002d9c:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8002d9e:	04b6      	lsls	r6, r6, #18
 8002da0:	682b      	ldr	r3, [r5, #0]
 8002da2:	0018      	movs	r0, r3
 8002da4:	4030      	ands	r0, r6
 8002da6:	4233      	tst	r3, r6
 8002da8:	d104      	bne.n	8002db4 <HAL_RCC_OscConfig+0x3cc>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLREN);
 8002daa:	68eb      	ldr	r3, [r5, #12]
 8002dac:	4a1a      	ldr	r2, [pc, #104]	; (8002e18 <HAL_RCC_OscConfig+0x430>)
 8002dae:	4013      	ands	r3, r2
 8002db0:	60eb      	str	r3, [r5, #12]
 8002db2:	e65c      	b.n	8002a6e <HAL_RCC_OscConfig+0x86>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002db4:	f7ff fc6e 	bl	8002694 <HAL_GetTick>
 8002db8:	1b00      	subs	r0, r0, r4
 8002dba:	2802      	cmp	r0, #2
 8002dbc:	d9f0      	bls.n	8002da0 <HAL_RCC_OscConfig+0x3b8>
 8002dbe:	e655      	b.n	8002a6c <HAL_RCC_OscConfig+0x84>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002dc0:	2a01      	cmp	r2, #1
 8002dc2:	d100      	bne.n	8002dc6 <HAL_RCC_OscConfig+0x3de>
 8002dc4:	e639      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002dc6:	2203      	movs	r2, #3
        temp_pllckcfg = RCC->PLLCFGR;
 8002dc8:	68db      	ldr	r3, [r3, #12]
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002dca:	6a21      	ldr	r1, [r4, #32]
 8002dcc:	401a      	ands	r2, r3
 8002dce:	428a      	cmp	r2, r1
 8002dd0:	d000      	beq.n	8002dd4 <HAL_RCC_OscConfig+0x3ec>
 8002dd2:	e632      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002dd4:	2270      	movs	r2, #112	; 0x70
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002dd6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002dd8:	401a      	ands	r2, r3
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002dda:	428a      	cmp	r2, r1
 8002ddc:	d000      	beq.n	8002de0 <HAL_RCC_OscConfig+0x3f8>
 8002dde:	e62c      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8002de0:	21fe      	movs	r1, #254	; 0xfe
 8002de2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002de4:	01c9      	lsls	r1, r1, #7
 8002de6:	4019      	ands	r1, r3
 8002de8:	0212      	lsls	r2, r2, #8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002dea:	4291      	cmp	r1, r2
 8002dec:	d000      	beq.n	8002df0 <HAL_RCC_OscConfig+0x408>
 8002dee:	e624      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002df0:	22f8      	movs	r2, #248	; 0xf8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8002df2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002df4:	0392      	lsls	r2, r2, #14
 8002df6:	401a      	ands	r2, r3
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8002df8:	428a      	cmp	r2, r1
 8002dfa:	d000      	beq.n	8002dfe <HAL_RCC_OscConfig+0x416>
 8002dfc:	e61d      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002dfe:	6b22      	ldr	r2, [r4, #48]	; 0x30
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 8002e00:	0f5b      	lsrs	r3, r3, #29
 8002e02:	075b      	lsls	r3, r3, #29
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002e04:	4293      	cmp	r3, r2
 8002e06:	d100      	bne.n	8002e0a <HAL_RCC_OscConfig+0x422>
 8002e08:	e605      	b.n	8002a16 <HAL_RCC_OscConfig+0x2e>
 8002e0a:	e616      	b.n	8002a3a <HAL_RCC_OscConfig+0x52>
 8002e0c:	40021000 	.word	0x40021000
 8002e10:	feffffff 	.word	0xfeffffff
 8002e14:	1fc1808c 	.word	0x1fc1808c
 8002e18:	effefffc 	.word	0xeffefffc

08002e1c <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002e1c:	2338      	movs	r3, #56	; 0x38
 8002e1e:	4a1e      	ldr	r2, [pc, #120]	; (8002e98 <HAL_RCC_GetSysClockFreq+0x7c>)
{
 8002e20:	b570      	push	{r4, r5, r6, lr}
  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002e22:	6891      	ldr	r1, [r2, #8]
 8002e24:	0014      	movs	r4, r2
 8002e26:	4219      	tst	r1, r3
 8002e28:	d105      	bne.n	8002e36 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8002e2a:	6813      	ldr	r3, [r2, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 8002e2c:	481b      	ldr	r0, [pc, #108]	; (8002e9c <HAL_RCC_GetSysClockFreq+0x80>)
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8002e2e:	049b      	lsls	r3, r3, #18
 8002e30:	0f5b      	lsrs	r3, r3, #29
    sysclockfreq = (HSI_VALUE / hsidiv);
 8002e32:	40d8      	lsrs	r0, r3
  {
    sysclockfreq = 0U;
  }

  return sysclockfreq;
}
 8002e34:	bd70      	pop	{r4, r5, r6, pc}
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002e36:	6891      	ldr	r1, [r2, #8]
 8002e38:	4019      	ands	r1, r3
 8002e3a:	2908      	cmp	r1, #8
 8002e3c:	d027      	beq.n	8002e8e <HAL_RCC_GetSysClockFreq+0x72>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002e3e:	6891      	ldr	r1, [r2, #8]
 8002e40:	4019      	ands	r1, r3
 8002e42:	2910      	cmp	r1, #16
 8002e44:	d117      	bne.n	8002e76 <HAL_RCC_GetSysClockFreq+0x5a>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8002e46:	68d3      	ldr	r3, [r2, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8002e48:	68d1      	ldr	r1, [r2, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8002e4a:	43db      	mvns	r3, r3
 8002e4c:	227f      	movs	r2, #127	; 0x7f
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e4e:	68e5      	ldr	r5, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8002e50:	0649      	lsls	r1, r1, #25
 8002e52:	0f49      	lsrs	r1, r1, #29
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e54:	0a2d      	lsrs	r5, r5, #8
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8002e56:	3101      	adds	r1, #1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e58:	4015      	ands	r5, r2
    switch (pllsource)
 8002e5a:	079b      	lsls	r3, r3, #30
 8002e5c:	d109      	bne.n	8002e72 <HAL_RCC_GetSysClockFreq+0x56>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8002e5e:	4810      	ldr	r0, [pc, #64]	; (8002ea0 <HAL_RCC_GetSysClockFreq+0x84>)
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e60:	f7fd f96a 	bl	8000138 <__udivsi3>
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8002e64:	68e1      	ldr	r1, [r4, #12]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e66:	4368      	muls	r0, r5
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8002e68:	0f49      	lsrs	r1, r1, #29
 8002e6a:	3101      	adds	r1, #1
    sysclockfreq = pllvco / pllr;
 8002e6c:	f7fd f964 	bl	8000138 <__udivsi3>
  return sysclockfreq;
 8002e70:	e7e0      	b.n	8002e34 <HAL_RCC_GetSysClockFreq+0x18>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8002e72:	480a      	ldr	r0, [pc, #40]	; (8002e9c <HAL_RCC_GetSysClockFreq+0x80>)
 8002e74:	e7f4      	b.n	8002e60 <HAL_RCC_GetSysClockFreq+0x44>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 8002e76:	6891      	ldr	r1, [r2, #8]
 8002e78:	4019      	ands	r1, r3
 8002e7a:	2920      	cmp	r1, #32
 8002e7c:	d009      	beq.n	8002e92 <HAL_RCC_GetSysClockFreq+0x76>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8002e7e:	6892      	ldr	r2, [r2, #8]
    sysclockfreq = 0U;
 8002e80:	2000      	movs	r0, #0
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8002e82:	4013      	ands	r3, r2
 8002e84:	2b18      	cmp	r3, #24
 8002e86:	d1d5      	bne.n	8002e34 <HAL_RCC_GetSysClockFreq+0x18>
    sysclockfreq = LSI_VALUE;
 8002e88:	20fa      	movs	r0, #250	; 0xfa
 8002e8a:	01c0      	lsls	r0, r0, #7
  return sysclockfreq;
 8002e8c:	e7d2      	b.n	8002e34 <HAL_RCC_GetSysClockFreq+0x18>
    sysclockfreq = HSE_VALUE;
 8002e8e:	4804      	ldr	r0, [pc, #16]	; (8002ea0 <HAL_RCC_GetSysClockFreq+0x84>)
 8002e90:	e7d0      	b.n	8002e34 <HAL_RCC_GetSysClockFreq+0x18>
    sysclockfreq = LSE_VALUE;
 8002e92:	2080      	movs	r0, #128	; 0x80
 8002e94:	0200      	lsls	r0, r0, #8
 8002e96:	e7cd      	b.n	8002e34 <HAL_RCC_GetSysClockFreq+0x18>
 8002e98:	40021000 	.word	0x40021000
 8002e9c:	00f42400 	.word	0x00f42400
 8002ea0:	007a1200 	.word	0x007a1200

08002ea4 <HAL_RCC_ClockConfig>:
{
 8002ea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002ea6:	0005      	movs	r5, r0
 8002ea8:	000e      	movs	r6, r1
  if (RCC_ClkInitStruct == NULL)
 8002eaa:	2800      	cmp	r0, #0
 8002eac:	d101      	bne.n	8002eb2 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8002eae:	2001      	movs	r0, #1
}
 8002eb0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8002eb2:	2707      	movs	r7, #7
 8002eb4:	4c4a      	ldr	r4, [pc, #296]	; (8002fe0 <HAL_RCC_ClockConfig+0x13c>)
 8002eb6:	6823      	ldr	r3, [r4, #0]
 8002eb8:	403b      	ands	r3, r7
 8002eba:	428b      	cmp	r3, r1
 8002ebc:	d32a      	bcc.n	8002f14 <HAL_RCC_ClockConfig+0x70>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002ebe:	6829      	ldr	r1, [r5, #0]
 8002ec0:	078b      	lsls	r3, r1, #30
 8002ec2:	d43b      	bmi.n	8002f3c <HAL_RCC_ClockConfig+0x98>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002ec4:	07cb      	lsls	r3, r1, #31
 8002ec6:	d448      	bmi.n	8002f5a <HAL_RCC_ClockConfig+0xb6>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8002ec8:	2707      	movs	r7, #7
 8002eca:	6823      	ldr	r3, [r4, #0]
 8002ecc:	403b      	ands	r3, r7
 8002ece:	42b3      	cmp	r3, r6
 8002ed0:	d90a      	bls.n	8002ee8 <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002ed2:	6823      	ldr	r3, [r4, #0]
 8002ed4:	43bb      	bics	r3, r7
 8002ed6:	4333      	orrs	r3, r6
 8002ed8:	6023      	str	r3, [r4, #0]
    tickstart = HAL_GetTick();
 8002eda:	f7ff fbdb 	bl	8002694 <HAL_GetTick>
 8002ede:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8002ee0:	6823      	ldr	r3, [r4, #0]
 8002ee2:	403b      	ands	r3, r7
 8002ee4:	42b3      	cmp	r3, r6
 8002ee6:	d16b      	bne.n	8002fc0 <HAL_RCC_ClockConfig+0x11c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002ee8:	682b      	ldr	r3, [r5, #0]
 8002eea:	4c3e      	ldr	r4, [pc, #248]	; (8002fe4 <HAL_RCC_ClockConfig+0x140>)
 8002eec:	075b      	lsls	r3, r3, #29
 8002eee:	d46f      	bmi.n	8002fd0 <HAL_RCC_ClockConfig+0x12c>
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8002ef0:	f7ff ff94 	bl	8002e1c <HAL_RCC_GetSysClockFreq>
 8002ef4:	68a3      	ldr	r3, [r4, #8]
 8002ef6:	4a3c      	ldr	r2, [pc, #240]	; (8002fe8 <HAL_RCC_ClockConfig+0x144>)
 8002ef8:	051b      	lsls	r3, r3, #20
 8002efa:	0f1b      	lsrs	r3, r3, #28
 8002efc:	009b      	lsls	r3, r3, #2
 8002efe:	589b      	ldr	r3, [r3, r2]
 8002f00:	221f      	movs	r2, #31
 8002f02:	4013      	ands	r3, r2
 8002f04:	40d8      	lsrs	r0, r3
 8002f06:	4b39      	ldr	r3, [pc, #228]	; (8002fec <HAL_RCC_ClockConfig+0x148>)
 8002f08:	6018      	str	r0, [r3, #0]
  return HAL_InitTick(uwTickPrio);
 8002f0a:	4b39      	ldr	r3, [pc, #228]	; (8002ff0 <HAL_RCC_ClockConfig+0x14c>)
 8002f0c:	6818      	ldr	r0, [r3, #0]
 8002f0e:	f7ff fb79 	bl	8002604 <HAL_InitTick>
 8002f12:	e7cd      	b.n	8002eb0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002f14:	6823      	ldr	r3, [r4, #0]
 8002f16:	43bb      	bics	r3, r7
 8002f18:	430b      	orrs	r3, r1
 8002f1a:	6023      	str	r3, [r4, #0]
    tickstart = HAL_GetTick();
 8002f1c:	f7ff fbba 	bl	8002694 <HAL_GetTick>
 8002f20:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8002f22:	6823      	ldr	r3, [r4, #0]
 8002f24:	403b      	ands	r3, r7
 8002f26:	42b3      	cmp	r3, r6
 8002f28:	d0c9      	beq.n	8002ebe <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002f2a:	f7ff fbb3 	bl	8002694 <HAL_GetTick>
 8002f2e:	9b01      	ldr	r3, [sp, #4]
 8002f30:	1ac0      	subs	r0, r0, r3
 8002f32:	4b30      	ldr	r3, [pc, #192]	; (8002ff4 <HAL_RCC_ClockConfig+0x150>)
 8002f34:	4298      	cmp	r0, r3
 8002f36:	d9f4      	bls.n	8002f22 <HAL_RCC_ClockConfig+0x7e>
        return HAL_TIMEOUT;
 8002f38:	2003      	movs	r0, #3
 8002f3a:	e7b9      	b.n	8002eb0 <HAL_RCC_ClockConfig+0xc>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002f3c:	4a29      	ldr	r2, [pc, #164]	; (8002fe4 <HAL_RCC_ClockConfig+0x140>)
 8002f3e:	074b      	lsls	r3, r1, #29
 8002f40:	d504      	bpl.n	8002f4c <HAL_RCC_ClockConfig+0xa8>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8002f42:	23e0      	movs	r3, #224	; 0xe0
 8002f44:	6890      	ldr	r0, [r2, #8]
 8002f46:	01db      	lsls	r3, r3, #7
 8002f48:	4303      	orrs	r3, r0
 8002f4a:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002f4c:	6893      	ldr	r3, [r2, #8]
 8002f4e:	482a      	ldr	r0, [pc, #168]	; (8002ff8 <HAL_RCC_ClockConfig+0x154>)
 8002f50:	4003      	ands	r3, r0
 8002f52:	68a8      	ldr	r0, [r5, #8]
 8002f54:	4303      	orrs	r3, r0
 8002f56:	6093      	str	r3, [r2, #8]
 8002f58:	e7b4      	b.n	8002ec4 <HAL_RCC_ClockConfig+0x20>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002f5a:	686a      	ldr	r2, [r5, #4]
 8002f5c:	4f21      	ldr	r7, [pc, #132]	; (8002fe4 <HAL_RCC_ClockConfig+0x140>)
 8002f5e:	2a01      	cmp	r2, #1
 8002f60:	d119      	bne.n	8002f96 <HAL_RCC_ClockConfig+0xf2>
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002f62:	683b      	ldr	r3, [r7, #0]
 8002f64:	039b      	lsls	r3, r3, #14
 8002f66:	d5a2      	bpl.n	8002eae <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8002f68:	2107      	movs	r1, #7
 8002f6a:	68bb      	ldr	r3, [r7, #8]
 8002f6c:	438b      	bics	r3, r1
 8002f6e:	4313      	orrs	r3, r2
 8002f70:	60bb      	str	r3, [r7, #8]
    tickstart = HAL_GetTick();
 8002f72:	f7ff fb8f 	bl	8002694 <HAL_GetTick>
 8002f76:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002f78:	2338      	movs	r3, #56	; 0x38
 8002f7a:	68ba      	ldr	r2, [r7, #8]
 8002f7c:	401a      	ands	r2, r3
 8002f7e:	686b      	ldr	r3, [r5, #4]
 8002f80:	00db      	lsls	r3, r3, #3
 8002f82:	429a      	cmp	r2, r3
 8002f84:	d0a0      	beq.n	8002ec8 <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002f86:	f7ff fb85 	bl	8002694 <HAL_GetTick>
 8002f8a:	9b01      	ldr	r3, [sp, #4]
 8002f8c:	1ac0      	subs	r0, r0, r3
 8002f8e:	4b19      	ldr	r3, [pc, #100]	; (8002ff4 <HAL_RCC_ClockConfig+0x150>)
 8002f90:	4298      	cmp	r0, r3
 8002f92:	d9f1      	bls.n	8002f78 <HAL_RCC_ClockConfig+0xd4>
 8002f94:	e7d0      	b.n	8002f38 <HAL_RCC_ClockConfig+0x94>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002f96:	2a02      	cmp	r2, #2
 8002f98:	d103      	bne.n	8002fa2 <HAL_RCC_ClockConfig+0xfe>
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8002f9a:	683b      	ldr	r3, [r7, #0]
 8002f9c:	019b      	lsls	r3, r3, #6
 8002f9e:	d4e3      	bmi.n	8002f68 <HAL_RCC_ClockConfig+0xc4>
 8002fa0:	e785      	b.n	8002eae <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8002fa2:	2a00      	cmp	r2, #0
 8002fa4:	d103      	bne.n	8002fae <HAL_RCC_ClockConfig+0x10a>
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002fa6:	683b      	ldr	r3, [r7, #0]
 8002fa8:	055b      	lsls	r3, r3, #21
 8002faa:	d4dd      	bmi.n	8002f68 <HAL_RCC_ClockConfig+0xc4>
 8002fac:	e77f      	b.n	8002eae <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 8002fae:	2302      	movs	r3, #2
 8002fb0:	2a03      	cmp	r2, #3
 8002fb2:	d103      	bne.n	8002fbc <HAL_RCC_ClockConfig+0x118>
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8002fb4:	6e39      	ldr	r1, [r7, #96]	; 0x60
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002fb6:	4219      	tst	r1, r3
 8002fb8:	d1d6      	bne.n	8002f68 <HAL_RCC_ClockConfig+0xc4>
 8002fba:	e778      	b.n	8002eae <HAL_RCC_ClockConfig+0xa>
 8002fbc:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8002fbe:	e7fa      	b.n	8002fb6 <HAL_RCC_ClockConfig+0x112>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002fc0:	f7ff fb68 	bl	8002694 <HAL_GetTick>
 8002fc4:	9b01      	ldr	r3, [sp, #4]
 8002fc6:	1ac0      	subs	r0, r0, r3
 8002fc8:	4b0a      	ldr	r3, [pc, #40]	; (8002ff4 <HAL_RCC_ClockConfig+0x150>)
 8002fca:	4298      	cmp	r0, r3
 8002fcc:	d988      	bls.n	8002ee0 <HAL_RCC_ClockConfig+0x3c>
 8002fce:	e7b3      	b.n	8002f38 <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8002fd0:	68a3      	ldr	r3, [r4, #8]
 8002fd2:	4a0a      	ldr	r2, [pc, #40]	; (8002ffc <HAL_RCC_ClockConfig+0x158>)
 8002fd4:	4013      	ands	r3, r2
 8002fd6:	68ea      	ldr	r2, [r5, #12]
 8002fd8:	4313      	orrs	r3, r2
 8002fda:	60a3      	str	r3, [r4, #8]
 8002fdc:	e788      	b.n	8002ef0 <HAL_RCC_ClockConfig+0x4c>
 8002fde:	46c0      	nop			; (mov r8, r8)
 8002fe0:	40022000 	.word	0x40022000
 8002fe4:	40021000 	.word	0x40021000
 8002fe8:	08009030 	.word	0x08009030
 8002fec:	20000000 	.word	0x20000000
 8002ff0:	20000008 	.word	0x20000008
 8002ff4:	00001388 	.word	0x00001388
 8002ff8:	fffff0ff 	.word	0xfffff0ff
 8002ffc:	ffff8fff 	.word	0xffff8fff

08003000 <HAL_RCC_GetPCLK1Freq>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
 8003000:	4b06      	ldr	r3, [pc, #24]	; (800301c <HAL_RCC_GetPCLK1Freq+0x1c>)
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return ((uint32_t)(__LL_RCC_CALC_PCLK1_FREQ(HAL_RCC_GetHCLKFreq(), LL_RCC_GetAPB1Prescaler())));
 8003002:	4a07      	ldr	r2, [pc, #28]	; (8003020 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003004:	689b      	ldr	r3, [r3, #8]
 8003006:	045b      	lsls	r3, r3, #17
 8003008:	0f5b      	lsrs	r3, r3, #29
 800300a:	009b      	lsls	r3, r3, #2
 800300c:	589b      	ldr	r3, [r3, r2]
 800300e:	221f      	movs	r2, #31
 8003010:	4013      	ands	r3, r2
 8003012:	4a04      	ldr	r2, [pc, #16]	; (8003024 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003014:	6810      	ldr	r0, [r2, #0]
 8003016:	40d8      	lsrs	r0, r3
}
 8003018:	4770      	bx	lr
 800301a:	46c0      	nop			; (mov r8, r8)
 800301c:	40021000 	.word	0x40021000
 8003020:	08009070 	.word	0x08009070
 8003024:	20000000 	.word	0x20000000

08003028 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8003028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800302a:	0005      	movs	r5, r0

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 800302c:	682b      	ldr	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 800302e:	2000      	movs	r0, #0
{
 8003030:	b085      	sub	sp, #20
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8003032:	039b      	lsls	r3, r3, #14
 8003034:	d53b      	bpl.n	80030ae <HAL_RCCEx_PeriphCLKConfig+0x86>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003036:	2280      	movs	r2, #128	; 0x80
 8003038:	4c48      	ldr	r4, [pc, #288]	; (800315c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800303a:	0552      	lsls	r2, r2, #21
 800303c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    FlagStatus       pwrclkchanged = RESET;
 800303e:	9000      	str	r0, [sp, #0]
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003040:	4213      	tst	r3, r2
 8003042:	d108      	bne.n	8003056 <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003044:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003046:	4313      	orrs	r3, r2
 8003048:	63e3      	str	r3, [r4, #60]	; 0x3c
 800304a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800304c:	4013      	ands	r3, r2
 800304e:	9303      	str	r3, [sp, #12]
 8003050:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003052:	2301      	movs	r3, #1
 8003054:	9300      	str	r3, [sp, #0]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8003056:	2780      	movs	r7, #128	; 0x80
 8003058:	4e41      	ldr	r6, [pc, #260]	; (8003160 <HAL_RCCEx_PeriphCLKConfig+0x138>)
 800305a:	007f      	lsls	r7, r7, #1
 800305c:	6833      	ldr	r3, [r6, #0]
 800305e:	433b      	orrs	r3, r7
 8003060:	6033      	str	r3, [r6, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8003062:	f7ff fb17 	bl	8002694 <HAL_GetTick>
 8003066:	9001      	str	r0, [sp, #4]

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8003068:	6833      	ldr	r3, [r6, #0]
 800306a:	423b      	tst	r3, r7
 800306c:	d011      	beq.n	8003092 <HAL_RCCEx_PeriphCLKConfig+0x6a>
    }

    if (ret == HAL_OK)
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800306e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003070:	23c0      	movs	r3, #192	; 0xc0
 8003072:	0011      	movs	r1, r2
 8003074:	009b      	lsls	r3, r3, #2
 8003076:	4e3b      	ldr	r6, [pc, #236]	; (8003164 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8003078:	4019      	ands	r1, r3

      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 800307a:	421a      	tst	r2, r3
 800307c:	d002      	beq.n	8003084 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 800307e:	696b      	ldr	r3, [r5, #20]
 8003080:	4299      	cmp	r1, r3
 8003082:	d14d      	bne.n	8003120 <HAL_RCCEx_PeriphCLKConfig+0xf8>
      }

      if (ret == HAL_OK)
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003084:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8003086:	2000      	movs	r0, #0
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003088:	401e      	ands	r6, r3
 800308a:	696b      	ldr	r3, [r5, #20]
 800308c:	431e      	orrs	r6, r3
 800308e:	65e6      	str	r6, [r4, #92]	; 0x5c
 8003090:	e006      	b.n	80030a0 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003092:	f7ff faff 	bl	8002694 <HAL_GetTick>
 8003096:	9b01      	ldr	r3, [sp, #4]
 8003098:	1ac0      	subs	r0, r0, r3
 800309a:	2802      	cmp	r0, #2
 800309c:	d9e4      	bls.n	8003068 <HAL_RCCEx_PeriphCLKConfig+0x40>
        ret = HAL_TIMEOUT;
 800309e:	2003      	movs	r0, #3
      /* set overall return value */
      status = ret;
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80030a0:	9b00      	ldr	r3, [sp, #0]
 80030a2:	2b01      	cmp	r3, #1
 80030a4:	d103      	bne.n	80030ae <HAL_RCCEx_PeriphCLKConfig+0x86>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80030a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80030a8:	4a2f      	ldr	r2, [pc, #188]	; (8003168 <HAL_RCCEx_PeriphCLKConfig+0x140>)
 80030aa:	4013      	ands	r3, r2
 80030ac:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80030ae:	682a      	ldr	r2, [r5, #0]
 80030b0:	07d3      	lsls	r3, r2, #31
 80030b2:	d506      	bpl.n	80030c2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 80030b4:	2403      	movs	r4, #3
 80030b6:	4929      	ldr	r1, [pc, #164]	; (800315c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030b8:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 80030ba:	43a3      	bics	r3, r4
 80030bc:	686c      	ldr	r4, [r5, #4]
 80030be:	4323      	orrs	r3, r4
 80030c0:	654b      	str	r3, [r1, #84]	; 0x54
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
  }
#endif /* RCC_CCIPR_LPTIM2SEL */

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80030c2:	0693      	lsls	r3, r2, #26
 80030c4:	d506      	bpl.n	80030d4 <HAL_RCCEx_PeriphCLKConfig+0xac>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80030c6:	4925      	ldr	r1, [pc, #148]	; (800315c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030c8:	4c28      	ldr	r4, [pc, #160]	; (800316c <HAL_RCCEx_PeriphCLKConfig+0x144>)
 80030ca:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 80030cc:	4023      	ands	r3, r4
 80030ce:	68ac      	ldr	r4, [r5, #8]
 80030d0:	4323      	orrs	r3, r4
 80030d2:	654b      	str	r3, [r1, #84]	; 0x54
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
    }
  }
#endif /* RNG */
  /*-------------------------- ADC clock source configuration ----------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 80030d4:	0453      	lsls	r3, r2, #17
 80030d6:	d50f      	bpl.n	80030f8 <HAL_RCCEx_PeriphCLKConfig+0xd0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 80030d8:	4920      	ldr	r1, [pc, #128]	; (800315c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030da:	692c      	ldr	r4, [r5, #16]
 80030dc:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 80030de:	009b      	lsls	r3, r3, #2
 80030e0:	089b      	lsrs	r3, r3, #2
 80030e2:	4323      	orrs	r3, r4
 80030e4:	654b      	str	r3, [r1, #84]	; 0x54

    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLADC)
 80030e6:	2380      	movs	r3, #128	; 0x80
 80030e8:	05db      	lsls	r3, r3, #23
 80030ea:	429c      	cmp	r4, r3
 80030ec:	d104      	bne.n	80030f8 <HAL_RCCEx_PeriphCLKConfig+0xd0>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 80030ee:	2380      	movs	r3, #128	; 0x80
 80030f0:	68cc      	ldr	r4, [r1, #12]
 80030f2:	025b      	lsls	r3, r3, #9
 80030f4:	4323      	orrs	r3, r4
 80030f6:	60cb      	str	r3, [r1, #12]
    }
  }
#endif /* RCC_CCIPR_TIM15SEL */

  /*-------------------------- I2S1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S1) == RCC_PERIPHCLK_I2S1)
 80030f8:	0513      	lsls	r3, r2, #20
 80030fa:	d50f      	bpl.n	800311c <HAL_RCCEx_PeriphCLKConfig+0xf4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2S1CLKSOURCE(PeriphClkInit->I2s1ClockSelection));

    /* Configure the I2S1 clock source */
    __HAL_RCC_I2S1_CONFIG(PeriphClkInit->I2s1ClockSelection);
 80030fc:	4a17      	ldr	r2, [pc, #92]	; (800315c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030fe:	4c1c      	ldr	r4, [pc, #112]	; (8003170 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 8003100:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8003102:	68e9      	ldr	r1, [r5, #12]
 8003104:	4023      	ands	r3, r4
 8003106:	430b      	orrs	r3, r1
 8003108:	6553      	str	r3, [r2, #84]	; 0x54

    if (PeriphClkInit->I2s1ClockSelection == RCC_I2S1CLKSOURCE_PLL)
 800310a:	2380      	movs	r3, #128	; 0x80
 800310c:	01db      	lsls	r3, r3, #7
 800310e:	4299      	cmp	r1, r3
 8003110:	d104      	bne.n	800311c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 8003112:	2380      	movs	r3, #128	; 0x80
 8003114:	68d1      	ldr	r1, [r2, #12]
 8003116:	025b      	lsls	r3, r3, #9
 8003118:	430b      	orrs	r3, r1
 800311a:	60d3      	str	r3, [r2, #12]
    }
  }
#endif /* FDCAN1 || FDCAN2 */

  return status;
}
 800311c:	b005      	add	sp, #20
 800311e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        __HAL_RCC_BACKUPRESET_FORCE();
 8003120:	2380      	movs	r3, #128	; 0x80
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8003122:	6de2      	ldr	r2, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_FORCE();
 8003124:	6de0      	ldr	r0, [r4, #92]	; 0x5c
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8003126:	0011      	movs	r1, r2
        __HAL_RCC_BACKUPRESET_FORCE();
 8003128:	025b      	lsls	r3, r3, #9
 800312a:	4303      	orrs	r3, r0
 800312c:	65e3      	str	r3, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_RELEASE();
 800312e:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8003130:	4810      	ldr	r0, [pc, #64]	; (8003174 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8003132:	4031      	ands	r1, r6
        __HAL_RCC_BACKUPRESET_RELEASE();
 8003134:	4003      	ands	r3, r0
 8003136:	65e3      	str	r3, [r4, #92]	; 0x5c
        RCC->BDCR = tmpregister;
 8003138:	65e1      	str	r1, [r4, #92]	; 0x5c
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 800313a:	07d3      	lsls	r3, r2, #31
 800313c:	d5a2      	bpl.n	8003084 <HAL_RCCEx_PeriphCLKConfig+0x5c>
        tickstart = HAL_GetTick();
 800313e:	f7ff faa9 	bl	8002694 <HAL_GetTick>
 8003142:	0007      	movs	r7, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8003144:	2202      	movs	r2, #2
 8003146:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8003148:	4213      	tst	r3, r2
 800314a:	d19b      	bne.n	8003084 <HAL_RCCEx_PeriphCLKConfig+0x5c>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800314c:	f7ff faa2 	bl	8002694 <HAL_GetTick>
 8003150:	4b09      	ldr	r3, [pc, #36]	; (8003178 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8003152:	1bc0      	subs	r0, r0, r7
 8003154:	4298      	cmp	r0, r3
 8003156:	d9f5      	bls.n	8003144 <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8003158:	e7a1      	b.n	800309e <HAL_RCCEx_PeriphCLKConfig+0x76>
 800315a:	46c0      	nop			; (mov r8, r8)
 800315c:	40021000 	.word	0x40021000
 8003160:	40007000 	.word	0x40007000
 8003164:	fffffcff 	.word	0xfffffcff
 8003168:	efffffff 	.word	0xefffffff
 800316c:	ffffcfff 	.word	0xffffcfff
 8003170:	ffff3fff 	.word	0xffff3fff
 8003174:	fffeffff 	.word	0xfffeffff
 8003178:	00001388 	.word	0x00001388

0800317c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800317c:	b530      	push	{r4, r5, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800317e:	f3ef 8410 	mrs	r4, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003182:	2201      	movs	r2, #1
 8003184:	f382 8810 	msr	PRIMASK, r2
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8003188:	6801      	ldr	r1, [r0, #0]
 800318a:	4d13      	ldr	r5, [pc, #76]	; (80031d8 <UART_EndRxTransfer+0x5c>)
 800318c:	680b      	ldr	r3, [r1, #0]
 800318e:	402b      	ands	r3, r5
 8003190:	600b      	str	r3, [r1, #0]
 8003192:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003196:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800319a:	f382 8810 	msr	PRIMASK, r2
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800319e:	6802      	ldr	r2, [r0, #0]
 80031a0:	4c0e      	ldr	r4, [pc, #56]	; (80031dc <UART_EndRxTransfer+0x60>)
 80031a2:	6893      	ldr	r3, [r2, #8]
 80031a4:	4023      	ands	r3, r4
 80031a6:	6093      	str	r3, [r2, #8]
 80031a8:	f381 8810 	msr	PRIMASK, r1

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80031ac:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 80031ae:	2b01      	cmp	r3, #1
 80031b0:	d10a      	bne.n	80031c8 <UART_EndRxTransfer+0x4c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80031b2:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80031b6:	f383 8810 	msr	PRIMASK, r3
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80031ba:	2410      	movs	r4, #16
 80031bc:	6802      	ldr	r2, [r0, #0]
 80031be:	6813      	ldr	r3, [r2, #0]
 80031c0:	43a3      	bics	r3, r4
 80031c2:	6013      	str	r3, [r2, #0]
 80031c4:	f381 8810 	msr	PRIMASK, r1
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80031c8:	0003      	movs	r3, r0
 80031ca:	2220      	movs	r2, #32
 80031cc:	3388      	adds	r3, #136	; 0x88
 80031ce:	601a      	str	r2, [r3, #0]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80031d0:	2300      	movs	r3, #0
 80031d2:	66c3      	str	r3, [r0, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80031d4:	6703      	str	r3, [r0, #112]	; 0x70
}
 80031d6:	bd30      	pop	{r4, r5, pc}
 80031d8:	fffffedf 	.word	0xfffffedf
 80031dc:	effffffe 	.word	0xeffffffe

080031e0 <HAL_UART_TxCpltCallback>:
 80031e0:	4770      	bx	lr

080031e2 <HAL_UART_ErrorCallback>:
 80031e2:	4770      	bx	lr

080031e4 <UART_DMAAbortOnError>:
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80031e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
  huart->RxXferCount = 0U;
 80031e6:	2300      	movs	r3, #0
 80031e8:	0002      	movs	r2, r0
{
 80031ea:	b510      	push	{r4, lr}
  huart->RxXferCount = 0U;
 80031ec:	325e      	adds	r2, #94	; 0x5e
 80031ee:	8013      	strh	r3, [r2, #0]
  huart->TxXferCount = 0U;
 80031f0:	3a08      	subs	r2, #8
 80031f2:	8013      	strh	r3, [r2, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80031f4:	f7ff fff5 	bl	80031e2 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80031f8:	bd10      	pop	{r4, pc}

080031fa <HAL_UARTEx_RxEventCallback>:
}
 80031fa:	4770      	bx	lr

080031fc <HAL_UART_IRQHandler>:
{
 80031fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 80031fe:	6801      	ldr	r1, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8003200:	4dc1      	ldr	r5, [pc, #772]	; (8003508 <HAL_UART_IRQHandler+0x30c>)
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003202:	69cb      	ldr	r3, [r1, #28]
{
 8003204:	0004      	movs	r4, r0
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8003206:	680a      	ldr	r2, [r1, #0]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8003208:	6888      	ldr	r0, [r1, #8]
  if (errorflags == 0U)
 800320a:	422b      	tst	r3, r5
 800320c:	d110      	bne.n	8003230 <HAL_UART_IRQHandler+0x34>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 800320e:	2520      	movs	r5, #32
 8003210:	422b      	tst	r3, r5
 8003212:	d100      	bne.n	8003216 <HAL_UART_IRQHandler+0x1a>
 8003214:	e099      	b.n	800334a <HAL_UART_IRQHandler+0x14e>
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8003216:	2680      	movs	r6, #128	; 0x80
 8003218:	0576      	lsls	r6, r6, #21
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 800321a:	4015      	ands	r5, r2
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 800321c:	4006      	ands	r6, r0
 800321e:	4335      	orrs	r5, r6
 8003220:	d100      	bne.n	8003224 <HAL_UART_IRQHandler+0x28>
 8003222:	e092      	b.n	800334a <HAL_UART_IRQHandler+0x14e>
      if (huart->RxISR != NULL)
 8003224:	6f23      	ldr	r3, [r4, #112]	; 0x70
      huart->TxISR(huart);
 8003226:	0020      	movs	r0, r4
    if (huart->TxISR != NULL)
 8003228:	2b00      	cmp	r3, #0
 800322a:	d000      	beq.n	800322e <HAL_UART_IRQHandler+0x32>
 800322c:	e082      	b.n	8003334 <HAL_UART_IRQHandler+0x138>
 800322e:	e082      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 8003230:	4db6      	ldr	r5, [pc, #728]	; (800350c <HAL_UART_IRQHandler+0x310>)
 8003232:	4005      	ands	r5, r0
 8003234:	46ac      	mov	ip, r5
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 8003236:	4666      	mov	r6, ip
 8003238:	4db5      	ldr	r5, [pc, #724]	; (8003510 <HAL_UART_IRQHandler+0x314>)
 800323a:	4015      	ands	r5, r2
 800323c:	4335      	orrs	r5, r6
 800323e:	d100      	bne.n	8003242 <HAL_UART_IRQHandler+0x46>
 8003240:	e083      	b.n	800334a <HAL_UART_IRQHandler+0x14e>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8003242:	2501      	movs	r5, #1
 8003244:	422b      	tst	r3, r5
 8003246:	d007      	beq.n	8003258 <HAL_UART_IRQHandler+0x5c>
 8003248:	05d6      	lsls	r6, r2, #23
 800324a:	d505      	bpl.n	8003258 <HAL_UART_IRQHandler+0x5c>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800324c:	0026      	movs	r6, r4
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800324e:	620d      	str	r5, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8003250:	368c      	adds	r6, #140	; 0x8c
 8003252:	6837      	ldr	r7, [r6, #0]
 8003254:	433d      	orrs	r5, r7
 8003256:	6035      	str	r5, [r6, #0]
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003258:	0025      	movs	r5, r4
 800325a:	2602      	movs	r6, #2
 800325c:	358c      	adds	r5, #140	; 0x8c
 800325e:	9501      	str	r5, [sp, #4]
 8003260:	4233      	tst	r3, r6
 8003262:	d007      	beq.n	8003274 <HAL_UART_IRQHandler+0x78>
 8003264:	07c5      	lsls	r5, r0, #31
 8003266:	d505      	bpl.n	8003274 <HAL_UART_IRQHandler+0x78>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8003268:	9d01      	ldr	r5, [sp, #4]
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800326a:	620e      	str	r6, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800326c:	682f      	ldr	r7, [r5, #0]
 800326e:	19b6      	adds	r6, r6, r6
 8003270:	433e      	orrs	r6, r7
 8003272:	602e      	str	r6, [r5, #0]
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003274:	2604      	movs	r6, #4
 8003276:	4233      	tst	r3, r6
 8003278:	d009      	beq.n	800328e <HAL_UART_IRQHandler+0x92>
 800327a:	07c5      	lsls	r5, r0, #31
 800327c:	d507      	bpl.n	800328e <HAL_UART_IRQHandler+0x92>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800327e:	0027      	movs	r7, r4
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8003280:	620e      	str	r6, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8003282:	378c      	adds	r7, #140	; 0x8c
 8003284:	683e      	ldr	r6, [r7, #0]
 8003286:	0035      	movs	r5, r6
 8003288:	2602      	movs	r6, #2
 800328a:	432e      	orrs	r6, r5
 800328c:	603e      	str	r6, [r7, #0]
    if (((isrflags & USART_ISR_ORE) != 0U)
 800328e:	2608      	movs	r6, #8
 8003290:	4233      	tst	r3, r6
 8003292:	d00a      	beq.n	80032aa <HAL_UART_IRQHandler+0xae>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 8003294:	2720      	movs	r7, #32
 8003296:	4665      	mov	r5, ip
 8003298:	4017      	ands	r7, r2
 800329a:	432f      	orrs	r7, r5
 800329c:	d005      	beq.n	80032aa <HAL_UART_IRQHandler+0xae>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800329e:	0027      	movs	r7, r4
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80032a0:	620e      	str	r6, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80032a2:	378c      	adds	r7, #140	; 0x8c
 80032a4:	683d      	ldr	r5, [r7, #0]
 80032a6:	432e      	orrs	r6, r5
 80032a8:	603e      	str	r6, [r7, #0]
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80032aa:	2780      	movs	r7, #128	; 0x80
 80032ac:	0026      	movs	r6, r4
 80032ae:	013f      	lsls	r7, r7, #4
 80032b0:	368c      	adds	r6, #140	; 0x8c
 80032b2:	423b      	tst	r3, r7
 80032b4:	d006      	beq.n	80032c4 <HAL_UART_IRQHandler+0xc8>
 80032b6:	0155      	lsls	r5, r2, #5
 80032b8:	d504      	bpl.n	80032c4 <HAL_UART_IRQHandler+0xc8>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80032ba:	620f      	str	r7, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80032bc:	2120      	movs	r1, #32
 80032be:	6837      	ldr	r7, [r6, #0]
 80032c0:	4339      	orrs	r1, r7
 80032c2:	6031      	str	r1, [r6, #0]
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80032c4:	6831      	ldr	r1, [r6, #0]
 80032c6:	2900      	cmp	r1, #0
 80032c8:	d035      	beq.n	8003336 <HAL_UART_IRQHandler+0x13a>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 80032ca:	2120      	movs	r1, #32
 80032cc:	420b      	tst	r3, r1
 80032ce:	d00a      	beq.n	80032e6 <HAL_UART_IRQHandler+0xea>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 80032d0:	4011      	ands	r1, r2
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 80032d2:	2280      	movs	r2, #128	; 0x80
 80032d4:	0552      	lsls	r2, r2, #21
 80032d6:	4010      	ands	r0, r2
 80032d8:	4301      	orrs	r1, r0
 80032da:	d004      	beq.n	80032e6 <HAL_UART_IRQHandler+0xea>
        if (huart->RxISR != NULL)
 80032dc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80032de:	2b00      	cmp	r3, #0
 80032e0:	d001      	beq.n	80032e6 <HAL_UART_IRQHandler+0xea>
          huart->RxISR(huart);
 80032e2:	0020      	movs	r0, r4
 80032e4:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80032e6:	6822      	ldr	r2, [r4, #0]
      errorcode = huart->ErrorCode;
 80032e8:	9b01      	ldr	r3, [sp, #4]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80032ea:	2740      	movs	r7, #64	; 0x40
      errorcode = huart->ErrorCode;
 80032ec:	681b      	ldr	r3, [r3, #0]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80032ee:	6896      	ldr	r6, [r2, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80032f0:	2228      	movs	r2, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80032f2:	403e      	ands	r6, r7
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80032f4:	4013      	ands	r3, r2
        UART_EndRxTransfer(huart);
 80032f6:	0020      	movs	r0, r4
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80032f8:	431e      	orrs	r6, r3
 80032fa:	d021      	beq.n	8003340 <HAL_UART_IRQHandler+0x144>
        UART_EndRxTransfer(huart);
 80032fc:	f7ff ff3e 	bl	800317c <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003300:	6823      	ldr	r3, [r4, #0]
 8003302:	689b      	ldr	r3, [r3, #8]
 8003304:	423b      	tst	r3, r7
 8003306:	d017      	beq.n	8003338 <HAL_UART_IRQHandler+0x13c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003308:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800330c:	2301      	movs	r3, #1
 800330e:	f383 8810 	msr	PRIMASK, r3
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003312:	6822      	ldr	r2, [r4, #0]
 8003314:	6893      	ldr	r3, [r2, #8]
 8003316:	43bb      	bics	r3, r7
 8003318:	6093      	str	r3, [r2, #8]
 800331a:	f381 8810 	msr	PRIMASK, r1
          if (huart->hdmarx != NULL)
 800331e:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8003320:	2800      	cmp	r0, #0
 8003322:	d009      	beq.n	8003338 <HAL_UART_IRQHandler+0x13c>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003324:	4b7b      	ldr	r3, [pc, #492]	; (8003514 <HAL_UART_IRQHandler+0x318>)
 8003326:	6383      	str	r3, [r0, #56]	; 0x38
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003328:	f7ff fa48 	bl	80027bc <HAL_DMA_Abort_IT>
 800332c:	2800      	cmp	r0, #0
 800332e:	d002      	beq.n	8003336 <HAL_UART_IRQHandler+0x13a>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8003330:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8003332:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8003334:	4798      	blx	r3
}
 8003336:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
            HAL_UART_ErrorCallback(huart);
 8003338:	0020      	movs	r0, r4
 800333a:	f7ff ff52 	bl	80031e2 <HAL_UART_ErrorCallback>
 800333e:	e7fa      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
        HAL_UART_ErrorCallback(huart);
 8003340:	f7ff ff4f 	bl	80031e2 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003344:	9b01      	ldr	r3, [sp, #4]
 8003346:	601e      	str	r6, [r3, #0]
 8003348:	e7f5      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800334a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 800334c:	2d01      	cmp	r5, #1
 800334e:	d000      	beq.n	8003352 <HAL_UART_IRQHandler+0x156>
 8003350:	e098      	b.n	8003484 <HAL_UART_IRQHandler+0x288>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8003352:	2610      	movs	r6, #16
 8003354:	4233      	tst	r3, r6
 8003356:	d100      	bne.n	800335a <HAL_UART_IRQHandler+0x15e>
 8003358:	e094      	b.n	8003484 <HAL_UART_IRQHandler+0x288>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 800335a:	4232      	tst	r2, r6
 800335c:	d100      	bne.n	8003360 <HAL_UART_IRQHandler+0x164>
 800335e:	e091      	b.n	8003484 <HAL_UART_IRQHandler+0x288>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8003360:	620e      	str	r6, [r1, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003362:	688b      	ldr	r3, [r1, #8]
 8003364:	2240      	movs	r2, #64	; 0x40
 8003366:	0018      	movs	r0, r3
 8003368:	4010      	ands	r0, r2
 800336a:	4213      	tst	r3, r2
 800336c:	d052      	beq.n	8003414 <HAL_UART_IRQHandler+0x218>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800336e:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 8003370:	6819      	ldr	r1, [r3, #0]
 8003372:	684b      	ldr	r3, [r1, #4]
 8003374:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8003376:	2b00      	cmp	r3, #0
 8003378:	d0dd      	beq.n	8003336 <HAL_UART_IRQHandler+0x13a>
          && (nb_remaining_rx_data < huart->RxXferSize))
 800337a:	0020      	movs	r0, r4
 800337c:	305c      	adds	r0, #92	; 0x5c
 800337e:	8800      	ldrh	r0, [r0, #0]
 8003380:	4298      	cmp	r0, r3
 8003382:	d9d8      	bls.n	8003336 <HAL_UART_IRQHandler+0x13a>
        huart->RxXferCount = nb_remaining_rx_data;
 8003384:	0020      	movs	r0, r4
 8003386:	305e      	adds	r0, #94	; 0x5e
 8003388:	8003      	strh	r3, [r0, #0]
        if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
 800338a:	6809      	ldr	r1, [r1, #0]
 800338c:	2320      	movs	r3, #32
 800338e:	0008      	movs	r0, r1
 8003390:	4018      	ands	r0, r3
 8003392:	9001      	str	r0, [sp, #4]
 8003394:	4219      	tst	r1, r3
 8003396:	d131      	bne.n	80033fc <HAL_UART_IRQHandler+0x200>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003398:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800339c:	f385 8810 	msr	PRIMASK, r5
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80033a0:	6820      	ldr	r0, [r4, #0]
 80033a2:	4e5d      	ldr	r6, [pc, #372]	; (8003518 <HAL_UART_IRQHandler+0x31c>)
 80033a4:	6801      	ldr	r1, [r0, #0]
 80033a6:	4031      	ands	r1, r6
 80033a8:	6001      	str	r1, [r0, #0]
 80033aa:	f387 8810 	msr	PRIMASK, r7
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80033ae:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80033b2:	f385 8810 	msr	PRIMASK, r5
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80033b6:	6820      	ldr	r0, [r4, #0]
 80033b8:	6881      	ldr	r1, [r0, #8]
 80033ba:	43a9      	bics	r1, r5
 80033bc:	6081      	str	r1, [r0, #8]
 80033be:	f387 8810 	msr	PRIMASK, r7
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80033c2:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80033c6:	f385 8810 	msr	PRIMASK, r5
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80033ca:	6821      	ldr	r1, [r4, #0]
 80033cc:	688f      	ldr	r7, [r1, #8]
 80033ce:	4397      	bics	r7, r2
 80033d0:	608f      	str	r7, [r1, #8]
 80033d2:	f380 8810 	msr	PRIMASK, r0
          huart->RxState = HAL_UART_STATE_READY;
 80033d6:	0022      	movs	r2, r4
 80033d8:	3288      	adds	r2, #136	; 0x88
 80033da:	6013      	str	r3, [r2, #0]
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80033dc:	9b01      	ldr	r3, [sp, #4]
 80033de:	66e3      	str	r3, [r4, #108]	; 0x6c
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80033e0:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80033e4:	f385 8810 	msr	PRIMASK, r5
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80033e8:	2010      	movs	r0, #16
 80033ea:	6822      	ldr	r2, [r4, #0]
 80033ec:	6813      	ldr	r3, [r2, #0]
 80033ee:	4383      	bics	r3, r0
 80033f0:	6013      	str	r3, [r2, #0]
 80033f2:	f381 8810 	msr	PRIMASK, r1
          (void)HAL_DMA_Abort(huart->hdmarx);
 80033f6:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 80033f8:	f7ff f9a2 	bl	8002740 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80033fc:	0023      	movs	r3, r4
 80033fe:	0022      	movs	r2, r4
 8003400:	335e      	adds	r3, #94	; 0x5e
 8003402:	325c      	adds	r2, #92	; 0x5c
 8003404:	881b      	ldrh	r3, [r3, #0]
 8003406:	8811      	ldrh	r1, [r2, #0]
 8003408:	1ac9      	subs	r1, r1, r3
 800340a:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800340c:	0020      	movs	r0, r4
 800340e:	f7ff fef4 	bl	80031fa <HAL_UARTEx_RxEventCallback>
 8003412:	e790      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003414:	0022      	movs	r2, r4
 8003416:	325e      	adds	r2, #94	; 0x5e
 8003418:	8813      	ldrh	r3, [r2, #0]
      if ((huart->RxXferCount > 0U)
 800341a:	8812      	ldrh	r2, [r2, #0]
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800341c:	b29b      	uxth	r3, r3
      if ((huart->RxXferCount > 0U)
 800341e:	2a00      	cmp	r2, #0
 8003420:	d100      	bne.n	8003424 <HAL_UART_IRQHandler+0x228>
 8003422:	e788      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003424:	0022      	movs	r2, r4
 8003426:	325c      	adds	r2, #92	; 0x5c
 8003428:	8811      	ldrh	r1, [r2, #0]
 800342a:	1ac9      	subs	r1, r1, r3
 800342c:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800342e:	2900      	cmp	r1, #0
 8003430:	d100      	bne.n	8003434 <HAL_UART_IRQHandler+0x238>
 8003432:	e780      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003434:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003438:	f385 8810 	msr	PRIMASK, r5
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800343c:	6822      	ldr	r2, [r4, #0]
 800343e:	4e37      	ldr	r6, [pc, #220]	; (800351c <HAL_UART_IRQHandler+0x320>)
 8003440:	6813      	ldr	r3, [r2, #0]
 8003442:	4033      	ands	r3, r6
 8003444:	6013      	str	r3, [r2, #0]
 8003446:	f387 8810 	msr	PRIMASK, r7
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800344a:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800344e:	f385 8810 	msr	PRIMASK, r5
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 8003452:	6822      	ldr	r2, [r4, #0]
 8003454:	4e32      	ldr	r6, [pc, #200]	; (8003520 <HAL_UART_IRQHandler+0x324>)
 8003456:	6893      	ldr	r3, [r2, #8]
 8003458:	4033      	ands	r3, r6
 800345a:	6093      	str	r3, [r2, #8]
 800345c:	f387 8810 	msr	PRIMASK, r7
        huart->RxState = HAL_UART_STATE_READY;
 8003460:	0023      	movs	r3, r4
 8003462:	2220      	movs	r2, #32
 8003464:	3388      	adds	r3, #136	; 0x88
 8003466:	601a      	str	r2, [r3, #0]
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003468:	66e0      	str	r0, [r4, #108]	; 0x6c
        huart->RxISR = NULL;
 800346a:	6720      	str	r0, [r4, #112]	; 0x70
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800346c:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003470:	f385 8810 	msr	PRIMASK, r5
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003474:	2510      	movs	r5, #16
 8003476:	6822      	ldr	r2, [r4, #0]
 8003478:	6813      	ldr	r3, [r2, #0]
 800347a:	43ab      	bics	r3, r5
 800347c:	6013      	str	r3, [r2, #0]
 800347e:	f380 8810 	msr	PRIMASK, r0
 8003482:	e7c3      	b.n	800340c <HAL_UART_IRQHandler+0x210>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 8003484:	2580      	movs	r5, #128	; 0x80
 8003486:	036d      	lsls	r5, r5, #13
 8003488:	422b      	tst	r3, r5
 800348a:	d006      	beq.n	800349a <HAL_UART_IRQHandler+0x29e>
 800348c:	0246      	lsls	r6, r0, #9
 800348e:	d504      	bpl.n	800349a <HAL_UART_IRQHandler+0x29e>
    HAL_UARTEx_WakeupCallback(huart);
 8003490:	0020      	movs	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 8003492:	620d      	str	r5, [r1, #32]
    HAL_UARTEx_WakeupCallback(huart);
 8003494:	f000 fdc6 	bl	8004024 <HAL_UARTEx_WakeupCallback>
    return;
 8003498:	e74d      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 800349a:	2180      	movs	r1, #128	; 0x80
 800349c:	420b      	tst	r3, r1
 800349e:	d007      	beq.n	80034b0 <HAL_UART_IRQHandler+0x2b4>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 80034a0:	2580      	movs	r5, #128	; 0x80
 80034a2:	042d      	lsls	r5, r5, #16
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 80034a4:	4011      	ands	r1, r2
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 80034a6:	4028      	ands	r0, r5
 80034a8:	4308      	orrs	r0, r1
 80034aa:	d001      	beq.n	80034b0 <HAL_UART_IRQHandler+0x2b4>
    if (huart->TxISR != NULL)
 80034ac:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80034ae:	e6ba      	b.n	8003226 <HAL_UART_IRQHandler+0x2a>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 80034b0:	2140      	movs	r1, #64	; 0x40
 80034b2:	420b      	tst	r3, r1
 80034b4:	d016      	beq.n	80034e4 <HAL_UART_IRQHandler+0x2e8>
 80034b6:	420a      	tst	r2, r1
 80034b8:	d014      	beq.n	80034e4 <HAL_UART_IRQHandler+0x2e8>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80034ba:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80034be:	2301      	movs	r3, #1
 80034c0:	f383 8810 	msr	PRIMASK, r3
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80034c4:	6822      	ldr	r2, [r4, #0]
 80034c6:	6813      	ldr	r3, [r2, #0]
 80034c8:	438b      	bics	r3, r1
 80034ca:	6013      	str	r3, [r2, #0]
 80034cc:	f380 8810 	msr	PRIMASK, r0

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80034d0:	0023      	movs	r3, r4
 80034d2:	2220      	movs	r2, #32
 80034d4:	3308      	adds	r3, #8
 80034d6:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 80034d8:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80034da:	0020      	movs	r0, r4
  huart->TxISR = NULL;
 80034dc:	6763      	str	r3, [r4, #116]	; 0x74
  HAL_UART_TxCpltCallback(huart);
 80034de:	f7ff fe7f 	bl	80031e0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80034e2:	e728      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 80034e4:	0219      	lsls	r1, r3, #8
 80034e6:	d505      	bpl.n	80034f4 <HAL_UART_IRQHandler+0x2f8>
 80034e8:	0051      	lsls	r1, r2, #1
 80034ea:	d503      	bpl.n	80034f4 <HAL_UART_IRQHandler+0x2f8>
    HAL_UARTEx_TxFifoEmptyCallback(huart);
 80034ec:	0020      	movs	r0, r4
 80034ee:	f000 fd9b 	bl	8004028 <HAL_UARTEx_TxFifoEmptyCallback>
    return;
 80034f2:	e720      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 80034f4:	01db      	lsls	r3, r3, #7
 80034f6:	d400      	bmi.n	80034fa <HAL_UART_IRQHandler+0x2fe>
 80034f8:	e71d      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
 80034fa:	2a00      	cmp	r2, #0
 80034fc:	db00      	blt.n	8003500 <HAL_UART_IRQHandler+0x304>
 80034fe:	e71a      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
    HAL_UARTEx_RxFifoFullCallback(huart);
 8003500:	0020      	movs	r0, r4
 8003502:	f000 fd90 	bl	8004026 <HAL_UARTEx_RxFifoFullCallback>
    return;
 8003506:	e716      	b.n	8003336 <HAL_UART_IRQHandler+0x13a>
 8003508:	0000080f 	.word	0x0000080f
 800350c:	10000001 	.word	0x10000001
 8003510:	04000120 	.word	0x04000120
 8003514:	080031e5 	.word	0x080031e5
 8003518:	fffffeff 	.word	0xfffffeff
 800351c:	fffffedf 	.word	0xfffffedf
 8003520:	effffffe 	.word	0xeffffffe

08003524 <UART_RxISR_16BIT.part.0>:
/**
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
 8003524:	b570      	push	{r4, r5, r6, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003526:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800352a:	2201      	movs	r2, #1
 800352c:	f382 8810 	msr	PRIMASK, r2
    huart->RxXferCount--;

    if (huart->RxXferCount == 0U)
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8003530:	6801      	ldr	r1, [r0, #0]
 8003532:	4d19      	ldr	r5, [pc, #100]	; (8003598 <UART_RxISR_16BIT.part.0+0x74>)
 8003534:	680b      	ldr	r3, [r1, #0]
 8003536:	402b      	ands	r3, r5
 8003538:	600b      	str	r3, [r1, #0]
 800353a:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800353e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003542:	f382 8810 	msr	PRIMASK, r2

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003546:	6801      	ldr	r1, [r0, #0]
 8003548:	688b      	ldr	r3, [r1, #8]
 800354a:	4393      	bics	r3, r2
 800354c:	608b      	str	r3, [r1, #8]
 800354e:	f384 8810 	msr	PRIMASK, r4

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8003552:	0003      	movs	r3, r0
 8003554:	321f      	adds	r2, #31
 8003556:	3388      	adds	r3, #136	; 0x88
 8003558:	601a      	str	r2, [r3, #0]

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800355a:	2200      	movs	r2, #0

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800355c:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
      huart->RxISR = NULL;
 800355e:	6702      	str	r2, [r0, #112]	; 0x70
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003560:	2b01      	cmp	r3, #1
 8003562:	d116      	bne.n	8003592 <UART_RxISR_16BIT.part.0+0x6e>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003564:	66c2      	str	r2, [r0, #108]	; 0x6c
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003566:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800356a:	f383 8810 	msr	PRIMASK, r3

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800356e:	6801      	ldr	r1, [r0, #0]
 8003570:	330f      	adds	r3, #15
 8003572:	680a      	ldr	r2, [r1, #0]
 8003574:	439a      	bics	r2, r3
 8003576:	600a      	str	r2, [r1, #0]
 8003578:	f384 8810 	msr	PRIMASK, r4

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800357c:	6802      	ldr	r2, [r0, #0]
 800357e:	69d1      	ldr	r1, [r2, #28]
 8003580:	4219      	tst	r1, r3
 8003582:	d000      	beq.n	8003586 <UART_RxISR_16BIT.part.0+0x62>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8003584:	6213      	str	r3, [r2, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8003586:	0003      	movs	r3, r0
 8003588:	335c      	adds	r3, #92	; 0x5c
 800358a:	8819      	ldrh	r1, [r3, #0]
 800358c:	f7ff fe35 	bl	80031fa <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8003590:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_RxCpltCallback(huart);
 8003592:	f7fe ff45 	bl	8002420 <HAL_UART_RxCpltCallback>
}
 8003596:	e7fb      	b.n	8003590 <UART_RxISR_16BIT.part.0+0x6c>
 8003598:	fffffedf 	.word	0xfffffedf

0800359c <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800359c:	0003      	movs	r3, r0
 800359e:	3388      	adds	r3, #136	; 0x88
 80035a0:	681a      	ldr	r2, [r3, #0]
{
 80035a2:	b510      	push	{r4, lr}
 80035a4:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80035a6:	2a22      	cmp	r2, #34	; 0x22
 80035a8:	d114      	bne.n	80035d4 <UART_RxISR_16BIT+0x38>
  uint16_t uhMask = huart->Mask;
 80035aa:	0001      	movs	r1, r0
 80035ac:	3160      	adds	r1, #96	; 0x60
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80035ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 80035b0:	8809      	ldrh	r1, [r1, #0]
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 80035b2:	6d83      	ldr	r3, [r0, #88]	; 0x58
    *tmp = (uint16_t)(uhdata & uhMask);
 80035b4:	400a      	ands	r2, r1
 80035b6:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
    huart->RxXferCount--;
 80035b8:	0002      	movs	r2, r0
    huart->pRxBuffPtr += 2U;
 80035ba:	3302      	adds	r3, #2
 80035bc:	6583      	str	r3, [r0, #88]	; 0x58
    huart->RxXferCount--;
 80035be:	325e      	adds	r2, #94	; 0x5e
 80035c0:	8813      	ldrh	r3, [r2, #0]
 80035c2:	3b01      	subs	r3, #1
 80035c4:	b29b      	uxth	r3, r3
 80035c6:	8013      	strh	r3, [r2, #0]

    if (huart->RxXferCount == 0U)
 80035c8:	8813      	ldrh	r3, [r2, #0]
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d101      	bne.n	80035d2 <UART_RxISR_16BIT+0x36>
 80035ce:	f7ff ffa9 	bl	8003524 <UART_RxISR_16BIT.part.0>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80035d2:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80035d4:	2208      	movs	r2, #8
 80035d6:	6999      	ldr	r1, [r3, #24]
 80035d8:	430a      	orrs	r2, r1
 80035da:	619a      	str	r2, [r3, #24]
}
 80035dc:	e7f9      	b.n	80035d2 <UART_RxISR_16BIT+0x36>

080035de <UART_RxISR_8BIT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80035de:	0003      	movs	r3, r0
 80035e0:	3388      	adds	r3, #136	; 0x88
 80035e2:	681a      	ldr	r2, [r3, #0]
{
 80035e4:	b510      	push	{r4, lr}
 80035e6:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80035e8:	2a22      	cmp	r2, #34	; 0x22
 80035ea:	d115      	bne.n	8003618 <UART_RxISR_8BIT+0x3a>
  uint16_t uhMask = huart->Mask;
 80035ec:	0002      	movs	r2, r0
 80035ee:	3260      	adds	r2, #96	; 0x60
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80035f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80035f2:	8812      	ldrh	r2, [r2, #0]
 80035f4:	4013      	ands	r3, r2
 80035f6:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80035f8:	7013      	strb	r3, [r2, #0]
    huart->RxXferCount--;
 80035fa:	0002      	movs	r2, r0
    huart->pRxBuffPtr++;
 80035fc:	6d83      	ldr	r3, [r0, #88]	; 0x58
    huart->RxXferCount--;
 80035fe:	325e      	adds	r2, #94	; 0x5e
    huart->pRxBuffPtr++;
 8003600:	3301      	adds	r3, #1
 8003602:	6583      	str	r3, [r0, #88]	; 0x58
    huart->RxXferCount--;
 8003604:	8813      	ldrh	r3, [r2, #0]
 8003606:	3b01      	subs	r3, #1
 8003608:	b29b      	uxth	r3, r3
 800360a:	8013      	strh	r3, [r2, #0]
    if (huart->RxXferCount == 0U)
 800360c:	8813      	ldrh	r3, [r2, #0]
 800360e:	2b00      	cmp	r3, #0
 8003610:	d101      	bne.n	8003616 <UART_RxISR_8BIT+0x38>
 8003612:	f7ff ff87 	bl	8003524 <UART_RxISR_16BIT.part.0>
}
 8003616:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8003618:	2208      	movs	r2, #8
 800361a:	6999      	ldr	r1, [r3, #24]
 800361c:	430a      	orrs	r2, r1
 800361e:	619a      	str	r2, [r3, #24]
}
 8003620:	e7f9      	b.n	8003616 <UART_RxISR_8BIT+0x38>
	...

08003624 <UART_RxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 8003624:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 8003626:	6803      	ldr	r3, [r0, #0]
{
 8003628:	b085      	sub	sp, #20
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 800362a:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 800362c:	681a      	ldr	r2, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 800362e:	689e      	ldr	r6, [r3, #8]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 8003630:	9202      	str	r2, [sp, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8003632:	0002      	movs	r2, r0
 8003634:	3288      	adds	r2, #136	; 0x88
 8003636:	6812      	ldr	r2, [r2, #0]
{
 8003638:	0004      	movs	r4, r0
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800363a:	2a22      	cmp	r2, #34	; 0x22
 800363c:	d000      	beq.n	8003640 <UART_RxISR_8BIT_FIFOEN+0x1c>
 800363e:	e0b7      	b.n	80037b0 <UART_RxISR_8BIT_FIFOEN+0x18c>
  uint16_t  uhMask = huart->Mask;
 8003640:	0003      	movs	r3, r0
 8003642:	3360      	adds	r3, #96	; 0x60
 8003644:	881b      	ldrh	r3, [r3, #0]
 8003646:	9301      	str	r3, [sp, #4]
  {
    nb_rx_data = huart->NbRxDataToProcess;
 8003648:	0003      	movs	r3, r0
 800364a:	3368      	adds	r3, #104	; 0x68
 800364c:	881b      	ldrh	r3, [r3, #0]
 800364e:	9303      	str	r3, [sp, #12]
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 8003650:	0022      	movs	r2, r4
 8003652:	9b03      	ldr	r3, [sp, #12]
 8003654:	325e      	adds	r2, #94	; 0x5e
 8003656:	2b00      	cmp	r3, #0
 8003658:	d002      	beq.n	8003660 <UART_RxISR_8BIT_FIFOEN+0x3c>
 800365a:	2320      	movs	r3, #32
 800365c:	421d      	tst	r5, r3
 800365e:	d123      	bne.n	80036a8 <UART_RxISR_8BIT_FIFOEN+0x84>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 8003660:	8813      	ldrh	r3, [r2, #0]
 8003662:	b29a      	uxth	r2, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 8003664:	2b00      	cmp	r3, #0
 8003666:	d01d      	beq.n	80036a4 <UART_RxISR_8BIT_FIFOEN+0x80>
 8003668:	0023      	movs	r3, r4
 800366a:	3368      	adds	r3, #104	; 0x68
 800366c:	881b      	ldrh	r3, [r3, #0]
 800366e:	4293      	cmp	r3, r2
 8003670:	d918      	bls.n	80036a4 <UART_RxISR_8BIT_FIFOEN+0x80>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003672:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003676:	2201      	movs	r2, #1
 8003678:	f382 8810 	msr	PRIMASK, r2
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800367c:	6821      	ldr	r1, [r4, #0]
 800367e:	4d4f      	ldr	r5, [pc, #316]	; (80037bc <UART_RxISR_8BIT_FIFOEN+0x198>)
 8003680:	688b      	ldr	r3, [r1, #8]
 8003682:	402b      	ands	r3, r5
 8003684:	608b      	str	r3, [r1, #8]
 8003686:	f380 8810 	msr	PRIMASK, r0

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_8BIT;
 800368a:	4b4d      	ldr	r3, [pc, #308]	; (80037c0 <UART_RxISR_8BIT_FIFOEN+0x19c>)
 800368c:	6723      	str	r3, [r4, #112]	; 0x70
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800368e:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003692:	f382 8810 	msr	PRIMASK, r2

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8003696:	2320      	movs	r3, #32
 8003698:	6822      	ldr	r2, [r4, #0]
 800369a:	6810      	ldr	r0, [r2, #0]
 800369c:	4303      	orrs	r3, r0
 800369e:	6013      	str	r3, [r2, #0]
 80036a0:	f381 8810 	msr	PRIMASK, r1
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80036a4:	b005      	add	sp, #20
 80036a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80036a8:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80036aa:	9901      	ldr	r1, [sp, #4]
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80036ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80036ae:	400b      	ands	r3, r1
 80036b0:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80036b2:	700b      	strb	r3, [r1, #0]
      huart->pRxBuffPtr++;
 80036b4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80036b6:	3301      	adds	r3, #1
 80036b8:	65a3      	str	r3, [r4, #88]	; 0x58
      huart->RxXferCount--;
 80036ba:	8813      	ldrh	r3, [r2, #0]
 80036bc:	3b01      	subs	r3, #1
 80036be:	b29b      	uxth	r3, r3
 80036c0:	8013      	strh	r3, [r2, #0]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 80036c2:	2307      	movs	r3, #7
      isrflags = READ_REG(huart->Instance->ISR);
 80036c4:	6822      	ldr	r2, [r4, #0]
 80036c6:	69d5      	ldr	r5, [r2, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 80036c8:	421d      	tst	r5, r3
 80036ca:	d02d      	beq.n	8003728 <UART_RxISR_8BIT_FIFOEN+0x104>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 80036cc:	3b06      	subs	r3, #6
 80036ce:	421d      	tst	r5, r3
 80036d0:	d008      	beq.n	80036e4 <UART_RxISR_8BIT_FIFOEN+0xc0>
 80036d2:	9902      	ldr	r1, [sp, #8]
 80036d4:	05c9      	lsls	r1, r1, #23
 80036d6:	d505      	bpl.n	80036e4 <UART_RxISR_8BIT_FIFOEN+0xc0>
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 80036d8:	0021      	movs	r1, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 80036da:	6213      	str	r3, [r2, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 80036dc:	318c      	adds	r1, #140	; 0x8c
 80036de:	6808      	ldr	r0, [r1, #0]
 80036e0:	4303      	orrs	r3, r0
 80036e2:	600b      	str	r3, [r1, #0]
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80036e4:	2302      	movs	r3, #2
 80036e6:	421d      	tst	r5, r3
 80036e8:	d008      	beq.n	80036fc <UART_RxISR_8BIT_FIFOEN+0xd8>
 80036ea:	07f1      	lsls	r1, r6, #31
 80036ec:	d506      	bpl.n	80036fc <UART_RxISR_8BIT_FIFOEN+0xd8>
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 80036ee:	0021      	movs	r1, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 80036f0:	6213      	str	r3, [r2, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 80036f2:	318c      	adds	r1, #140	; 0x8c
 80036f4:	6808      	ldr	r0, [r1, #0]
 80036f6:	18db      	adds	r3, r3, r3
 80036f8:	4303      	orrs	r3, r0
 80036fa:	600b      	str	r3, [r1, #0]
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80036fc:	2304      	movs	r3, #4
 80036fe:	421d      	tst	r5, r3
 8003700:	d008      	beq.n	8003714 <UART_RxISR_8BIT_FIFOEN+0xf0>
 8003702:	07f1      	lsls	r1, r6, #31
 8003704:	d506      	bpl.n	8003714 <UART_RxISR_8BIT_FIFOEN+0xf0>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8003706:	6213      	str	r3, [r2, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
 8003708:	0022      	movs	r2, r4
 800370a:	328c      	adds	r2, #140	; 0x8c
 800370c:	6811      	ldr	r1, [r2, #0]
 800370e:	3b02      	subs	r3, #2
 8003710:	430b      	orrs	r3, r1
 8003712:	6013      	str	r3, [r2, #0]
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8003714:	0027      	movs	r7, r4
 8003716:	378c      	adds	r7, #140	; 0x8c
 8003718:	683b      	ldr	r3, [r7, #0]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d004      	beq.n	8003728 <UART_RxISR_8BIT_FIFOEN+0x104>
          HAL_UART_ErrorCallback(huart);
 800371e:	0020      	movs	r0, r4
 8003720:	f7ff fd5f 	bl	80031e2 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003724:	2300      	movs	r3, #0
 8003726:	603b      	str	r3, [r7, #0]
      if (huart->RxXferCount == 0U)
 8003728:	0023      	movs	r3, r4
 800372a:	335e      	adds	r3, #94	; 0x5e
 800372c:	881b      	ldrh	r3, [r3, #0]
 800372e:	b29a      	uxth	r2, r3
 8003730:	2b00      	cmp	r3, #0
 8003732:	d000      	beq.n	8003736 <UART_RxISR_8BIT_FIFOEN+0x112>
 8003734:	e78c      	b.n	8003650 <UART_RxISR_8BIT_FIFOEN+0x2c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003736:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800373a:	3301      	adds	r3, #1
 800373c:	f383 8810 	msr	PRIMASK, r3
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003740:	6820      	ldr	r0, [r4, #0]
 8003742:	6803      	ldr	r3, [r0, #0]
 8003744:	0019      	movs	r1, r3
 8003746:	4b1f      	ldr	r3, [pc, #124]	; (80037c4 <UART_RxISR_8BIT_FIFOEN+0x1a0>)
 8003748:	4019      	ands	r1, r3
 800374a:	6001      	str	r1, [r0, #0]
 800374c:	f387 8810 	msr	PRIMASK, r7
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003750:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003754:	2301      	movs	r3, #1
 8003756:	f383 8810 	msr	PRIMASK, r3
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800375a:	6821      	ldr	r1, [r4, #0]
 800375c:	4f1a      	ldr	r7, [pc, #104]	; (80037c8 <UART_RxISR_8BIT_FIFOEN+0x1a4>)
 800375e:	688b      	ldr	r3, [r1, #8]
 8003760:	403b      	ands	r3, r7
 8003762:	608b      	str	r3, [r1, #8]
 8003764:	f380 8810 	msr	PRIMASK, r0
        huart->RxState = HAL_UART_STATE_READY;
 8003768:	0023      	movs	r3, r4
 800376a:	2120      	movs	r1, #32
 800376c:	3388      	adds	r3, #136	; 0x88
 800376e:	6019      	str	r1, [r3, #0]
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003770:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
        huart->RxISR = NULL;
 8003772:	6722      	str	r2, [r4, #112]	; 0x70
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003774:	2b01      	cmp	r3, #1
 8003776:	d117      	bne.n	80037a8 <UART_RxISR_8BIT_FIFOEN+0x184>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003778:	66e2      	str	r2, [r4, #108]	; 0x6c
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800377a:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800377e:	f383 8810 	msr	PRIMASK, r3
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003782:	6821      	ldr	r1, [r4, #0]
 8003784:	330f      	adds	r3, #15
 8003786:	680a      	ldr	r2, [r1, #0]
 8003788:	439a      	bics	r2, r3
 800378a:	600a      	str	r2, [r1, #0]
 800378c:	f380 8810 	msr	PRIMASK, r0
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8003790:	6822      	ldr	r2, [r4, #0]
 8003792:	69d1      	ldr	r1, [r2, #28]
 8003794:	4219      	tst	r1, r3
 8003796:	d000      	beq.n	800379a <UART_RxISR_8BIT_FIFOEN+0x176>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8003798:	6213      	str	r3, [r2, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800379a:	0023      	movs	r3, r4
 800379c:	335c      	adds	r3, #92	; 0x5c
 800379e:	0020      	movs	r0, r4
 80037a0:	8819      	ldrh	r1, [r3, #0]
 80037a2:	f7ff fd2a 	bl	80031fa <HAL_UARTEx_RxEventCallback>
 80037a6:	e753      	b.n	8003650 <UART_RxISR_8BIT_FIFOEN+0x2c>
          HAL_UART_RxCpltCallback(huart);
 80037a8:	0020      	movs	r0, r4
 80037aa:	f7fe fe39 	bl	8002420 <HAL_UART_RxCpltCallback>
 80037ae:	e74f      	b.n	8003650 <UART_RxISR_8BIT_FIFOEN+0x2c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80037b0:	2208      	movs	r2, #8
 80037b2:	6999      	ldr	r1, [r3, #24]
 80037b4:	430a      	orrs	r2, r1
 80037b6:	619a      	str	r2, [r3, #24]
}
 80037b8:	e774      	b.n	80036a4 <UART_RxISR_8BIT_FIFOEN+0x80>
 80037ba:	46c0      	nop			; (mov r8, r8)
 80037bc:	efffffff 	.word	0xefffffff
 80037c0:	080035df 	.word	0x080035df
 80037c4:	fffffeff 	.word	0xfffffeff
 80037c8:	effffffe 	.word	0xeffffffe

080037cc <UART_RxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 80037cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 80037ce:	6803      	ldr	r3, [r0, #0]
{
 80037d0:	b085      	sub	sp, #20
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 80037d2:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 80037d4:	681a      	ldr	r2, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 80037d6:	689e      	ldr	r6, [r3, #8]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 80037d8:	9202      	str	r2, [sp, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80037da:	0002      	movs	r2, r0
 80037dc:	3288      	adds	r2, #136	; 0x88
 80037de:	6812      	ldr	r2, [r2, #0]
{
 80037e0:	0004      	movs	r4, r0
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80037e2:	2a22      	cmp	r2, #34	; 0x22
 80037e4:	d000      	beq.n	80037e8 <UART_RxISR_16BIT_FIFOEN+0x1c>
 80037e6:	e0b5      	b.n	8003954 <UART_RxISR_16BIT_FIFOEN+0x188>
  uint16_t  uhMask = huart->Mask;
 80037e8:	0003      	movs	r3, r0
 80037ea:	3360      	adds	r3, #96	; 0x60
 80037ec:	881b      	ldrh	r3, [r3, #0]
 80037ee:	9301      	str	r3, [sp, #4]
  {
    nb_rx_data = huart->NbRxDataToProcess;
 80037f0:	0003      	movs	r3, r0
 80037f2:	3368      	adds	r3, #104	; 0x68
 80037f4:	881b      	ldrh	r3, [r3, #0]
 80037f6:	9303      	str	r3, [sp, #12]
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 80037f8:	0021      	movs	r1, r4
 80037fa:	9b03      	ldr	r3, [sp, #12]
 80037fc:	315e      	adds	r1, #94	; 0x5e
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d002      	beq.n	8003808 <UART_RxISR_16BIT_FIFOEN+0x3c>
 8003802:	2320      	movs	r3, #32
 8003804:	421d      	tst	r5, r3
 8003806:	d123      	bne.n	8003850 <UART_RxISR_16BIT_FIFOEN+0x84>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 8003808:	880b      	ldrh	r3, [r1, #0]
 800380a:	b29a      	uxth	r2, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 800380c:	2b00      	cmp	r3, #0
 800380e:	d01d      	beq.n	800384c <UART_RxISR_16BIT_FIFOEN+0x80>
 8003810:	0023      	movs	r3, r4
 8003812:	3368      	adds	r3, #104	; 0x68
 8003814:	881b      	ldrh	r3, [r3, #0]
 8003816:	4293      	cmp	r3, r2
 8003818:	d918      	bls.n	800384c <UART_RxISR_16BIT_FIFOEN+0x80>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800381a:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800381e:	2201      	movs	r2, #1
 8003820:	f382 8810 	msr	PRIMASK, r2
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 8003824:	6821      	ldr	r1, [r4, #0]
 8003826:	4d4e      	ldr	r5, [pc, #312]	; (8003960 <UART_RxISR_16BIT_FIFOEN+0x194>)
 8003828:	688b      	ldr	r3, [r1, #8]
 800382a:	402b      	ands	r3, r5
 800382c:	608b      	str	r3, [r1, #8]
 800382e:	f380 8810 	msr	PRIMASK, r0

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_16BIT;
 8003832:	4b4c      	ldr	r3, [pc, #304]	; (8003964 <UART_RxISR_16BIT_FIFOEN+0x198>)
 8003834:	6723      	str	r3, [r4, #112]	; 0x70
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003836:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800383a:	f382 8810 	msr	PRIMASK, r2

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 800383e:	2320      	movs	r3, #32
 8003840:	6822      	ldr	r2, [r4, #0]
 8003842:	6810      	ldr	r0, [r2, #0]
 8003844:	4303      	orrs	r3, r0
 8003846:	6013      	str	r3, [r2, #0]
 8003848:	f381 8810 	msr	PRIMASK, r1
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800384c:	b005      	add	sp, #20
 800384e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8003850:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
 8003852:	9d01      	ldr	r5, [sp, #4]
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8003854:	6a58      	ldr	r0, [r3, #36]	; 0x24
      tmp = (uint16_t *) huart->pRxBuffPtr ;
 8003856:	6da2      	ldr	r2, [r4, #88]	; 0x58
      *tmp = (uint16_t)(uhdata & uhMask);
 8003858:	4028      	ands	r0, r5
 800385a:	8010      	strh	r0, [r2, #0]
      huart->pRxBuffPtr += 2U;
 800385c:	3202      	adds	r2, #2
 800385e:	65a2      	str	r2, [r4, #88]	; 0x58
      huart->RxXferCount--;
 8003860:	880a      	ldrh	r2, [r1, #0]
 8003862:	3a01      	subs	r2, #1
 8003864:	b292      	uxth	r2, r2
 8003866:	800a      	strh	r2, [r1, #0]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 8003868:	2207      	movs	r2, #7
      isrflags = READ_REG(huart->Instance->ISR);
 800386a:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 800386c:	4215      	tst	r5, r2
 800386e:	d02d      	beq.n	80038cc <UART_RxISR_16BIT_FIFOEN+0x100>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8003870:	3a06      	subs	r2, #6
 8003872:	4215      	tst	r5, r2
 8003874:	d008      	beq.n	8003888 <UART_RxISR_16BIT_FIFOEN+0xbc>
 8003876:	9902      	ldr	r1, [sp, #8]
 8003878:	05c9      	lsls	r1, r1, #23
 800387a:	d505      	bpl.n	8003888 <UART_RxISR_16BIT_FIFOEN+0xbc>
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 800387c:	0021      	movs	r1, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800387e:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 8003880:	318c      	adds	r1, #140	; 0x8c
 8003882:	6808      	ldr	r0, [r1, #0]
 8003884:	4302      	orrs	r2, r0
 8003886:	600a      	str	r2, [r1, #0]
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003888:	2202      	movs	r2, #2
 800388a:	4215      	tst	r5, r2
 800388c:	d008      	beq.n	80038a0 <UART_RxISR_16BIT_FIFOEN+0xd4>
 800388e:	07f1      	lsls	r1, r6, #31
 8003890:	d506      	bpl.n	80038a0 <UART_RxISR_16BIT_FIFOEN+0xd4>
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 8003892:	0021      	movs	r1, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8003894:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 8003896:	318c      	adds	r1, #140	; 0x8c
 8003898:	6808      	ldr	r0, [r1, #0]
 800389a:	1892      	adds	r2, r2, r2
 800389c:	4302      	orrs	r2, r0
 800389e:	600a      	str	r2, [r1, #0]
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80038a0:	2204      	movs	r2, #4
 80038a2:	4215      	tst	r5, r2
 80038a4:	d008      	beq.n	80038b8 <UART_RxISR_16BIT_FIFOEN+0xec>
 80038a6:	07f1      	lsls	r1, r6, #31
 80038a8:	d506      	bpl.n	80038b8 <UART_RxISR_16BIT_FIFOEN+0xec>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80038aa:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
 80038ac:	0022      	movs	r2, r4
 80038ae:	2302      	movs	r3, #2
 80038b0:	328c      	adds	r2, #140	; 0x8c
 80038b2:	6811      	ldr	r1, [r2, #0]
 80038b4:	430b      	orrs	r3, r1
 80038b6:	6013      	str	r3, [r2, #0]
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80038b8:	0027      	movs	r7, r4
 80038ba:	378c      	adds	r7, #140	; 0x8c
 80038bc:	683b      	ldr	r3, [r7, #0]
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d004      	beq.n	80038cc <UART_RxISR_16BIT_FIFOEN+0x100>
          HAL_UART_ErrorCallback(huart);
 80038c2:	0020      	movs	r0, r4
 80038c4:	f7ff fc8d 	bl	80031e2 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 80038c8:	2300      	movs	r3, #0
 80038ca:	603b      	str	r3, [r7, #0]
      if (huart->RxXferCount == 0U)
 80038cc:	0023      	movs	r3, r4
 80038ce:	335e      	adds	r3, #94	; 0x5e
 80038d0:	881b      	ldrh	r3, [r3, #0]
 80038d2:	b29a      	uxth	r2, r3
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	d000      	beq.n	80038da <UART_RxISR_16BIT_FIFOEN+0x10e>
 80038d8:	e78e      	b.n	80037f8 <UART_RxISR_16BIT_FIFOEN+0x2c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80038da:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80038de:	3301      	adds	r3, #1
 80038e0:	f383 8810 	msr	PRIMASK, r3
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80038e4:	6820      	ldr	r0, [r4, #0]
 80038e6:	6803      	ldr	r3, [r0, #0]
 80038e8:	0019      	movs	r1, r3
 80038ea:	4b1f      	ldr	r3, [pc, #124]	; (8003968 <UART_RxISR_16BIT_FIFOEN+0x19c>)
 80038ec:	4019      	ands	r1, r3
 80038ee:	6001      	str	r1, [r0, #0]
 80038f0:	f387 8810 	msr	PRIMASK, r7
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80038f4:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80038f8:	2301      	movs	r3, #1
 80038fa:	f383 8810 	msr	PRIMASK, r3
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 80038fe:	6821      	ldr	r1, [r4, #0]
 8003900:	4f1a      	ldr	r7, [pc, #104]	; (800396c <UART_RxISR_16BIT_FIFOEN+0x1a0>)
 8003902:	688b      	ldr	r3, [r1, #8]
 8003904:	403b      	ands	r3, r7
 8003906:	608b      	str	r3, [r1, #8]
 8003908:	f380 8810 	msr	PRIMASK, r0
        huart->RxState = HAL_UART_STATE_READY;
 800390c:	0023      	movs	r3, r4
 800390e:	2120      	movs	r1, #32
 8003910:	3388      	adds	r3, #136	; 0x88
 8003912:	6019      	str	r1, [r3, #0]
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003914:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
        huart->RxISR = NULL;
 8003916:	6722      	str	r2, [r4, #112]	; 0x70
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003918:	2b01      	cmp	r3, #1
 800391a:	d117      	bne.n	800394c <UART_RxISR_16BIT_FIFOEN+0x180>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800391c:	66e2      	str	r2, [r4, #108]	; 0x6c
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800391e:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003922:	f383 8810 	msr	PRIMASK, r3
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003926:	6821      	ldr	r1, [r4, #0]
 8003928:	330f      	adds	r3, #15
 800392a:	680a      	ldr	r2, [r1, #0]
 800392c:	439a      	bics	r2, r3
 800392e:	600a      	str	r2, [r1, #0]
 8003930:	f380 8810 	msr	PRIMASK, r0
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8003934:	6822      	ldr	r2, [r4, #0]
 8003936:	69d1      	ldr	r1, [r2, #28]
 8003938:	4219      	tst	r1, r3
 800393a:	d000      	beq.n	800393e <UART_RxISR_16BIT_FIFOEN+0x172>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800393c:	6213      	str	r3, [r2, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800393e:	0023      	movs	r3, r4
 8003940:	335c      	adds	r3, #92	; 0x5c
 8003942:	0020      	movs	r0, r4
 8003944:	8819      	ldrh	r1, [r3, #0]
 8003946:	f7ff fc58 	bl	80031fa <HAL_UARTEx_RxEventCallback>
 800394a:	e755      	b.n	80037f8 <UART_RxISR_16BIT_FIFOEN+0x2c>
          HAL_UART_RxCpltCallback(huart);
 800394c:	0020      	movs	r0, r4
 800394e:	f7fe fd67 	bl	8002420 <HAL_UART_RxCpltCallback>
 8003952:	e751      	b.n	80037f8 <UART_RxISR_16BIT_FIFOEN+0x2c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8003954:	2208      	movs	r2, #8
 8003956:	6999      	ldr	r1, [r3, #24]
 8003958:	430a      	orrs	r2, r1
 800395a:	619a      	str	r2, [r3, #24]
}
 800395c:	e776      	b.n	800384c <UART_RxISR_16BIT_FIFOEN+0x80>
 800395e:	46c0      	nop			; (mov r8, r8)
 8003960:	efffffff 	.word	0xefffffff
 8003964:	0800359d 	.word	0x0800359d
 8003968:	fffffeff 	.word	0xfffffeff
 800396c:	effffffe 	.word	0xeffffffe

08003970 <UART_SetConfig>:
{
 8003970:	b570      	push	{r4, r5, r6, lr}
 8003972:	0004      	movs	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003974:	6925      	ldr	r5, [r4, #16]
 8003976:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003978:	6802      	ldr	r2, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800397a:	4329      	orrs	r1, r5
 800397c:	6965      	ldr	r5, [r4, #20]
 800397e:	69c3      	ldr	r3, [r0, #28]
 8003980:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003982:	6810      	ldr	r0, [r2, #0]
 8003984:	4d48      	ldr	r5, [pc, #288]	; (8003aa8 <UART_SetConfig+0x138>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003986:	4319      	orrs	r1, r3
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003988:	4028      	ands	r0, r5
 800398a:	4301      	orrs	r1, r0
 800398c:	6011      	str	r1, [r2, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800398e:	6851      	ldr	r1, [r2, #4]
 8003990:	4846      	ldr	r0, [pc, #280]	; (8003aac <UART_SetConfig+0x13c>)
    tmpreg |= huart->Init.OneBitSampling;
 8003992:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003994:	4001      	ands	r1, r0
 8003996:	68e0      	ldr	r0, [r4, #12]
 8003998:	4301      	orrs	r1, r0
 800399a:	6051      	str	r1, [r2, #4]
    tmpreg |= huart->Init.OneBitSampling;
 800399c:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800399e:	6890      	ldr	r0, [r2, #8]
    tmpreg |= huart->Init.OneBitSampling;
 80039a0:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80039a2:	4d43      	ldr	r5, [pc, #268]	; (8003ab0 <UART_SetConfig+0x140>)
 80039a4:	4028      	ands	r0, r5
 80039a6:	4301      	orrs	r1, r0
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 80039a8:	200f      	movs	r0, #15
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80039aa:	6091      	str	r1, [r2, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 80039ac:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80039ae:	4381      	bics	r1, r0
 80039b0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80039b2:	4301      	orrs	r1, r0
 80039b4:	62d1      	str	r1, [r2, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 80039b6:	493f      	ldr	r1, [pc, #252]	; (8003ab4 <UART_SetConfig+0x144>)
 80039b8:	428a      	cmp	r2, r1
 80039ba:	d115      	bne.n	80039e8 <UART_SetConfig+0x78>
 80039bc:	2103      	movs	r1, #3
 80039be:	4a3e      	ldr	r2, [pc, #248]	; (8003ab8 <UART_SetConfig+0x148>)
 80039c0:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80039c2:	400a      	ands	r2, r1
 80039c4:	2180      	movs	r1, #128	; 0x80
 80039c6:	3a01      	subs	r2, #1
 80039c8:	0209      	lsls	r1, r1, #8
 80039ca:	2a02      	cmp	r2, #2
 80039cc:	d85f      	bhi.n	8003a8e <UART_SetConfig+0x11e>
 80039ce:	483b      	ldr	r0, [pc, #236]	; (8003abc <UART_SetConfig+0x14c>)
 80039d0:	5c80      	ldrb	r0, [r0, r2]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80039d2:	428b      	cmp	r3, r1
 80039d4:	d014      	beq.n	8003a00 <UART_SetConfig+0x90>
    switch (clocksource)
 80039d6:	2808      	cmp	r0, #8
 80039d8:	d857      	bhi.n	8003a8a <UART_SetConfig+0x11a>
 80039da:	f7fc fb99 	bl	8000110 <__gnu_thumb1_case_uqi>
 80039de:	560c      	.short	0x560c
 80039e0:	56515654 	.word	0x56515654
 80039e4:	5656      	.short	0x5656
 80039e6:	3b          	.byte	0x3b
 80039e7:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 80039e8:	4935      	ldr	r1, [pc, #212]	; (8003ac0 <UART_SetConfig+0x150>)
 80039ea:	428a      	cmp	r2, r1
 80039ec:	d14d      	bne.n	8003a8a <UART_SetConfig+0x11a>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80039ee:	2280      	movs	r2, #128	; 0x80
 80039f0:	0212      	lsls	r2, r2, #8
 80039f2:	4293      	cmp	r3, r2
 80039f4:	d04d      	beq.n	8003a92 <UART_SetConfig+0x122>
        pclk = HAL_RCC_GetPCLK1Freq();
 80039f6:	f7ff fb03 	bl	8003000 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80039fa:	2800      	cmp	r0, #0
 80039fc:	d04d      	beq.n	8003a9a <UART_SetConfig+0x12a>
 80039fe:	e02b      	b.n	8003a58 <UART_SetConfig+0xe8>
    switch (clocksource)
 8003a00:	2808      	cmp	r0, #8
 8003a02:	d842      	bhi.n	8003a8a <UART_SetConfig+0x11a>
 8003a04:	f7fc fb84 	bl	8000110 <__gnu_thumb1_case_uqi>
 8003a08:	41084145 	.word	0x41084145
 8003a0c:	41414105 	.word	0x41414105
 8003a10:	09          	.byte	0x09
 8003a11:	00          	.byte	0x00
        pclk = HAL_RCC_GetSysClockFreq();
 8003a12:	f7ff fa03 	bl	8002e1c <HAL_RCC_GetSysClockFreq>
 8003a16:	e03e      	b.n	8003a96 <UART_SetConfig+0x126>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003a18:	4b2a      	ldr	r3, [pc, #168]	; (8003ac4 <UART_SetConfig+0x154>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003a1a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003a1c:	492a      	ldr	r1, [pc, #168]	; (8003ac8 <UART_SetConfig+0x158>)
 8003a1e:	0052      	lsls	r2, r2, #1
 8003a20:	5a51      	ldrh	r1, [r2, r1]
 8003a22:	0018      	movs	r0, r3
 8003a24:	f7fc fb88 	bl	8000138 <__udivsi3>
 8003a28:	6865      	ldr	r5, [r4, #4]
 8003a2a:	0040      	lsls	r0, r0, #1
 8003a2c:	086b      	lsrs	r3, r5, #1
 8003a2e:	18c0      	adds	r0, r0, r3
 8003a30:	0029      	movs	r1, r5
 8003a32:	f7fc fb81 	bl	8000138 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003a36:	0002      	movs	r2, r0
 8003a38:	4b24      	ldr	r3, [pc, #144]	; (8003acc <UART_SetConfig+0x15c>)
 8003a3a:	3a10      	subs	r2, #16
 8003a3c:	429a      	cmp	r2, r3
 8003a3e:	d824      	bhi.n	8003a8a <UART_SetConfig+0x11a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003a40:	230f      	movs	r3, #15
 8003a42:	0002      	movs	r2, r0
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003a44:	0700      	lsls	r0, r0, #28
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003a46:	439a      	bics	r2, r3
 8003a48:	b293      	uxth	r3, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003a4a:	0f40      	lsrs	r0, r0, #29
        huart->Instance->BRR = brrtemp;
 8003a4c:	6822      	ldr	r2, [r4, #0]
 8003a4e:	4318      	orrs	r0, r3
 8003a50:	60d0      	str	r0, [r2, #12]
 8003a52:	e022      	b.n	8003a9a <UART_SetConfig+0x12a>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003a54:	2080      	movs	r0, #128	; 0x80
 8003a56:	0200      	lsls	r0, r0, #8
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003a58:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003a5a:	4a1b      	ldr	r2, [pc, #108]	; (8003ac8 <UART_SetConfig+0x158>)
 8003a5c:	005b      	lsls	r3, r3, #1
 8003a5e:	5a99      	ldrh	r1, [r3, r2]
 8003a60:	f7fc fb6a 	bl	8000138 <__udivsi3>
 8003a64:	6865      	ldr	r5, [r4, #4]
 8003a66:	086b      	lsrs	r3, r5, #1
 8003a68:	18c0      	adds	r0, r0, r3
 8003a6a:	0029      	movs	r1, r5
 8003a6c:	f7fc fb64 	bl	8000138 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003a70:	0002      	movs	r2, r0
 8003a72:	4b16      	ldr	r3, [pc, #88]	; (8003acc <UART_SetConfig+0x15c>)
 8003a74:	3a10      	subs	r2, #16
 8003a76:	429a      	cmp	r2, r3
 8003a78:	d807      	bhi.n	8003a8a <UART_SetConfig+0x11a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8003a7a:	6823      	ldr	r3, [r4, #0]
 8003a7c:	60d8      	str	r0, [r3, #12]
 8003a7e:	e00c      	b.n	8003a9a <UART_SetConfig+0x12a>
        pclk = HAL_RCC_GetSysClockFreq();
 8003a80:	f7ff f9cc 	bl	8002e1c <HAL_RCC_GetSysClockFreq>
        break;
 8003a84:	e7b9      	b.n	80039fa <UART_SetConfig+0x8a>
        pclk = (uint32_t) HSI_VALUE;
 8003a86:	480f      	ldr	r0, [pc, #60]	; (8003ac4 <UART_SetConfig+0x154>)
 8003a88:	e7e6      	b.n	8003a58 <UART_SetConfig+0xe8>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003a8a:	2001      	movs	r0, #1
 8003a8c:	e006      	b.n	8003a9c <UART_SetConfig+0x12c>
 8003a8e:	428b      	cmp	r3, r1
 8003a90:	d1b1      	bne.n	80039f6 <UART_SetConfig+0x86>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003a92:	f7ff fab5 	bl	8003000 <HAL_RCC_GetPCLK1Freq>
        pclk = HAL_RCC_GetSysClockFreq();
 8003a96:	1e03      	subs	r3, r0, #0
    if (pclk != 0U)
 8003a98:	d1bf      	bne.n	8003a1a <UART_SetConfig+0xaa>
 8003a9a:	2000      	movs	r0, #0
  huart->NbRxDataToProcess = 1;
 8003a9c:	4b0c      	ldr	r3, [pc, #48]	; (8003ad0 <UART_SetConfig+0x160>)
 8003a9e:	66a3      	str	r3, [r4, #104]	; 0x68
  huart->RxISR = NULL;
 8003aa0:	2300      	movs	r3, #0
 8003aa2:	6723      	str	r3, [r4, #112]	; 0x70
  huart->TxISR = NULL;
 8003aa4:	6763      	str	r3, [r4, #116]	; 0x74
}
 8003aa6:	bd70      	pop	{r4, r5, r6, pc}
 8003aa8:	cfff69f3 	.word	0xcfff69f3
 8003aac:	ffffcfff 	.word	0xffffcfff
 8003ab0:	11fff4ff 	.word	0x11fff4ff
 8003ab4:	40013800 	.word	0x40013800
 8003ab8:	40021000 	.word	0x40021000
 8003abc:	08009090 	.word	0x08009090
 8003ac0:	40004400 	.word	0x40004400
 8003ac4:	00f42400 	.word	0x00f42400
 8003ac8:	08009094 	.word	0x08009094
 8003acc:	0000ffef 	.word	0x0000ffef
 8003ad0:	00010001 	.word	0x00010001

08003ad4 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003ad4:	6a83      	ldr	r3, [r0, #40]	; 0x28
{
 8003ad6:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003ad8:	07da      	lsls	r2, r3, #31
 8003ada:	d506      	bpl.n	8003aea <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003adc:	6801      	ldr	r1, [r0, #0]
 8003ade:	4c28      	ldr	r4, [pc, #160]	; (8003b80 <UART_AdvFeatureConfig+0xac>)
 8003ae0:	684a      	ldr	r2, [r1, #4]
 8003ae2:	4022      	ands	r2, r4
 8003ae4:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003ae6:	4322      	orrs	r2, r4
 8003ae8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003aea:	079a      	lsls	r2, r3, #30
 8003aec:	d506      	bpl.n	8003afc <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003aee:	6801      	ldr	r1, [r0, #0]
 8003af0:	4c24      	ldr	r4, [pc, #144]	; (8003b84 <UART_AdvFeatureConfig+0xb0>)
 8003af2:	684a      	ldr	r2, [r1, #4]
 8003af4:	4022      	ands	r2, r4
 8003af6:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003af8:	4322      	orrs	r2, r4
 8003afa:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003afc:	075a      	lsls	r2, r3, #29
 8003afe:	d506      	bpl.n	8003b0e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003b00:	6801      	ldr	r1, [r0, #0]
 8003b02:	4c21      	ldr	r4, [pc, #132]	; (8003b88 <UART_AdvFeatureConfig+0xb4>)
 8003b04:	684a      	ldr	r2, [r1, #4]
 8003b06:	4022      	ands	r2, r4
 8003b08:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003b0a:	4322      	orrs	r2, r4
 8003b0c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003b0e:	071a      	lsls	r2, r3, #28
 8003b10:	d506      	bpl.n	8003b20 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003b12:	6801      	ldr	r1, [r0, #0]
 8003b14:	4c1d      	ldr	r4, [pc, #116]	; (8003b8c <UART_AdvFeatureConfig+0xb8>)
 8003b16:	684a      	ldr	r2, [r1, #4]
 8003b18:	4022      	ands	r2, r4
 8003b1a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003b1c:	4322      	orrs	r2, r4
 8003b1e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003b20:	06da      	lsls	r2, r3, #27
 8003b22:	d506      	bpl.n	8003b32 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003b24:	6801      	ldr	r1, [r0, #0]
 8003b26:	4c1a      	ldr	r4, [pc, #104]	; (8003b90 <UART_AdvFeatureConfig+0xbc>)
 8003b28:	688a      	ldr	r2, [r1, #8]
 8003b2a:	4022      	ands	r2, r4
 8003b2c:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003b2e:	4322      	orrs	r2, r4
 8003b30:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003b32:	069a      	lsls	r2, r3, #26
 8003b34:	d506      	bpl.n	8003b44 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003b36:	6801      	ldr	r1, [r0, #0]
 8003b38:	4c16      	ldr	r4, [pc, #88]	; (8003b94 <UART_AdvFeatureConfig+0xc0>)
 8003b3a:	688a      	ldr	r2, [r1, #8]
 8003b3c:	4022      	ands	r2, r4
 8003b3e:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003b40:	4322      	orrs	r2, r4
 8003b42:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003b44:	065a      	lsls	r2, r3, #25
 8003b46:	d510      	bpl.n	8003b6a <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003b48:	6801      	ldr	r1, [r0, #0]
 8003b4a:	4d13      	ldr	r5, [pc, #76]	; (8003b98 <UART_AdvFeatureConfig+0xc4>)
 8003b4c:	684a      	ldr	r2, [r1, #4]
 8003b4e:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003b50:	402a      	ands	r2, r5
 8003b52:	4322      	orrs	r2, r4
 8003b54:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003b56:	2280      	movs	r2, #128	; 0x80
 8003b58:	0352      	lsls	r2, r2, #13
 8003b5a:	4294      	cmp	r4, r2
 8003b5c:	d105      	bne.n	8003b6a <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003b5e:	684a      	ldr	r2, [r1, #4]
 8003b60:	4c0e      	ldr	r4, [pc, #56]	; (8003b9c <UART_AdvFeatureConfig+0xc8>)
 8003b62:	4022      	ands	r2, r4
 8003b64:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8003b66:	4322      	orrs	r2, r4
 8003b68:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003b6a:	061b      	lsls	r3, r3, #24
 8003b6c:	d506      	bpl.n	8003b7c <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003b6e:	6802      	ldr	r2, [r0, #0]
 8003b70:	490b      	ldr	r1, [pc, #44]	; (8003ba0 <UART_AdvFeatureConfig+0xcc>)
 8003b72:	6853      	ldr	r3, [r2, #4]
 8003b74:	400b      	ands	r3, r1
 8003b76:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8003b78:	430b      	orrs	r3, r1
 8003b7a:	6053      	str	r3, [r2, #4]
}
 8003b7c:	bd30      	pop	{r4, r5, pc}
 8003b7e:	46c0      	nop			; (mov r8, r8)
 8003b80:	fffdffff 	.word	0xfffdffff
 8003b84:	fffeffff 	.word	0xfffeffff
 8003b88:	fffbffff 	.word	0xfffbffff
 8003b8c:	ffff7fff 	.word	0xffff7fff
 8003b90:	ffffefff 	.word	0xffffefff
 8003b94:	ffffdfff 	.word	0xffffdfff
 8003b98:	ffefffff 	.word	0xffefffff
 8003b9c:	ff9fffff 	.word	0xff9fffff
 8003ba0:	fff7ffff 	.word	0xfff7ffff

08003ba4 <UART_WaitOnFlagUntilTimeout>:
{
 8003ba4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003ba6:	2780      	movs	r7, #128	; 0x80
{
 8003ba8:	0004      	movs	r4, r0
 8003baa:	000d      	movs	r5, r1
 8003bac:	0016      	movs	r6, r2
 8003bae:	9301      	str	r3, [sp, #4]
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003bb0:	013f      	lsls	r7, r7, #4
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003bb2:	6822      	ldr	r2, [r4, #0]
 8003bb4:	69d3      	ldr	r3, [r2, #28]
 8003bb6:	402b      	ands	r3, r5
 8003bb8:	1b5b      	subs	r3, r3, r5
 8003bba:	4259      	negs	r1, r3
 8003bbc:	414b      	adcs	r3, r1
 8003bbe:	42b3      	cmp	r3, r6
 8003bc0:	d001      	beq.n	8003bc6 <UART_WaitOnFlagUntilTimeout+0x22>
  return HAL_OK;
 8003bc2:	2000      	movs	r0, #0
 8003bc4:	e02b      	b.n	8003c1e <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8003bc6:	9b08      	ldr	r3, [sp, #32]
 8003bc8:	3301      	adds	r3, #1
 8003bca:	d0f3      	beq.n	8003bb4 <UART_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003bcc:	f7fe fd62 	bl	8002694 <HAL_GetTick>
 8003bd0:	9b01      	ldr	r3, [sp, #4]
 8003bd2:	1ac0      	subs	r0, r0, r3
 8003bd4:	9b08      	ldr	r3, [sp, #32]
 8003bd6:	4298      	cmp	r0, r3
 8003bd8:	d801      	bhi.n	8003bde <UART_WaitOnFlagUntilTimeout+0x3a>
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d120      	bne.n	8003c20 <UART_WaitOnFlagUntilTimeout+0x7c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003bde:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003be2:	2201      	movs	r2, #1
 8003be4:	f382 8810 	msr	PRIMASK, r2
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 8003be8:	6821      	ldr	r1, [r4, #0]
 8003bea:	4d21      	ldr	r5, [pc, #132]	; (8003c70 <UART_WaitOnFlagUntilTimeout+0xcc>)
 8003bec:	680b      	ldr	r3, [r1, #0]
 8003bee:	402b      	ands	r3, r5
 8003bf0:	600b      	str	r3, [r1, #0]
 8003bf2:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003bf6:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003bfa:	f382 8810 	msr	PRIMASK, r2
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003bfe:	6821      	ldr	r1, [r4, #0]
 8003c00:	688b      	ldr	r3, [r1, #8]
 8003c02:	4393      	bics	r3, r2
 8003c04:	608b      	str	r3, [r1, #8]
 8003c06:	f380 8810 	msr	PRIMASK, r0
        huart->gState = HAL_UART_STATE_READY;
 8003c0a:	0022      	movs	r2, r4
 8003c0c:	2320      	movs	r3, #32
 8003c0e:	3208      	adds	r2, #8
 8003c10:	67d3      	str	r3, [r2, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8003c12:	3280      	adds	r2, #128	; 0x80
 8003c14:	6013      	str	r3, [r2, #0]
          __HAL_UNLOCK(huart);
 8003c16:	2300      	movs	r3, #0
          return HAL_TIMEOUT;
 8003c18:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8003c1a:	3480      	adds	r4, #128	; 0x80
 8003c1c:	7023      	strb	r3, [r4, #0]
}
 8003c1e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003c20:	2104      	movs	r1, #4
 8003c22:	6823      	ldr	r3, [r4, #0]
 8003c24:	681a      	ldr	r2, [r3, #0]
 8003c26:	420a      	tst	r2, r1
 8003c28:	d0c3      	beq.n	8003bb2 <UART_WaitOnFlagUntilTimeout+0xe>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003c2a:	69da      	ldr	r2, [r3, #28]
 8003c2c:	423a      	tst	r2, r7
 8003c2e:	d0c0      	beq.n	8003bb2 <UART_WaitOnFlagUntilTimeout+0xe>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003c30:	621f      	str	r7, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003c32:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c36:	2201      	movs	r2, #1
 8003c38:	f382 8810 	msr	PRIMASK, r2
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 8003c3c:	6821      	ldr	r1, [r4, #0]
 8003c3e:	4d0c      	ldr	r5, [pc, #48]	; (8003c70 <UART_WaitOnFlagUntilTimeout+0xcc>)
 8003c40:	680b      	ldr	r3, [r1, #0]
 8003c42:	402b      	ands	r3, r5
 8003c44:	600b      	str	r3, [r1, #0]
 8003c46:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003c4a:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c4e:	f382 8810 	msr	PRIMASK, r2
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003c52:	6821      	ldr	r1, [r4, #0]
 8003c54:	688b      	ldr	r3, [r1, #8]
 8003c56:	4393      	bics	r3, r2
 8003c58:	608b      	str	r3, [r1, #8]
 8003c5a:	f380 8810 	msr	PRIMASK, r0
          huart->gState = HAL_UART_STATE_READY;
 8003c5e:	0022      	movs	r2, r4
 8003c60:	2320      	movs	r3, #32
 8003c62:	3208      	adds	r2, #8
 8003c64:	67d3      	str	r3, [r2, #124]	; 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8003c66:	3280      	adds	r2, #128	; 0x80
 8003c68:	6013      	str	r3, [r2, #0]
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003c6a:	6053      	str	r3, [r2, #4]
 8003c6c:	e7d3      	b.n	8003c16 <UART_WaitOnFlagUntilTimeout+0x72>
 8003c6e:	46c0      	nop			; (mov r8, r8)
 8003c70:	fffffe5f 	.word	0xfffffe5f

08003c74 <HAL_UART_Transmit>:
{
 8003c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c76:	0016      	movs	r6, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8003c78:	0002      	movs	r2, r0
{
 8003c7a:	b087      	sub	sp, #28
  if (huart->gState == HAL_UART_STATE_READY)
 8003c7c:	3208      	adds	r2, #8
{
 8003c7e:	9305      	str	r3, [sp, #20]
  if (huart->gState == HAL_UART_STATE_READY)
 8003c80:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
{
 8003c82:	0004      	movs	r4, r0
 8003c84:	000d      	movs	r5, r1
    return HAL_BUSY;
 8003c86:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 8003c88:	2b20      	cmp	r3, #32
 8003c8a:	d153      	bne.n	8003d34 <HAL_UART_Transmit+0xc0>
      return  HAL_ERROR;
 8003c8c:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 8003c8e:	2900      	cmp	r1, #0
 8003c90:	d050      	beq.n	8003d34 <HAL_UART_Transmit+0xc0>
 8003c92:	2e00      	cmp	r6, #0
 8003c94:	d04e      	beq.n	8003d34 <HAL_UART_Transmit+0xc0>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003c96:	2380      	movs	r3, #128	; 0x80
 8003c98:	68a1      	ldr	r1, [r4, #8]
 8003c9a:	015b      	lsls	r3, r3, #5
 8003c9c:	4299      	cmp	r1, r3
 8003c9e:	d104      	bne.n	8003caa <HAL_UART_Transmit+0x36>
 8003ca0:	6923      	ldr	r3, [r4, #16]
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d101      	bne.n	8003caa <HAL_UART_Transmit+0x36>
      if ((((uint32_t)pData) & 1U) != 0U)
 8003ca6:	4205      	tst	r5, r0
 8003ca8:	d144      	bne.n	8003d34 <HAL_UART_Transmit+0xc0>
    __HAL_LOCK(huart);
 8003caa:	0023      	movs	r3, r4
 8003cac:	3380      	adds	r3, #128	; 0x80
 8003cae:	9303      	str	r3, [sp, #12]
 8003cb0:	781b      	ldrb	r3, [r3, #0]
    return HAL_BUSY;
 8003cb2:	2002      	movs	r0, #2
    __HAL_LOCK(huart);
 8003cb4:	2b01      	cmp	r3, #1
 8003cb6:	d03d      	beq.n	8003d34 <HAL_UART_Transmit+0xc0>
 8003cb8:	2301      	movs	r3, #1
 8003cba:	9903      	ldr	r1, [sp, #12]
 8003cbc:	700b      	strb	r3, [r1, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003cbe:	0023      	movs	r3, r4
 8003cc0:	2100      	movs	r1, #0
 8003cc2:	338c      	adds	r3, #140	; 0x8c
 8003cc4:	6019      	str	r1, [r3, #0]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003cc6:	2321      	movs	r3, #33	; 0x21
 8003cc8:	67d3      	str	r3, [r2, #124]	; 0x7c
    tickstart = HAL_GetTick();
 8003cca:	f7fe fce3 	bl	8002694 <HAL_GetTick>
    huart->TxXferSize  = Size;
 8003cce:	0023      	movs	r3, r4
 8003cd0:	3354      	adds	r3, #84	; 0x54
 8003cd2:	801e      	strh	r6, [r3, #0]
    huart->TxXferCount = Size;
 8003cd4:	3302      	adds	r3, #2
 8003cd6:	801e      	strh	r6, [r3, #0]
 8003cd8:	9304      	str	r3, [sp, #16]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003cda:	2380      	movs	r3, #128	; 0x80
 8003cdc:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8003cde:	0007      	movs	r7, r0
      pdata16bits = NULL;
 8003ce0:	2600      	movs	r6, #0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ce2:	015b      	lsls	r3, r3, #5
 8003ce4:	429a      	cmp	r2, r3
 8003ce6:	d104      	bne.n	8003cf2 <HAL_UART_Transmit+0x7e>
 8003ce8:	6923      	ldr	r3, [r4, #16]
 8003cea:	42b3      	cmp	r3, r6
 8003cec:	d101      	bne.n	8003cf2 <HAL_UART_Transmit+0x7e>
 8003cee:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 8003cf0:	001d      	movs	r5, r3
    __HAL_UNLOCK(huart);
 8003cf2:	2300      	movs	r3, #0
 8003cf4:	9a03      	ldr	r2, [sp, #12]
 8003cf6:	7013      	strb	r3, [r2, #0]
    while (huart->TxXferCount > 0U)
 8003cf8:	0023      	movs	r3, r4
 8003cfa:	3356      	adds	r3, #86	; 0x56
 8003cfc:	881b      	ldrh	r3, [r3, #0]
 8003cfe:	b29a      	uxth	r2, r3
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d10c      	bne.n	8003d1e <HAL_UART_Transmit+0xaa>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003d04:	9b05      	ldr	r3, [sp, #20]
 8003d06:	2140      	movs	r1, #64	; 0x40
 8003d08:	9300      	str	r3, [sp, #0]
 8003d0a:	0020      	movs	r0, r4
 8003d0c:	003b      	movs	r3, r7
 8003d0e:	f7ff ff49 	bl	8003ba4 <UART_WaitOnFlagUntilTimeout>
 8003d12:	2800      	cmp	r0, #0
 8003d14:	d10d      	bne.n	8003d32 <HAL_UART_Transmit+0xbe>
    huart->gState = HAL_UART_STATE_READY;
 8003d16:	2320      	movs	r3, #32
 8003d18:	3408      	adds	r4, #8
 8003d1a:	67e3      	str	r3, [r4, #124]	; 0x7c
    return HAL_OK;
 8003d1c:	e00a      	b.n	8003d34 <HAL_UART_Transmit+0xc0>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003d1e:	9b05      	ldr	r3, [sp, #20]
 8003d20:	2200      	movs	r2, #0
 8003d22:	9300      	str	r3, [sp, #0]
 8003d24:	2180      	movs	r1, #128	; 0x80
 8003d26:	003b      	movs	r3, r7
 8003d28:	0020      	movs	r0, r4
 8003d2a:	f7ff ff3b 	bl	8003ba4 <UART_WaitOnFlagUntilTimeout>
 8003d2e:	2800      	cmp	r0, #0
 8003d30:	d002      	beq.n	8003d38 <HAL_UART_Transmit+0xc4>
        return HAL_TIMEOUT;
 8003d32:	2003      	movs	r0, #3
}
 8003d34:	b007      	add	sp, #28
 8003d36:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (pdata8bits == NULL)
 8003d38:	6822      	ldr	r2, [r4, #0]
 8003d3a:	2d00      	cmp	r5, #0
 8003d3c:	d10b      	bne.n	8003d56 <HAL_UART_Transmit+0xe2>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003d3e:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 8003d40:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003d42:	05db      	lsls	r3, r3, #23
 8003d44:	0ddb      	lsrs	r3, r3, #23
 8003d46:	6293      	str	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 8003d48:	9b04      	ldr	r3, [sp, #16]
 8003d4a:	9a04      	ldr	r2, [sp, #16]
 8003d4c:	881b      	ldrh	r3, [r3, #0]
 8003d4e:	3b01      	subs	r3, #1
 8003d50:	b29b      	uxth	r3, r3
 8003d52:	8013      	strh	r3, [r2, #0]
 8003d54:	e7d0      	b.n	8003cf8 <HAL_UART_Transmit+0x84>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003d56:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 8003d58:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003d5a:	6293      	str	r3, [r2, #40]	; 0x28
        pdata8bits++;
 8003d5c:	e7f4      	b.n	8003d48 <HAL_UART_Transmit+0xd4>
	...

08003d60 <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003d60:	0003      	movs	r3, r0
{
 8003d62:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003d64:	2600      	movs	r6, #0
{
 8003d66:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003d68:	338c      	adds	r3, #140	; 0x8c
 8003d6a:	601e      	str	r6, [r3, #0]
  tickstart = HAL_GetTick();
 8003d6c:	f7fe fc92 	bl	8002694 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003d70:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8003d72:	0005      	movs	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	071b      	lsls	r3, r3, #28
 8003d78:	d419      	bmi.n	8003dae <UART_CheckIdleState+0x4e>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8003d7a:	6823      	ldr	r3, [r4, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	075b      	lsls	r3, r3, #29
 8003d80:	d50a      	bpl.n	8003d98 <UART_CheckIdleState+0x38>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003d82:	2180      	movs	r1, #128	; 0x80
 8003d84:	4b10      	ldr	r3, [pc, #64]	; (8003dc8 <UART_CheckIdleState+0x68>)
 8003d86:	2200      	movs	r2, #0
 8003d88:	9300      	str	r3, [sp, #0]
 8003d8a:	0020      	movs	r0, r4
 8003d8c:	002b      	movs	r3, r5
 8003d8e:	03c9      	lsls	r1, r1, #15
 8003d90:	f7ff ff08 	bl	8003ba4 <UART_WaitOnFlagUntilTimeout>
 8003d94:	2800      	cmp	r0, #0
 8003d96:	d115      	bne.n	8003dc4 <UART_CheckIdleState+0x64>
  huart->gState = HAL_UART_STATE_READY;
 8003d98:	0022      	movs	r2, r4
 8003d9a:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003d9c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8003d9e:	3208      	adds	r2, #8
 8003da0:	67d3      	str	r3, [r2, #124]	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8003da2:	3280      	adds	r2, #128	; 0x80
 8003da4:	6013      	str	r3, [r2, #0]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003da6:	66e0      	str	r0, [r4, #108]	; 0x6c
  __HAL_UNLOCK(huart);
 8003da8:	3480      	adds	r4, #128	; 0x80
 8003daa:	7020      	strb	r0, [r4, #0]
  return HAL_OK;
 8003dac:	e00b      	b.n	8003dc6 <UART_CheckIdleState+0x66>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003dae:	2180      	movs	r1, #128	; 0x80
 8003db0:	4b05      	ldr	r3, [pc, #20]	; (8003dc8 <UART_CheckIdleState+0x68>)
 8003db2:	0032      	movs	r2, r6
 8003db4:	9300      	str	r3, [sp, #0]
 8003db6:	0389      	lsls	r1, r1, #14
 8003db8:	0003      	movs	r3, r0
 8003dba:	0020      	movs	r0, r4
 8003dbc:	f7ff fef2 	bl	8003ba4 <UART_WaitOnFlagUntilTimeout>
 8003dc0:	2800      	cmp	r0, #0
 8003dc2:	d0da      	beq.n	8003d7a <UART_CheckIdleState+0x1a>
      return HAL_TIMEOUT;
 8003dc4:	2003      	movs	r0, #3
}
 8003dc6:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 8003dc8:	01ffffff 	.word	0x01ffffff

08003dcc <HAL_UART_Init>:
{
 8003dcc:	b570      	push	{r4, r5, r6, lr}
 8003dce:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 8003dd0:	d101      	bne.n	8003dd6 <HAL_UART_Init+0xa>
    return HAL_ERROR;
 8003dd2:	2001      	movs	r0, #1
}
 8003dd4:	bd70      	pop	{r4, r5, r6, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 8003dd6:	0005      	movs	r5, r0
 8003dd8:	3508      	adds	r5, #8
 8003dda:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8003ddc:	2b00      	cmp	r3, #0
 8003dde:	d104      	bne.n	8003dea <HAL_UART_Init+0x1e>
    huart->Lock = HAL_UNLOCKED;
 8003de0:	0002      	movs	r2, r0
 8003de2:	3280      	adds	r2, #128	; 0x80
 8003de4:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 8003de6:	f7fe fb41 	bl	800246c <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 8003dea:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 8003dec:	2101      	movs	r1, #1
 8003dee:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8003df0:	67eb      	str	r3, [r5, #124]	; 0x7c
  __HAL_UART_DISABLE(huart);
 8003df2:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003df4:	0020      	movs	r0, r4
  __HAL_UART_DISABLE(huart);
 8003df6:	438b      	bics	r3, r1
 8003df8:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003dfa:	f7ff fdb9 	bl	8003970 <UART_SetConfig>
 8003dfe:	2801      	cmp	r0, #1
 8003e00:	d0e7      	beq.n	8003dd2 <HAL_UART_Init+0x6>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003e02:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d002      	beq.n	8003e0e <HAL_UART_Init+0x42>
    UART_AdvFeatureConfig(huart);
 8003e08:	0020      	movs	r0, r4
 8003e0a:	f7ff fe63 	bl	8003ad4 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003e0e:	6823      	ldr	r3, [r4, #0]
 8003e10:	4907      	ldr	r1, [pc, #28]	; (8003e30 <HAL_UART_Init+0x64>)
 8003e12:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 8003e14:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003e16:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003e18:	212a      	movs	r1, #42	; 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003e1a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003e1c:	689a      	ldr	r2, [r3, #8]
 8003e1e:	438a      	bics	r2, r1
 8003e20:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8003e22:	2201      	movs	r2, #1
 8003e24:	6819      	ldr	r1, [r3, #0]
 8003e26:	430a      	orrs	r2, r1
 8003e28:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8003e2a:	f7ff ff99 	bl	8003d60 <UART_CheckIdleState>
 8003e2e:	e7d1      	b.n	8003dd4 <HAL_UART_Init+0x8>
 8003e30:	ffffb7ff 	.word	0xffffb7ff

08003e34 <UART_Start_Receive_IT>:
  huart->RxXferSize  = Size;
 8003e34:	0003      	movs	r3, r0
{
 8003e36:	b5f0      	push	{r4, r5, r6, r7, lr}
  huart->RxISR       = NULL;
 8003e38:	2400      	movs	r4, #0
  UART_MASK_COMPUTATION(huart);
 8003e3a:	2580      	movs	r5, #128	; 0x80
  huart->pRxBuffPtr  = pData;
 8003e3c:	6581      	str	r1, [r0, #88]	; 0x58
  UART_MASK_COMPUTATION(huart);
 8003e3e:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
 8003e40:	335c      	adds	r3, #92	; 0x5c
 8003e42:	801a      	strh	r2, [r3, #0]
  huart->RxXferCount = Size;
 8003e44:	805a      	strh	r2, [r3, #2]
  UART_MASK_COMPUTATION(huart);
 8003e46:	016d      	lsls	r5, r5, #5
  huart->RxISR       = NULL;
 8003e48:	6704      	str	r4, [r0, #112]	; 0x70
  UART_MASK_COMPUTATION(huart);
 8003e4a:	3304      	adds	r3, #4
 8003e4c:	42a9      	cmp	r1, r5
 8003e4e:	d14f      	bne.n	8003ef0 <UART_Start_Receive_IT+0xbc>
 8003e50:	6901      	ldr	r1, [r0, #16]
 8003e52:	42a1      	cmp	r1, r4
 8003e54:	d14a      	bne.n	8003eec <UART_Start_Receive_IT+0xb8>
 8003e56:	493f      	ldr	r1, [pc, #252]	; (8003f54 <UART_Start_Receive_IT+0x120>)
 8003e58:	8019      	strh	r1, [r3, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003e5a:	0003      	movs	r3, r0
 8003e5c:	2100      	movs	r1, #0
 8003e5e:	338c      	adds	r3, #140	; 0x8c
 8003e60:	6019      	str	r1, [r3, #0]
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8003e62:	3122      	adds	r1, #34	; 0x22
 8003e64:	3b04      	subs	r3, #4
 8003e66:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003e68:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003e6c:	2301      	movs	r3, #1
 8003e6e:	f383 8810 	msr	PRIMASK, r3
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003e72:	6801      	ldr	r1, [r0, #0]
 8003e74:	688d      	ldr	r5, [r1, #8]
 8003e76:	432b      	orrs	r3, r5
 8003e78:	608b      	str	r3, [r1, #8]
 8003e7a:	f384 8810 	msr	PRIMASK, r4
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 8003e7e:	2680      	movs	r6, #128	; 0x80
 8003e80:	2480      	movs	r4, #128	; 0x80
 8003e82:	0001      	movs	r1, r0
 8003e84:	6e47      	ldr	r7, [r0, #100]	; 0x64
 8003e86:	6885      	ldr	r5, [r0, #8]
 8003e88:	6903      	ldr	r3, [r0, #16]
 8003e8a:	05b6      	lsls	r6, r6, #22
 8003e8c:	0164      	lsls	r4, r4, #5
 8003e8e:	3180      	adds	r1, #128	; 0x80
 8003e90:	42b7      	cmp	r7, r6
 8003e92:	d13f      	bne.n	8003f14 <UART_Start_Receive_IT+0xe0>
 8003e94:	0006      	movs	r6, r0
 8003e96:	3668      	adds	r6, #104	; 0x68
 8003e98:	8836      	ldrh	r6, [r6, #0]
 8003e9a:	4296      	cmp	r6, r2
 8003e9c:	d83a      	bhi.n	8003f14 <UART_Start_Receive_IT+0xe0>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 8003e9e:	4a2e      	ldr	r2, [pc, #184]	; (8003f58 <UART_Start_Receive_IT+0x124>)
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ea0:	42a5      	cmp	r5, r4
 8003ea2:	d103      	bne.n	8003eac <UART_Start_Receive_IT+0x78>
      huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 8003ea4:	4a2d      	ldr	r2, [pc, #180]	; (8003f5c <UART_Start_Receive_IT+0x128>)
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d000      	beq.n	8003eac <UART_Start_Receive_IT+0x78>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 8003eaa:	4a2b      	ldr	r2, [pc, #172]	; (8003f58 <UART_Start_Receive_IT+0x124>)
 8003eac:	6702      	str	r2, [r0, #112]	; 0x70
    __HAL_UNLOCK(huart);
 8003eae:	2200      	movs	r2, #0
 8003eb0:	700a      	strb	r2, [r1, #0]
    if (huart->Init.Parity != UART_PARITY_NONE)
 8003eb2:	4293      	cmp	r3, r2
 8003eb4:	d00b      	beq.n	8003ece <UART_Start_Receive_IT+0x9a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003eb6:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003eba:	2301      	movs	r3, #1
 8003ebc:	f383 8810 	msr	PRIMASK, r3
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003ec0:	6802      	ldr	r2, [r0, #0]
 8003ec2:	33ff      	adds	r3, #255	; 0xff
 8003ec4:	6814      	ldr	r4, [r2, #0]
 8003ec6:	4323      	orrs	r3, r4
 8003ec8:	6013      	str	r3, [r2, #0]
 8003eca:	f381 8810 	msr	PRIMASK, r1
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003ece:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003ed2:	2301      	movs	r3, #1
 8003ed4:	f383 8810 	msr	PRIMASK, r3
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 8003ed8:	2380      	movs	r3, #128	; 0x80
 8003eda:	6802      	ldr	r2, [r0, #0]
 8003edc:	055b      	lsls	r3, r3, #21
 8003ede:	6890      	ldr	r0, [r2, #8]
 8003ee0:	4303      	orrs	r3, r0
 8003ee2:	6093      	str	r3, [r2, #8]
 8003ee4:	f381 8810 	msr	PRIMASK, r1
}
 8003ee8:	2000      	movs	r0, #0
 8003eea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  UART_MASK_COMPUTATION(huart);
 8003eec:	21ff      	movs	r1, #255	; 0xff
 8003eee:	e7b3      	b.n	8003e58 <UART_Start_Receive_IT+0x24>
 8003ef0:	2900      	cmp	r1, #0
 8003ef2:	d104      	bne.n	8003efe <UART_Start_Receive_IT+0xca>
 8003ef4:	6901      	ldr	r1, [r0, #16]
 8003ef6:	2900      	cmp	r1, #0
 8003ef8:	d0f8      	beq.n	8003eec <UART_Start_Receive_IT+0xb8>
 8003efa:	217f      	movs	r1, #127	; 0x7f
 8003efc:	e7ac      	b.n	8003e58 <UART_Start_Receive_IT+0x24>
 8003efe:	2580      	movs	r5, #128	; 0x80
 8003f00:	056d      	lsls	r5, r5, #21
 8003f02:	42a9      	cmp	r1, r5
 8003f04:	d104      	bne.n	8003f10 <UART_Start_Receive_IT+0xdc>
 8003f06:	6901      	ldr	r1, [r0, #16]
 8003f08:	2900      	cmp	r1, #0
 8003f0a:	d0f6      	beq.n	8003efa <UART_Start_Receive_IT+0xc6>
 8003f0c:	213f      	movs	r1, #63	; 0x3f
 8003f0e:	e7a3      	b.n	8003e58 <UART_Start_Receive_IT+0x24>
 8003f10:	801c      	strh	r4, [r3, #0]
 8003f12:	e7a2      	b.n	8003e5a <UART_Start_Receive_IT+0x26>
      huart->RxISR = UART_RxISR_8BIT;
 8003f14:	4a12      	ldr	r2, [pc, #72]	; (8003f60 <UART_Start_Receive_IT+0x12c>)
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003f16:	42a5      	cmp	r5, r4
 8003f18:	d103      	bne.n	8003f22 <UART_Start_Receive_IT+0xee>
      huart->RxISR = UART_RxISR_16BIT;
 8003f1a:	4a12      	ldr	r2, [pc, #72]	; (8003f64 <UART_Start_Receive_IT+0x130>)
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d000      	beq.n	8003f22 <UART_Start_Receive_IT+0xee>
      huart->RxISR = UART_RxISR_8BIT;
 8003f20:	4a0f      	ldr	r2, [pc, #60]	; (8003f60 <UART_Start_Receive_IT+0x12c>)
 8003f22:	6702      	str	r2, [r0, #112]	; 0x70
    __HAL_UNLOCK(huart);
 8003f24:	2200      	movs	r2, #0
 8003f26:	700a      	strb	r2, [r1, #0]
    if (huart->Init.Parity != UART_PARITY_NONE)
 8003f28:	3201      	adds	r2, #1
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	d00a      	beq.n	8003f44 <UART_Start_Receive_IT+0x110>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003f2e:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003f32:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 8003f36:	2390      	movs	r3, #144	; 0x90
 8003f38:	6802      	ldr	r2, [r0, #0]
 8003f3a:	005b      	lsls	r3, r3, #1
 8003f3c:	6810      	ldr	r0, [r2, #0]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8003f3e:	4303      	orrs	r3, r0
 8003f40:	6013      	str	r3, [r2, #0]
 8003f42:	e7cf      	b.n	8003ee4 <UART_Start_Receive_IT+0xb0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003f44:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003f48:	f382 8810 	msr	PRIMASK, r2
 8003f4c:	6802      	ldr	r2, [r0, #0]
 8003f4e:	2320      	movs	r3, #32
 8003f50:	6810      	ldr	r0, [r2, #0]
 8003f52:	e7f4      	b.n	8003f3e <UART_Start_Receive_IT+0x10a>
 8003f54:	000001ff 	.word	0x000001ff
 8003f58:	08003625 	.word	0x08003625
 8003f5c:	080037cd 	.word	0x080037cd
 8003f60:	080035df 	.word	0x080035df
 8003f64:	0800359d 	.word	0x0800359d

08003f68 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8003f68:	0003      	movs	r3, r0
 8003f6a:	3388      	adds	r3, #136	; 0x88
{
 8003f6c:	b570      	push	{r4, r5, r6, lr}
  if (huart->RxState == HAL_UART_STATE_READY)
 8003f6e:	681c      	ldr	r4, [r3, #0]
    return HAL_BUSY;
 8003f70:	2302      	movs	r3, #2
  if (huart->RxState == HAL_UART_STATE_READY)
 8003f72:	2c20      	cmp	r4, #32
 8003f74:	d12d      	bne.n	8003fd2 <HAL_UART_Receive_IT+0x6a>
      return HAL_ERROR;
 8003f76:	3b01      	subs	r3, #1
    if ((pData == NULL) || (Size == 0U))
 8003f78:	2900      	cmp	r1, #0
 8003f7a:	d02a      	beq.n	8003fd2 <HAL_UART_Receive_IT+0x6a>
 8003f7c:	2a00      	cmp	r2, #0
 8003f7e:	d028      	beq.n	8003fd2 <HAL_UART_Receive_IT+0x6a>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003f80:	2380      	movs	r3, #128	; 0x80
 8003f82:	6884      	ldr	r4, [r0, #8]
 8003f84:	015b      	lsls	r3, r3, #5
 8003f86:	429c      	cmp	r4, r3
 8003f88:	d106      	bne.n	8003f98 <HAL_UART_Receive_IT+0x30>
 8003f8a:	6903      	ldr	r3, [r0, #16]
 8003f8c:	2b00      	cmp	r3, #0
 8003f8e:	d103      	bne.n	8003f98 <HAL_UART_Receive_IT+0x30>
      if ((((uint32_t)pData) & 1U) != 0U)
 8003f90:	2401      	movs	r4, #1
      return HAL_ERROR;
 8003f92:	0023      	movs	r3, r4
      if ((((uint32_t)pData) & 1U) != 0U)
 8003f94:	4221      	tst	r1, r4
 8003f96:	d11c      	bne.n	8003fd2 <HAL_UART_Receive_IT+0x6a>
    __HAL_LOCK(huart);
 8003f98:	0004      	movs	r4, r0
 8003f9a:	3480      	adds	r4, #128	; 0x80
 8003f9c:	7825      	ldrb	r5, [r4, #0]
    return HAL_BUSY;
 8003f9e:	2302      	movs	r3, #2
    __HAL_LOCK(huart);
 8003fa0:	2d01      	cmp	r5, #1
 8003fa2:	d016      	beq.n	8003fd2 <HAL_UART_Receive_IT+0x6a>
 8003fa4:	3b01      	subs	r3, #1
 8003fa6:	7023      	strb	r3, [r4, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003fa8:	2400      	movs	r4, #0
 8003faa:	66c4      	str	r4, [r0, #108]	; 0x6c
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8003fac:	6804      	ldr	r4, [r0, #0]
 8003fae:	6864      	ldr	r4, [r4, #4]
 8003fb0:	0224      	lsls	r4, r4, #8
 8003fb2:	d50b      	bpl.n	8003fcc <HAL_UART_Receive_IT+0x64>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003fb4:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003fb8:	f383 8810 	msr	PRIMASK, r3
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8003fbc:	2380      	movs	r3, #128	; 0x80
 8003fbe:	6804      	ldr	r4, [r0, #0]
 8003fc0:	04db      	lsls	r3, r3, #19
 8003fc2:	6826      	ldr	r6, [r4, #0]
 8003fc4:	4333      	orrs	r3, r6
 8003fc6:	6023      	str	r3, [r4, #0]
 8003fc8:	f385 8810 	msr	PRIMASK, r5
    return (UART_Start_Receive_IT(huart, pData, Size));
 8003fcc:	f7ff ff32 	bl	8003e34 <UART_Start_Receive_IT>
 8003fd0:	0003      	movs	r3, r0
}
 8003fd2:	0018      	movs	r0, r3
 8003fd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08003fd8 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 8003fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 8003fda:	6e43      	ldr	r3, [r0, #100]	; 0x64
{
 8003fdc:	0004      	movs	r4, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d102      	bne.n	8003fe8 <UARTEx_SetNbDataToProcess+0x10>
  {
    huart->NbTxDataToProcess = 1U;
    huart->NbRxDataToProcess = 1U;
 8003fe2:	4b0d      	ldr	r3, [pc, #52]	; (8004018 <UARTEx_SetNbDataToProcess+0x40>)
 8003fe4:	6683      	str	r3, [r0, #104]	; 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 8003fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8003fe8:	6803      	ldr	r3, [r0, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 8003fea:	4e0c      	ldr	r6, [pc, #48]	; (800401c <UARTEx_SetNbDataToProcess+0x44>)
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8003fec:	689f      	ldr	r7, [r3, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 8003fee:	689b      	ldr	r3, [r3, #8]
                               (uint16_t)denominator[tx_fifo_threshold];
 8003ff0:	4d0b      	ldr	r5, [pc, #44]	; (8004020 <UARTEx_SetNbDataToProcess+0x48>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 8003ff2:	0f5b      	lsrs	r3, r3, #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 8003ff4:	5cf0      	ldrb	r0, [r6, r3]
                               (uint16_t)denominator[tx_fifo_threshold];
 8003ff6:	5ce9      	ldrb	r1, [r5, r3]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 8003ff8:	00c0      	lsls	r0, r0, #3
 8003ffa:	f7fc f927 	bl	800024c <__divsi3>
 8003ffe:	0023      	movs	r3, r4
 8004000:	336a      	adds	r3, #106	; 0x6a
 8004002:	8018      	strh	r0, [r3, #0]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8004004:	013b      	lsls	r3, r7, #4
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 8004006:	0f5b      	lsrs	r3, r3, #29
 8004008:	5cf0      	ldrb	r0, [r6, r3]
                               (uint16_t)denominator[rx_fifo_threshold];
 800400a:	5ce9      	ldrb	r1, [r5, r3]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800400c:	00c0      	lsls	r0, r0, #3
 800400e:	f7fc f91d 	bl	800024c <__divsi3>
 8004012:	3468      	adds	r4, #104	; 0x68
 8004014:	8020      	strh	r0, [r4, #0]
}
 8004016:	e7e6      	b.n	8003fe6 <UARTEx_SetNbDataToProcess+0xe>
 8004018:	00010001 	.word	0x00010001
 800401c:	080090b4 	.word	0x080090b4
 8004020:	080090ac 	.word	0x080090ac

08004024 <HAL_UARTEx_WakeupCallback>:
}
 8004024:	4770      	bx	lr

08004026 <HAL_UARTEx_RxFifoFullCallback>:
 8004026:	4770      	bx	lr

08004028 <HAL_UARTEx_TxFifoEmptyCallback>:
 8004028:	4770      	bx	lr
	...

0800402c <HAL_UARTEx_DisableFifoMode>:
{
 800402c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(huart);
 800402e:	0004      	movs	r4, r0
 8004030:	3480      	adds	r4, #128	; 0x80
 8004032:	7822      	ldrb	r2, [r4, #0]
{
 8004034:	0003      	movs	r3, r0
  __HAL_LOCK(huart);
 8004036:	2002      	movs	r0, #2
 8004038:	2a01      	cmp	r2, #1
 800403a:	d011      	beq.n	8004060 <HAL_UARTEx_DisableFifoMode+0x34>
  huart->gState = HAL_UART_STATE_BUSY;
 800403c:	001d      	movs	r5, r3
 800403e:	2224      	movs	r2, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 8004040:	2601      	movs	r6, #1
  huart->gState = HAL_UART_STATE_BUSY;
 8004042:	3508      	adds	r5, #8
 8004044:	67ea      	str	r2, [r5, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8004046:	681a      	ldr	r2, [r3, #0]
 8004048:	6811      	ldr	r1, [r2, #0]
  __HAL_UART_DISABLE(huart);
 800404a:	6810      	ldr	r0, [r2, #0]
 800404c:	43b0      	bics	r0, r6
 800404e:	6010      	str	r0, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 8004050:	4804      	ldr	r0, [pc, #16]	; (8004064 <HAL_UARTEx_DisableFifoMode+0x38>)
 8004052:	4001      	ands	r1, r0
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 8004054:	2000      	movs	r0, #0
 8004056:	6658      	str	r0, [r3, #100]	; 0x64
  huart->gState = HAL_UART_STATE_READY;
 8004058:	2320      	movs	r3, #32
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800405a:	6011      	str	r1, [r2, #0]
  huart->gState = HAL_UART_STATE_READY;
 800405c:	67eb      	str	r3, [r5, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 800405e:	7020      	strb	r0, [r4, #0]
}
 8004060:	bd70      	pop	{r4, r5, r6, pc}
 8004062:	46c0      	nop			; (mov r8, r8)
 8004064:	dfffffff 	.word	0xdfffffff

08004068 <HAL_UARTEx_SetTxFifoThreshold>:
{
 8004068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 800406a:	0005      	movs	r5, r0
 800406c:	3580      	adds	r5, #128	; 0x80
 800406e:	782b      	ldrb	r3, [r5, #0]
{
 8004070:	0004      	movs	r4, r0
 8004072:	000a      	movs	r2, r1
  __HAL_LOCK(huart);
 8004074:	2002      	movs	r0, #2
 8004076:	2b01      	cmp	r3, #1
 8004078:	d018      	beq.n	80040ac <HAL_UARTEx_SetTxFifoThreshold+0x44>
  huart->gState = HAL_UART_STATE_BUSY;
 800407a:	0026      	movs	r6, r4
 800407c:	2324      	movs	r3, #36	; 0x24
  __HAL_LOCK(huart);
 800407e:	3801      	subs	r0, #1
 8004080:	7028      	strb	r0, [r5, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8004082:	3608      	adds	r6, #8
 8004084:	67f3      	str	r3, [r6, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8004086:	6823      	ldr	r3, [r4, #0]
 8004088:	681f      	ldr	r7, [r3, #0]
  __HAL_UART_DISABLE(huart);
 800408a:	6819      	ldr	r1, [r3, #0]
 800408c:	4381      	bics	r1, r0
 800408e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 8004090:	6899      	ldr	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 8004092:	0020      	movs	r0, r4
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 8004094:	00c9      	lsls	r1, r1, #3
 8004096:	08c9      	lsrs	r1, r1, #3
 8004098:	4311      	orrs	r1, r2
 800409a:	6099      	str	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 800409c:	f7ff ff9c 	bl	8003fd8 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80040a0:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(huart);
 80040a2:	2000      	movs	r0, #0
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80040a4:	601f      	str	r7, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 80040a6:	2320      	movs	r3, #32
 80040a8:	67f3      	str	r3, [r6, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 80040aa:	7028      	strb	r0, [r5, #0]
}
 80040ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080040b0 <HAL_UARTEx_SetRxFifoThreshold>:
{
 80040b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 80040b2:	0005      	movs	r5, r0
 80040b4:	3580      	adds	r5, #128	; 0x80
 80040b6:	782b      	ldrb	r3, [r5, #0]
{
 80040b8:	0004      	movs	r4, r0
 80040ba:	000a      	movs	r2, r1
  __HAL_LOCK(huart);
 80040bc:	2002      	movs	r0, #2
 80040be:	2b01      	cmp	r3, #1
 80040c0:	d018      	beq.n	80040f4 <HAL_UARTEx_SetRxFifoThreshold+0x44>
  huart->gState = HAL_UART_STATE_BUSY;
 80040c2:	0026      	movs	r6, r4
 80040c4:	2324      	movs	r3, #36	; 0x24
  __HAL_LOCK(huart);
 80040c6:	3801      	subs	r0, #1
 80040c8:	7028      	strb	r0, [r5, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80040ca:	3608      	adds	r6, #8
 80040cc:	67f3      	str	r3, [r6, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80040ce:	6823      	ldr	r3, [r4, #0]
 80040d0:	681f      	ldr	r7, [r3, #0]
  __HAL_UART_DISABLE(huart);
 80040d2:	6819      	ldr	r1, [r3, #0]
 80040d4:	4381      	bics	r1, r0
 80040d6:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 80040d8:	6899      	ldr	r1, [r3, #8]
 80040da:	4807      	ldr	r0, [pc, #28]	; (80040f8 <HAL_UARTEx_SetRxFifoThreshold+0x48>)
 80040dc:	4001      	ands	r1, r0
 80040de:	4311      	orrs	r1, r2
  UARTEx_SetNbDataToProcess(huart);
 80040e0:	0020      	movs	r0, r4
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 80040e2:	6099      	str	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 80040e4:	f7ff ff78 	bl	8003fd8 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80040e8:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(huart);
 80040ea:	2000      	movs	r0, #0
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80040ec:	601f      	str	r7, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 80040ee:	2320      	movs	r3, #32
 80040f0:	67f3      	str	r3, [r6, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 80040f2:	7028      	strb	r0, [r5, #0]
}
 80040f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80040f6:	46c0      	nop			; (mov r8, r8)
 80040f8:	f1ffffff 	.word	0xf1ffffff

080040fc <SerialUartReceiveEnable>:
 *
 *
 *
 * */
void SerialUartReceiveEnable(uint8_t buff[50],uint8_t length)
{
 80040fc:	b510      	push	{r4, lr}

//only receive one byte

	HAL_UART_Receive_IT(&huart1, buff, length);
 80040fe:	000a      	movs	r2, r1
 8004100:	0001      	movs	r1, r0
 8004102:	4802      	ldr	r0, [pc, #8]	; (800410c <SerialUartReceiveEnable+0x10>)
 8004104:	f7ff ff30 	bl	8003f68 <HAL_UART_Receive_IT>

}
 8004108:	bd10      	pop	{r4, pc}
 800410a:	46c0      	nop			; (mov r8, r8)
 800410c:	20000a10 	.word	0x20000a10

08004110 <SerialUartReceiveCommand>:
//Receive commands
/*Fucntion to receive a starcommand and then process the comand*/


void SerialUartReceiveCommand(uint8_t Buff[50])
{
 8004110:	b570      	push	{r4, r5, r6, lr}

	/*Example*/

	uint8_t Data = Buff[0];//send the value of serial port
		Data_Rx[Index++] = Data;
 8004112:	4b10      	ldr	r3, [pc, #64]	; (8004154 <SerialUartReceiveCommand+0x44>)
	uint8_t Data = Buff[0];//send the value of serial port
 8004114:	7801      	ldrb	r1, [r0, #0]
		Data_Rx[Index++] = Data;
 8004116:	781d      	ldrb	r5, [r3, #0]
{
 8004118:	0004      	movs	r4, r0
		Data_Rx[Index++] = Data;
 800411a:	1c6a      	adds	r2, r5, #1
 800411c:	480e      	ldr	r0, [pc, #56]	; (8004158 <SerialUartReceiveCommand+0x48>)
 800411e:	b2d2      	uxtb	r2, r2
 8004120:	701a      	strb	r2, [r3, #0]
 8004122:	5541      	strb	r1, [r0, r5]

		if(Data =='*') Index =0;
 8004124:	292a      	cmp	r1, #42	; 0x2a
 8004126:	d101      	bne.n	800412c <SerialUartReceiveCommand+0x1c>
 8004128:	2200      	movs	r2, #0
 800412a:	701a      	strb	r2, [r3, #0]
		if(Index >= SIZE_MAX) Index =0;

		if(strstr(Data_Rx,"POPO"))
 800412c:	490b      	ldr	r1, [pc, #44]	; (800415c <SerialUartReceiveCommand+0x4c>)
		if(Index >= SIZE_MAX) Index =0;
 800412e:	781b      	ldrb	r3, [r3, #0]
		if(strstr(Data_Rx,"POPO"))
 8004130:	f000 f868 	bl	8004204 <strstr>
 8004134:	2800      	cmp	r0, #0
 8004136:	d007      	beq.n	8004148 <SerialUartReceiveCommand+0x38>

		{
			printf("Led on\n\r");
 8004138:	4809      	ldr	r0, [pc, #36]	; (8004160 <SerialUartReceiveCommand+0x50>)
 800413a:	f000 f853 	bl	80041e4 <printf>
			memset(Buff, '\0', 50); //limpiar para que no la basura no se quede en la cadena
 800413e:	2232      	movs	r2, #50	; 0x32
 8004140:	2100      	movs	r1, #0
 8004142:	0020      	movs	r0, r4
 8004144:	f000 f846 	bl	80041d4 <memset>





		SerialUartReceiveEnable(Buff,1);
 8004148:	2101      	movs	r1, #1
 800414a:	0020      	movs	r0, r4
 800414c:	f7ff ffd6 	bl	80040fc <SerialUartReceiveEnable>

}
 8004150:	bd70      	pop	{r4, r5, r6, pc}
 8004152:	46c0      	nop			; (mov r8, r8)
 8004154:	200009d8 	.word	0x200009d8
 8004158:	20000aa8 	.word	0x20000aa8
 800415c:	080090bc 	.word	0x080090bc
 8004160:	080090c1 	.word	0x080090c1

08004164 <__io_putchar>:
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8004164:	2301      	movs	r3, #1
{
 8004166:	b507      	push	{r0, r1, r2, lr}
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8004168:	425b      	negs	r3, r3
{
 800416a:	9001      	str	r0, [sp, #4]
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 800416c:	2201      	movs	r2, #1
 800416e:	4803      	ldr	r0, [pc, #12]	; (800417c <__io_putchar+0x18>)
 8004170:	a901      	add	r1, sp, #4
 8004172:	f7ff fd7f 	bl	8003c74 <HAL_UART_Transmit>
  return ch;
}
 8004176:	9801      	ldr	r0, [sp, #4]
 8004178:	bd0e      	pop	{r1, r2, r3, pc}
 800417a:	46c0      	nop			; (mov r8, r8)
 800417c:	20000a10 	.word	0x20000a10

08004180 <__errno>:
 8004180:	4b01      	ldr	r3, [pc, #4]	; (8004188 <__errno+0x8>)
 8004182:	6818      	ldr	r0, [r3, #0]
 8004184:	4770      	bx	lr
 8004186:	46c0      	nop			; (mov r8, r8)
 8004188:	2000000c 	.word	0x2000000c

0800418c <__libc_init_array>:
 800418c:	b570      	push	{r4, r5, r6, lr}
 800418e:	2600      	movs	r6, #0
 8004190:	4d0c      	ldr	r5, [pc, #48]	; (80041c4 <__libc_init_array+0x38>)
 8004192:	4c0d      	ldr	r4, [pc, #52]	; (80041c8 <__libc_init_array+0x3c>)
 8004194:	1b64      	subs	r4, r4, r5
 8004196:	10a4      	asrs	r4, r4, #2
 8004198:	42a6      	cmp	r6, r4
 800419a:	d109      	bne.n	80041b0 <__libc_init_array+0x24>
 800419c:	2600      	movs	r6, #0
 800419e:	f004 fef9 	bl	8008f94 <_init>
 80041a2:	4d0a      	ldr	r5, [pc, #40]	; (80041cc <__libc_init_array+0x40>)
 80041a4:	4c0a      	ldr	r4, [pc, #40]	; (80041d0 <__libc_init_array+0x44>)
 80041a6:	1b64      	subs	r4, r4, r5
 80041a8:	10a4      	asrs	r4, r4, #2
 80041aa:	42a6      	cmp	r6, r4
 80041ac:	d105      	bne.n	80041ba <__libc_init_array+0x2e>
 80041ae:	bd70      	pop	{r4, r5, r6, pc}
 80041b0:	00b3      	lsls	r3, r6, #2
 80041b2:	58eb      	ldr	r3, [r5, r3]
 80041b4:	4798      	blx	r3
 80041b6:	3601      	adds	r6, #1
 80041b8:	e7ee      	b.n	8004198 <__libc_init_array+0xc>
 80041ba:	00b3      	lsls	r3, r6, #2
 80041bc:	58eb      	ldr	r3, [r5, r3]
 80041be:	4798      	blx	r3
 80041c0:	3601      	adds	r6, #1
 80041c2:	e7f2      	b.n	80041aa <__libc_init_array+0x1e>
 80041c4:	08009474 	.word	0x08009474
 80041c8:	08009474 	.word	0x08009474
 80041cc:	08009474 	.word	0x08009474
 80041d0:	0800947c 	.word	0x0800947c

080041d4 <memset>:
 80041d4:	0003      	movs	r3, r0
 80041d6:	1882      	adds	r2, r0, r2
 80041d8:	4293      	cmp	r3, r2
 80041da:	d100      	bne.n	80041de <memset+0xa>
 80041dc:	4770      	bx	lr
 80041de:	7019      	strb	r1, [r3, #0]
 80041e0:	3301      	adds	r3, #1
 80041e2:	e7f9      	b.n	80041d8 <memset+0x4>

080041e4 <printf>:
 80041e4:	b40f      	push	{r0, r1, r2, r3}
 80041e6:	b507      	push	{r0, r1, r2, lr}
 80041e8:	4905      	ldr	r1, [pc, #20]	; (8004200 <printf+0x1c>)
 80041ea:	ab04      	add	r3, sp, #16
 80041ec:	6808      	ldr	r0, [r1, #0]
 80041ee:	cb04      	ldmia	r3!, {r2}
 80041f0:	6881      	ldr	r1, [r0, #8]
 80041f2:	9301      	str	r3, [sp, #4]
 80041f4:	f000 f81c 	bl	8004230 <_vfprintf_r>
 80041f8:	b003      	add	sp, #12
 80041fa:	bc08      	pop	{r3}
 80041fc:	b004      	add	sp, #16
 80041fe:	4718      	bx	r3
 8004200:	2000000c 	.word	0x2000000c

08004204 <strstr>:
 8004204:	780a      	ldrb	r2, [r1, #0]
 8004206:	b530      	push	{r4, r5, lr}
 8004208:	2a00      	cmp	r2, #0
 800420a:	d10c      	bne.n	8004226 <strstr+0x22>
 800420c:	bd30      	pop	{r4, r5, pc}
 800420e:	429a      	cmp	r2, r3
 8004210:	d108      	bne.n	8004224 <strstr+0x20>
 8004212:	2301      	movs	r3, #1
 8004214:	5ccc      	ldrb	r4, [r1, r3]
 8004216:	2c00      	cmp	r4, #0
 8004218:	d0f8      	beq.n	800420c <strstr+0x8>
 800421a:	5cc5      	ldrb	r5, [r0, r3]
 800421c:	42a5      	cmp	r5, r4
 800421e:	d101      	bne.n	8004224 <strstr+0x20>
 8004220:	3301      	adds	r3, #1
 8004222:	e7f7      	b.n	8004214 <strstr+0x10>
 8004224:	3001      	adds	r0, #1
 8004226:	7803      	ldrb	r3, [r0, #0]
 8004228:	2b00      	cmp	r3, #0
 800422a:	d1f0      	bne.n	800420e <strstr+0xa>
 800422c:	0018      	movs	r0, r3
 800422e:	e7ed      	b.n	800420c <strstr+0x8>

08004230 <_vfprintf_r>:
 8004230:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004232:	b0d9      	sub	sp, #356	; 0x164
 8004234:	000e      	movs	r6, r1
 8004236:	001d      	movs	r5, r3
 8004238:	001c      	movs	r4, r3
 800423a:	9209      	str	r2, [sp, #36]	; 0x24
 800423c:	900a      	str	r0, [sp, #40]	; 0x28
 800423e:	f002 fca7 	bl	8006b90 <_localeconv_r>
 8004242:	6803      	ldr	r3, [r0, #0]
 8004244:	0018      	movs	r0, r3
 8004246:	931c      	str	r3, [sp, #112]	; 0x70
 8004248:	f7fb ff5a 	bl	8000100 <strlen>
 800424c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800424e:	9017      	str	r0, [sp, #92]	; 0x5c
 8004250:	2b00      	cmp	r3, #0
 8004252:	d006      	beq.n	8004262 <_vfprintf_r+0x32>
 8004254:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004256:	9308      	str	r3, [sp, #32]
 8004258:	2b00      	cmp	r3, #0
 800425a:	d102      	bne.n	8004262 <_vfprintf_r+0x32>
 800425c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800425e:	f002 fb31 	bl	80068c4 <__sinit>
 8004262:	6e73      	ldr	r3, [r6, #100]	; 0x64
 8004264:	07db      	lsls	r3, r3, #31
 8004266:	d405      	bmi.n	8004274 <_vfprintf_r+0x44>
 8004268:	89b3      	ldrh	r3, [r6, #12]
 800426a:	059b      	lsls	r3, r3, #22
 800426c:	d402      	bmi.n	8004274 <_vfprintf_r+0x44>
 800426e:	6db0      	ldr	r0, [r6, #88]	; 0x58
 8004270:	f002 fc94 	bl	8006b9c <__retarget_lock_acquire_recursive>
 8004274:	230c      	movs	r3, #12
 8004276:	5ef2      	ldrsh	r2, [r6, r3]
 8004278:	2380      	movs	r3, #128	; 0x80
 800427a:	019b      	lsls	r3, r3, #6
 800427c:	421a      	tst	r2, r3
 800427e:	d105      	bne.n	800428c <_vfprintf_r+0x5c>
 8004280:	4313      	orrs	r3, r2
 8004282:	81b3      	strh	r3, [r6, #12]
 8004284:	6e72      	ldr	r2, [r6, #100]	; 0x64
 8004286:	4ba2      	ldr	r3, [pc, #648]	; (8004510 <_vfprintf_r+0x2e0>)
 8004288:	4013      	ands	r3, r2
 800428a:	6673      	str	r3, [r6, #100]	; 0x64
 800428c:	89b3      	ldrh	r3, [r6, #12]
 800428e:	071b      	lsls	r3, r3, #28
 8004290:	d502      	bpl.n	8004298 <_vfprintf_r+0x68>
 8004292:	6933      	ldr	r3, [r6, #16]
 8004294:	2b00      	cmp	r3, #0
 8004296:	d115      	bne.n	80042c4 <_vfprintf_r+0x94>
 8004298:	0031      	movs	r1, r6
 800429a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800429c:	f001 fb1a 	bl	80058d4 <__swsetup_r>
 80042a0:	2800      	cmp	r0, #0
 80042a2:	d00f      	beq.n	80042c4 <_vfprintf_r+0x94>
 80042a4:	6e73      	ldr	r3, [r6, #100]	; 0x64
 80042a6:	07db      	lsls	r3, r3, #31
 80042a8:	d505      	bpl.n	80042b6 <_vfprintf_r+0x86>
 80042aa:	2301      	movs	r3, #1
 80042ac:	425b      	negs	r3, r3
 80042ae:	9316      	str	r3, [sp, #88]	; 0x58
 80042b0:	9816      	ldr	r0, [sp, #88]	; 0x58
 80042b2:	b059      	add	sp, #356	; 0x164
 80042b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042b6:	89b3      	ldrh	r3, [r6, #12]
 80042b8:	059b      	lsls	r3, r3, #22
 80042ba:	d4f6      	bmi.n	80042aa <_vfprintf_r+0x7a>
 80042bc:	6db0      	ldr	r0, [r6, #88]	; 0x58
 80042be:	f002 fc6e 	bl	8006b9e <__retarget_lock_release_recursive>
 80042c2:	e7f2      	b.n	80042aa <_vfprintf_r+0x7a>
 80042c4:	231a      	movs	r3, #26
 80042c6:	89b2      	ldrh	r2, [r6, #12]
 80042c8:	4013      	ands	r3, r2
 80042ca:	2b0a      	cmp	r3, #10
 80042cc:	d113      	bne.n	80042f6 <_vfprintf_r+0xc6>
 80042ce:	210e      	movs	r1, #14
 80042d0:	5e73      	ldrsh	r3, [r6, r1]
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	db0f      	blt.n	80042f6 <_vfprintf_r+0xc6>
 80042d6:	6e73      	ldr	r3, [r6, #100]	; 0x64
 80042d8:	07db      	lsls	r3, r3, #31
 80042da:	d404      	bmi.n	80042e6 <_vfprintf_r+0xb6>
 80042dc:	0593      	lsls	r3, r2, #22
 80042de:	d402      	bmi.n	80042e6 <_vfprintf_r+0xb6>
 80042e0:	6db0      	ldr	r0, [r6, #88]	; 0x58
 80042e2:	f002 fc5c 	bl	8006b9e <__retarget_lock_release_recursive>
 80042e6:	002b      	movs	r3, r5
 80042e8:	0031      	movs	r1, r6
 80042ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80042ec:	980a      	ldr	r0, [sp, #40]	; 0x28
 80042ee:	f001 faad 	bl	800584c <__sbprintf>
 80042f2:	9016      	str	r0, [sp, #88]	; 0x58
 80042f4:	e7dc      	b.n	80042b0 <_vfprintf_r+0x80>
 80042f6:	2300      	movs	r3, #0
 80042f8:	2200      	movs	r2, #0
 80042fa:	932e      	str	r3, [sp, #184]	; 0xb8
 80042fc:	932d      	str	r3, [sp, #180]	; 0xb4
 80042fe:	930d      	str	r3, [sp, #52]	; 0x34
 8004300:	2300      	movs	r3, #0
 8004302:	9214      	str	r2, [sp, #80]	; 0x50
 8004304:	9315      	str	r3, [sp, #84]	; 0x54
 8004306:	2300      	movs	r3, #0
 8004308:	af2f      	add	r7, sp, #188	; 0xbc
 800430a:	972c      	str	r7, [sp, #176]	; 0xb0
 800430c:	931f      	str	r3, [sp, #124]	; 0x7c
 800430e:	931e      	str	r3, [sp, #120]	; 0x78
 8004310:	9312      	str	r3, [sp, #72]	; 0x48
 8004312:	931b      	str	r3, [sp, #108]	; 0x6c
 8004314:	931d      	str	r3, [sp, #116]	; 0x74
 8004316:	9316      	str	r3, [sp, #88]	; 0x58
 8004318:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800431a:	782b      	ldrb	r3, [r5, #0]
 800431c:	2b00      	cmp	r3, #0
 800431e:	d002      	beq.n	8004326 <_vfprintf_r+0xf6>
 8004320:	2b25      	cmp	r3, #37	; 0x25
 8004322:	d000      	beq.n	8004326 <_vfprintf_r+0xf6>
 8004324:	e099      	b.n	800445a <_vfprintf_r+0x22a>
 8004326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004328:	1aeb      	subs	r3, r5, r3
 800432a:	9308      	str	r3, [sp, #32]
 800432c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800432e:	429d      	cmp	r5, r3
 8004330:	d01c      	beq.n	800436c <_vfprintf_r+0x13c>
 8004332:	9a08      	ldr	r2, [sp, #32]
 8004334:	603b      	str	r3, [r7, #0]
 8004336:	4694      	mov	ip, r2
 8004338:	9b08      	ldr	r3, [sp, #32]
 800433a:	607b      	str	r3, [r7, #4]
 800433c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800433e:	3708      	adds	r7, #8
 8004340:	4463      	add	r3, ip
 8004342:	932e      	str	r3, [sp, #184]	; 0xb8
 8004344:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8004346:	930b      	str	r3, [sp, #44]	; 0x2c
 8004348:	3301      	adds	r3, #1
 800434a:	932d      	str	r3, [sp, #180]	; 0xb4
 800434c:	2b07      	cmp	r3, #7
 800434e:	dd08      	ble.n	8004362 <_vfprintf_r+0x132>
 8004350:	0031      	movs	r1, r6
 8004352:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004354:	aa2c      	add	r2, sp, #176	; 0xb0
 8004356:	f003 facd 	bl	80078f4 <__sprint_r>
 800435a:	2800      	cmp	r0, #0
 800435c:	d000      	beq.n	8004360 <_vfprintf_r+0x130>
 800435e:	e2bb      	b.n	80048d8 <_vfprintf_r+0x6a8>
 8004360:	af2f      	add	r7, sp, #188	; 0xbc
 8004362:	9a08      	ldr	r2, [sp, #32]
 8004364:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004366:	4694      	mov	ip, r2
 8004368:	4463      	add	r3, ip
 800436a:	9316      	str	r3, [sp, #88]	; 0x58
 800436c:	782b      	ldrb	r3, [r5, #0]
 800436e:	2b00      	cmp	r3, #0
 8004370:	d101      	bne.n	8004376 <_vfprintf_r+0x146>
 8004372:	f001 fa17 	bl	80057a4 <_vfprintf_r+0x1574>
 8004376:	221b      	movs	r2, #27
 8004378:	2300      	movs	r3, #0
 800437a:	a91e      	add	r1, sp, #120	; 0x78
 800437c:	1852      	adds	r2, r2, r1
 800437e:	7013      	strb	r3, [r2, #0]
 8004380:	2201      	movs	r2, #1
 8004382:	4252      	negs	r2, r2
 8004384:	3501      	adds	r5, #1
 8004386:	920b      	str	r2, [sp, #44]	; 0x2c
 8004388:	9318      	str	r3, [sp, #96]	; 0x60
 800438a:	9308      	str	r3, [sp, #32]
 800438c:	1c6b      	adds	r3, r5, #1
 800438e:	9313      	str	r3, [sp, #76]	; 0x4c
 8004390:	782b      	ldrb	r3, [r5, #0]
 8004392:	930f      	str	r3, [sp, #60]	; 0x3c
 8004394:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004396:	3820      	subs	r0, #32
 8004398:	285a      	cmp	r0, #90	; 0x5a
 800439a:	d901      	bls.n	80043a0 <_vfprintf_r+0x170>
 800439c:	f000 fe6b 	bl	8005076 <_vfprintf_r+0xe46>
 80043a0:	f7fb fec0 	bl	8000124 <__gnu_thumb1_case_uhi>
 80043a4:	0669007a 	.word	0x0669007a
 80043a8:	00840669 	.word	0x00840669
 80043ac:	06690669 	.word	0x06690669
 80043b0:	005d0669 	.word	0x005d0669
 80043b4:	06690669 	.word	0x06690669
 80043b8:	008e0086 	.word	0x008e0086
 80043bc:	008c0669 	.word	0x008c0669
 80043c0:	06690093 	.word	0x06690093
 80043c4:	00b800b4 	.word	0x00b800b4
 80043c8:	00b800b8 	.word	0x00b800b8
 80043cc:	00b800b8 	.word	0x00b800b8
 80043d0:	00b800b8 	.word	0x00b800b8
 80043d4:	00b800b8 	.word	0x00b800b8
 80043d8:	06690669 	.word	0x06690669
 80043dc:	06690669 	.word	0x06690669
 80043e0:	06690669 	.word	0x06690669
 80043e4:	02230669 	.word	0x02230669
 80043e8:	00e40669 	.word	0x00e40669
 80043ec:	022301d6 	.word	0x022301d6
 80043f0:	02230223 	.word	0x02230223
 80043f4:	06690669 	.word	0x06690669
 80043f8:	06690669 	.word	0x06690669
 80043fc:	066900cb 	.word	0x066900cb
 8004400:	04f90669 	.word	0x04f90669
 8004404:	06690669 	.word	0x06690669
 8004408:	054a0669 	.word	0x054a0669
 800440c:	056a0669 	.word	0x056a0669
 8004410:	06690669 	.word	0x06690669
 8004414:	066905a1 	.word	0x066905a1
 8004418:	06690669 	.word	0x06690669
 800441c:	06690669 	.word	0x06690669
 8004420:	06690669 	.word	0x06690669
 8004424:	02230669 	.word	0x02230669
 8004428:	00e40669 	.word	0x00e40669
 800442c:	022301da 	.word	0x022301da
 8004430:	02230223 	.word	0x02230223
 8004434:	01da00cd 	.word	0x01da00cd
 8004438:	066900e0 	.word	0x066900e0
 800443c:	066900d9 	.word	0x066900d9
 8004440:	04fd04d8 	.word	0x04fd04d8
 8004444:	00e00538 	.word	0x00e00538
 8004448:	054a0669 	.word	0x054a0669
 800444c:	056e0082 	.word	0x056e0082
 8004450:	06690669 	.word	0x06690669
 8004454:	066905c7 	.word	0x066905c7
 8004458:	0082      	.short	0x0082
 800445a:	3501      	adds	r5, #1
 800445c:	e75d      	b.n	800431a <_vfprintf_r+0xea>
 800445e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004460:	f002 fb96 	bl	8006b90 <_localeconv_r>
 8004464:	6843      	ldr	r3, [r0, #4]
 8004466:	0018      	movs	r0, r3
 8004468:	931d      	str	r3, [sp, #116]	; 0x74
 800446a:	f7fb fe49 	bl	8000100 <strlen>
 800446e:	901b      	str	r0, [sp, #108]	; 0x6c
 8004470:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004472:	f002 fb8d 	bl	8006b90 <_localeconv_r>
 8004476:	6883      	ldr	r3, [r0, #8]
 8004478:	9312      	str	r3, [sp, #72]	; 0x48
 800447a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800447c:	2b00      	cmp	r3, #0
 800447e:	d013      	beq.n	80044a8 <_vfprintf_r+0x278>
 8004480:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004482:	2b00      	cmp	r3, #0
 8004484:	d010      	beq.n	80044a8 <_vfprintf_r+0x278>
 8004486:	781b      	ldrb	r3, [r3, #0]
 8004488:	2b00      	cmp	r3, #0
 800448a:	d00d      	beq.n	80044a8 <_vfprintf_r+0x278>
 800448c:	2380      	movs	r3, #128	; 0x80
 800448e:	00db      	lsls	r3, r3, #3
 8004490:	9a08      	ldr	r2, [sp, #32]
 8004492:	431a      	orrs	r2, r3
 8004494:	9208      	str	r2, [sp, #32]
 8004496:	e007      	b.n	80044a8 <_vfprintf_r+0x278>
 8004498:	231b      	movs	r3, #27
 800449a:	aa1e      	add	r2, sp, #120	; 0x78
 800449c:	189b      	adds	r3, r3, r2
 800449e:	781a      	ldrb	r2, [r3, #0]
 80044a0:	2a00      	cmp	r2, #0
 80044a2:	d101      	bne.n	80044a8 <_vfprintf_r+0x278>
 80044a4:	3220      	adds	r2, #32
 80044a6:	701a      	strb	r2, [r3, #0]
 80044a8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80044aa:	e76f      	b.n	800438c <_vfprintf_r+0x15c>
 80044ac:	2301      	movs	r3, #1
 80044ae:	e7ef      	b.n	8004490 <_vfprintf_r+0x260>
 80044b0:	cc08      	ldmia	r4!, {r3}
 80044b2:	9318      	str	r3, [sp, #96]	; 0x60
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	daf7      	bge.n	80044a8 <_vfprintf_r+0x278>
 80044b8:	425b      	negs	r3, r3
 80044ba:	9318      	str	r3, [sp, #96]	; 0x60
 80044bc:	2304      	movs	r3, #4
 80044be:	e7e7      	b.n	8004490 <_vfprintf_r+0x260>
 80044c0:	231b      	movs	r3, #27
 80044c2:	aa1e      	add	r2, sp, #120	; 0x78
 80044c4:	189b      	adds	r3, r3, r2
 80044c6:	222b      	movs	r2, #43	; 0x2b
 80044c8:	e7ed      	b.n	80044a6 <_vfprintf_r+0x276>
 80044ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80044cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80044ce:	7812      	ldrb	r2, [r2, #0]
 80044d0:	3301      	adds	r3, #1
 80044d2:	920f      	str	r2, [sp, #60]	; 0x3c
 80044d4:	2a2a      	cmp	r2, #42	; 0x2a
 80044d6:	d010      	beq.n	80044fa <_vfprintf_r+0x2ca>
 80044d8:	2200      	movs	r2, #0
 80044da:	920b      	str	r2, [sp, #44]	; 0x2c
 80044dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80044de:	9313      	str	r3, [sp, #76]	; 0x4c
 80044e0:	3a30      	subs	r2, #48	; 0x30
 80044e2:	2a09      	cmp	r2, #9
 80044e4:	d900      	bls.n	80044e8 <_vfprintf_r+0x2b8>
 80044e6:	e755      	b.n	8004394 <_vfprintf_r+0x164>
 80044e8:	210a      	movs	r1, #10
 80044ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80044ec:	4348      	muls	r0, r1
 80044ee:	1882      	adds	r2, r0, r2
 80044f0:	920b      	str	r2, [sp, #44]	; 0x2c
 80044f2:	781a      	ldrb	r2, [r3, #0]
 80044f4:	3301      	adds	r3, #1
 80044f6:	920f      	str	r2, [sp, #60]	; 0x3c
 80044f8:	e7f0      	b.n	80044dc <_vfprintf_r+0x2ac>
 80044fa:	cc04      	ldmia	r4!, {r2}
 80044fc:	920b      	str	r2, [sp, #44]	; 0x2c
 80044fe:	2a00      	cmp	r2, #0
 8004500:	da02      	bge.n	8004508 <_vfprintf_r+0x2d8>
 8004502:	2201      	movs	r2, #1
 8004504:	4252      	negs	r2, r2
 8004506:	920b      	str	r2, [sp, #44]	; 0x2c
 8004508:	9313      	str	r3, [sp, #76]	; 0x4c
 800450a:	e7cd      	b.n	80044a8 <_vfprintf_r+0x278>
 800450c:	2380      	movs	r3, #128	; 0x80
 800450e:	e7bf      	b.n	8004490 <_vfprintf_r+0x260>
 8004510:	ffffdfff 	.word	0xffffdfff
 8004514:	2200      	movs	r2, #0
 8004516:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004518:	9218      	str	r2, [sp, #96]	; 0x60
 800451a:	210a      	movs	r1, #10
 800451c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800451e:	434a      	muls	r2, r1
 8004520:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004522:	3930      	subs	r1, #48	; 0x30
 8004524:	188a      	adds	r2, r1, r2
 8004526:	9218      	str	r2, [sp, #96]	; 0x60
 8004528:	001a      	movs	r2, r3
 800452a:	7812      	ldrb	r2, [r2, #0]
 800452c:	3301      	adds	r3, #1
 800452e:	920f      	str	r2, [sp, #60]	; 0x3c
 8004530:	3a30      	subs	r2, #48	; 0x30
 8004532:	9313      	str	r3, [sp, #76]	; 0x4c
 8004534:	2a09      	cmp	r2, #9
 8004536:	d9f0      	bls.n	800451a <_vfprintf_r+0x2ea>
 8004538:	e72c      	b.n	8004394 <_vfprintf_r+0x164>
 800453a:	2308      	movs	r3, #8
 800453c:	e7a8      	b.n	8004490 <_vfprintf_r+0x260>
 800453e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004540:	781b      	ldrb	r3, [r3, #0]
 8004542:	2b68      	cmp	r3, #104	; 0x68
 8004544:	d105      	bne.n	8004552 <_vfprintf_r+0x322>
 8004546:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004548:	3301      	adds	r3, #1
 800454a:	9313      	str	r3, [sp, #76]	; 0x4c
 800454c:	2380      	movs	r3, #128	; 0x80
 800454e:	009b      	lsls	r3, r3, #2
 8004550:	e79e      	b.n	8004490 <_vfprintf_r+0x260>
 8004552:	2340      	movs	r3, #64	; 0x40
 8004554:	e79c      	b.n	8004490 <_vfprintf_r+0x260>
 8004556:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004558:	781b      	ldrb	r3, [r3, #0]
 800455a:	2b6c      	cmp	r3, #108	; 0x6c
 800455c:	d104      	bne.n	8004568 <_vfprintf_r+0x338>
 800455e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004560:	3301      	adds	r3, #1
 8004562:	9313      	str	r3, [sp, #76]	; 0x4c
 8004564:	2320      	movs	r3, #32
 8004566:	e793      	b.n	8004490 <_vfprintf_r+0x260>
 8004568:	2310      	movs	r3, #16
 800456a:	e791      	b.n	8004490 <_vfprintf_r+0x260>
 800456c:	0022      	movs	r2, r4
 800456e:	ca08      	ldmia	r2!, {r3}
 8004570:	a83f      	add	r0, sp, #252	; 0xfc
 8004572:	920e      	str	r2, [sp, #56]	; 0x38
 8004574:	221b      	movs	r2, #27
 8004576:	7003      	strb	r3, [r0, #0]
 8004578:	2300      	movs	r3, #0
 800457a:	a91e      	add	r1, sp, #120	; 0x78
 800457c:	1852      	adds	r2, r2, r1
 800457e:	7013      	strb	r3, [r2, #0]
 8004580:	930c      	str	r3, [sp, #48]	; 0x30
 8004582:	3301      	adds	r3, #1
 8004584:	930b      	str	r3, [sp, #44]	; 0x2c
 8004586:	2300      	movs	r3, #0
 8004588:	001d      	movs	r5, r3
 800458a:	9319      	str	r3, [sp, #100]	; 0x64
 800458c:	9310      	str	r3, [sp, #64]	; 0x40
 800458e:	9311      	str	r3, [sp, #68]	; 0x44
 8004590:	9009      	str	r0, [sp, #36]	; 0x24
 8004592:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004594:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004596:	931a      	str	r3, [sp, #104]	; 0x68
 8004598:	4293      	cmp	r3, r2
 800459a:	da00      	bge.n	800459e <_vfprintf_r+0x36e>
 800459c:	921a      	str	r2, [sp, #104]	; 0x68
 800459e:	231b      	movs	r3, #27
 80045a0:	aa1e      	add	r2, sp, #120	; 0x78
 80045a2:	189b      	adds	r3, r3, r2
 80045a4:	781b      	ldrb	r3, [r3, #0]
 80045a6:	1e5a      	subs	r2, r3, #1
 80045a8:	4193      	sbcs	r3, r2
 80045aa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80045ac:	18d3      	adds	r3, r2, r3
 80045ae:	931a      	str	r3, [sp, #104]	; 0x68
 80045b0:	2302      	movs	r3, #2
 80045b2:	9a08      	ldr	r2, [sp, #32]
 80045b4:	401a      	ands	r2, r3
 80045b6:	9221      	str	r2, [sp, #132]	; 0x84
 80045b8:	9a08      	ldr	r2, [sp, #32]
 80045ba:	421a      	tst	r2, r3
 80045bc:	d002      	beq.n	80045c4 <_vfprintf_r+0x394>
 80045be:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80045c0:	3302      	adds	r3, #2
 80045c2:	931a      	str	r3, [sp, #104]	; 0x68
 80045c4:	2384      	movs	r3, #132	; 0x84
 80045c6:	9a08      	ldr	r2, [sp, #32]
 80045c8:	401a      	ands	r2, r3
 80045ca:	9222      	str	r2, [sp, #136]	; 0x88
 80045cc:	9a08      	ldr	r2, [sp, #32]
 80045ce:	421a      	tst	r2, r3
 80045d0:	d121      	bne.n	8004616 <_vfprintf_r+0x3e6>
 80045d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80045d4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80045d6:	1a9c      	subs	r4, r3, r2
 80045d8:	2c00      	cmp	r4, #0
 80045da:	dd1c      	ble.n	8004616 <_vfprintf_r+0x3e6>
 80045dc:	0039      	movs	r1, r7
 80045de:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80045e0:	48cc      	ldr	r0, [pc, #816]	; (8004914 <_vfprintf_r+0x6e4>)
 80045e2:	9320      	str	r3, [sp, #128]	; 0x80
 80045e4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80045e6:	3301      	adds	r3, #1
 80045e8:	3108      	adds	r1, #8
 80045ea:	6038      	str	r0, [r7, #0]
 80045ec:	2c10      	cmp	r4, #16
 80045ee:	dd01      	ble.n	80045f4 <_vfprintf_r+0x3c4>
 80045f0:	f000 fd56 	bl	80050a0 <_vfprintf_r+0xe70>
 80045f4:	607c      	str	r4, [r7, #4]
 80045f6:	18a4      	adds	r4, r4, r2
 80045f8:	000f      	movs	r7, r1
 80045fa:	942e      	str	r4, [sp, #184]	; 0xb8
 80045fc:	932d      	str	r3, [sp, #180]	; 0xb4
 80045fe:	2b07      	cmp	r3, #7
 8004600:	dd09      	ble.n	8004616 <_vfprintf_r+0x3e6>
 8004602:	0031      	movs	r1, r6
 8004604:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004606:	aa2c      	add	r2, sp, #176	; 0xb0
 8004608:	f003 f974 	bl	80078f4 <__sprint_r>
 800460c:	2800      	cmp	r0, #0
 800460e:	d001      	beq.n	8004614 <_vfprintf_r+0x3e4>
 8004610:	f001 f8a7 	bl	8005762 <_vfprintf_r+0x1532>
 8004614:	af2f      	add	r7, sp, #188	; 0xbc
 8004616:	231b      	movs	r3, #27
 8004618:	aa1e      	add	r2, sp, #120	; 0x78
 800461a:	189b      	adds	r3, r3, r2
 800461c:	781a      	ldrb	r2, [r3, #0]
 800461e:	2a00      	cmp	r2, #0
 8004620:	d017      	beq.n	8004652 <_vfprintf_r+0x422>
 8004622:	603b      	str	r3, [r7, #0]
 8004624:	2301      	movs	r3, #1
 8004626:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8004628:	607b      	str	r3, [r7, #4]
 800462a:	0013      	movs	r3, r2
 800462c:	3301      	adds	r3, #1
 800462e:	932e      	str	r3, [sp, #184]	; 0xb8
 8004630:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8004632:	3708      	adds	r7, #8
 8004634:	9320      	str	r3, [sp, #128]	; 0x80
 8004636:	3301      	adds	r3, #1
 8004638:	932d      	str	r3, [sp, #180]	; 0xb4
 800463a:	2b07      	cmp	r3, #7
 800463c:	dd09      	ble.n	8004652 <_vfprintf_r+0x422>
 800463e:	0031      	movs	r1, r6
 8004640:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004642:	aa2c      	add	r2, sp, #176	; 0xb0
 8004644:	f003 f956 	bl	80078f4 <__sprint_r>
 8004648:	2800      	cmp	r0, #0
 800464a:	d001      	beq.n	8004650 <_vfprintf_r+0x420>
 800464c:	f001 f889 	bl	8005762 <_vfprintf_r+0x1532>
 8004650:	af2f      	add	r7, sp, #188	; 0xbc
 8004652:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004654:	2b00      	cmp	r3, #0
 8004656:	d019      	beq.n	800468c <_vfprintf_r+0x45c>
 8004658:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800465a:	9320      	str	r3, [sp, #128]	; 0x80
 800465c:	ab25      	add	r3, sp, #148	; 0x94
 800465e:	603b      	str	r3, [r7, #0]
 8004660:	2302      	movs	r3, #2
 8004662:	607b      	str	r3, [r7, #4]
 8004664:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004666:	3708      	adds	r7, #8
 8004668:	3302      	adds	r3, #2
 800466a:	932e      	str	r3, [sp, #184]	; 0xb8
 800466c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800466e:	9320      	str	r3, [sp, #128]	; 0x80
 8004670:	3301      	adds	r3, #1
 8004672:	932d      	str	r3, [sp, #180]	; 0xb4
 8004674:	2b07      	cmp	r3, #7
 8004676:	dd09      	ble.n	800468c <_vfprintf_r+0x45c>
 8004678:	0031      	movs	r1, r6
 800467a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800467c:	aa2c      	add	r2, sp, #176	; 0xb0
 800467e:	f003 f939 	bl	80078f4 <__sprint_r>
 8004682:	2800      	cmp	r0, #0
 8004684:	d001      	beq.n	800468a <_vfprintf_r+0x45a>
 8004686:	f001 f86c 	bl	8005762 <_vfprintf_r+0x1532>
 800468a:	af2f      	add	r7, sp, #188	; 0xbc
 800468c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800468e:	2b80      	cmp	r3, #128	; 0x80
 8004690:	d121      	bne.n	80046d6 <_vfprintf_r+0x4a6>
 8004692:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8004694:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004696:	1a9c      	subs	r4, r3, r2
 8004698:	2c00      	cmp	r4, #0
 800469a:	dd1c      	ble.n	80046d6 <_vfprintf_r+0x4a6>
 800469c:	0039      	movs	r1, r7
 800469e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80046a0:	489d      	ldr	r0, [pc, #628]	; (8004918 <_vfprintf_r+0x6e8>)
 80046a2:	9320      	str	r3, [sp, #128]	; 0x80
 80046a4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80046a6:	3301      	adds	r3, #1
 80046a8:	3108      	adds	r1, #8
 80046aa:	6038      	str	r0, [r7, #0]
 80046ac:	2c10      	cmp	r4, #16
 80046ae:	dd01      	ble.n	80046b4 <_vfprintf_r+0x484>
 80046b0:	f000 fd0a 	bl	80050c8 <_vfprintf_r+0xe98>
 80046b4:	607c      	str	r4, [r7, #4]
 80046b6:	18a4      	adds	r4, r4, r2
 80046b8:	000f      	movs	r7, r1
 80046ba:	942e      	str	r4, [sp, #184]	; 0xb8
 80046bc:	932d      	str	r3, [sp, #180]	; 0xb4
 80046be:	2b07      	cmp	r3, #7
 80046c0:	dd09      	ble.n	80046d6 <_vfprintf_r+0x4a6>
 80046c2:	0031      	movs	r1, r6
 80046c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046c6:	aa2c      	add	r2, sp, #176	; 0xb0
 80046c8:	f003 f914 	bl	80078f4 <__sprint_r>
 80046cc:	2800      	cmp	r0, #0
 80046ce:	d001      	beq.n	80046d4 <_vfprintf_r+0x4a4>
 80046d0:	f001 f847 	bl	8005762 <_vfprintf_r+0x1532>
 80046d4:	af2f      	add	r7, sp, #188	; 0xbc
 80046d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80046d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80046da:	1a9c      	subs	r4, r3, r2
 80046dc:	2c00      	cmp	r4, #0
 80046de:	dd1c      	ble.n	800471a <_vfprintf_r+0x4ea>
 80046e0:	0039      	movs	r1, r7
 80046e2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80046e4:	488c      	ldr	r0, [pc, #560]	; (8004918 <_vfprintf_r+0x6e8>)
 80046e6:	9319      	str	r3, [sp, #100]	; 0x64
 80046e8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80046ea:	3301      	adds	r3, #1
 80046ec:	3108      	adds	r1, #8
 80046ee:	6038      	str	r0, [r7, #0]
 80046f0:	2c10      	cmp	r4, #16
 80046f2:	dd01      	ble.n	80046f8 <_vfprintf_r+0x4c8>
 80046f4:	f000 fd04 	bl	8005100 <_vfprintf_r+0xed0>
 80046f8:	607c      	str	r4, [r7, #4]
 80046fa:	18a4      	adds	r4, r4, r2
 80046fc:	000f      	movs	r7, r1
 80046fe:	942e      	str	r4, [sp, #184]	; 0xb8
 8004700:	932d      	str	r3, [sp, #180]	; 0xb4
 8004702:	2b07      	cmp	r3, #7
 8004704:	dd09      	ble.n	800471a <_vfprintf_r+0x4ea>
 8004706:	0031      	movs	r1, r6
 8004708:	980a      	ldr	r0, [sp, #40]	; 0x28
 800470a:	aa2c      	add	r2, sp, #176	; 0xb0
 800470c:	f003 f8f2 	bl	80078f4 <__sprint_r>
 8004710:	2800      	cmp	r0, #0
 8004712:	d001      	beq.n	8004718 <_vfprintf_r+0x4e8>
 8004714:	f001 f825 	bl	8005762 <_vfprintf_r+0x1532>
 8004718:	af2f      	add	r7, sp, #188	; 0xbc
 800471a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800471c:	9319      	str	r3, [sp, #100]	; 0x64
 800471e:	9b08      	ldr	r3, [sp, #32]
 8004720:	05db      	lsls	r3, r3, #23
 8004722:	d501      	bpl.n	8004728 <_vfprintf_r+0x4f8>
 8004724:	f000 fd00 	bl	8005128 <_vfprintf_r+0xef8>
 8004728:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800472a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800472c:	4694      	mov	ip, r2
 800472e:	603b      	str	r3, [r7, #0]
 8004730:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004732:	607b      	str	r3, [r7, #4]
 8004734:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004736:	4463      	add	r3, ip
 8004738:	932e      	str	r3, [sp, #184]	; 0xb8
 800473a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800473c:	9309      	str	r3, [sp, #36]	; 0x24
 800473e:	3301      	adds	r3, #1
 8004740:	932d      	str	r3, [sp, #180]	; 0xb4
 8004742:	2b07      	cmp	r3, #7
 8004744:	dd01      	ble.n	800474a <_vfprintf_r+0x51a>
 8004746:	f000 fde3 	bl	8005310 <_vfprintf_r+0x10e0>
 800474a:	3708      	adds	r7, #8
 800474c:	f000 fd34 	bl	80051b8 <_vfprintf_r+0xf88>
 8004750:	2310      	movs	r3, #16
 8004752:	9a08      	ldr	r2, [sp, #32]
 8004754:	431a      	orrs	r2, r3
 8004756:	9208      	str	r2, [sp, #32]
 8004758:	9b08      	ldr	r3, [sp, #32]
 800475a:	069b      	lsls	r3, r3, #26
 800475c:	d530      	bpl.n	80047c0 <_vfprintf_r+0x590>
 800475e:	2307      	movs	r3, #7
 8004760:	3407      	adds	r4, #7
 8004762:	439c      	bics	r4, r3
 8004764:	0022      	movs	r2, r4
 8004766:	ca18      	ldmia	r2!, {r3, r4}
 8004768:	9306      	str	r3, [sp, #24]
 800476a:	9407      	str	r4, [sp, #28]
 800476c:	920e      	str	r2, [sp, #56]	; 0x38
 800476e:	9a07      	ldr	r2, [sp, #28]
 8004770:	2301      	movs	r3, #1
 8004772:	2a00      	cmp	r2, #0
 8004774:	da0b      	bge.n	800478e <_vfprintf_r+0x55e>
 8004776:	9c06      	ldr	r4, [sp, #24]
 8004778:	9d07      	ldr	r5, [sp, #28]
 800477a:	2200      	movs	r2, #0
 800477c:	4261      	negs	r1, r4
 800477e:	41aa      	sbcs	r2, r5
 8004780:	9106      	str	r1, [sp, #24]
 8004782:	9207      	str	r2, [sp, #28]
 8004784:	221b      	movs	r2, #27
 8004786:	a91e      	add	r1, sp, #120	; 0x78
 8004788:	1852      	adds	r2, r2, r1
 800478a:	212d      	movs	r1, #45	; 0x2d
 800478c:	7011      	strb	r1, [r2, #0]
 800478e:	9907      	ldr	r1, [sp, #28]
 8004790:	9a06      	ldr	r2, [sp, #24]
 8004792:	430a      	orrs	r2, r1
 8004794:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004796:	3101      	adds	r1, #1
 8004798:	d101      	bne.n	800479e <_vfprintf_r+0x56e>
 800479a:	f001 f814 	bl	80057c6 <_vfprintf_r+0x1596>
 800479e:	2180      	movs	r1, #128	; 0x80
 80047a0:	9d08      	ldr	r5, [sp, #32]
 80047a2:	438d      	bics	r5, r1
 80047a4:	2a00      	cmp	r2, #0
 80047a6:	d001      	beq.n	80047ac <_vfprintf_r+0x57c>
 80047a8:	f001 f812 	bl	80057d0 <_vfprintf_r+0x15a0>
 80047ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80047ae:	2a00      	cmp	r2, #0
 80047b0:	d101      	bne.n	80047b6 <_vfprintf_r+0x586>
 80047b2:	f000 fc52 	bl	800505a <_vfprintf_r+0xe2a>
 80047b6:	2b01      	cmp	r3, #1
 80047b8:	d001      	beq.n	80047be <_vfprintf_r+0x58e>
 80047ba:	f001 f80d 	bl	80057d8 <_vfprintf_r+0x15a8>
 80047be:	e3e3      	b.n	8004f88 <_vfprintf_r+0xd58>
 80047c0:	1d23      	adds	r3, r4, #4
 80047c2:	930e      	str	r3, [sp, #56]	; 0x38
 80047c4:	9b08      	ldr	r3, [sp, #32]
 80047c6:	06db      	lsls	r3, r3, #27
 80047c8:	d504      	bpl.n	80047d4 <_vfprintf_r+0x5a4>
 80047ca:	6823      	ldr	r3, [r4, #0]
 80047cc:	9306      	str	r3, [sp, #24]
 80047ce:	17db      	asrs	r3, r3, #31
 80047d0:	9307      	str	r3, [sp, #28]
 80047d2:	e7cc      	b.n	800476e <_vfprintf_r+0x53e>
 80047d4:	9a08      	ldr	r2, [sp, #32]
 80047d6:	6823      	ldr	r3, [r4, #0]
 80047d8:	0652      	lsls	r2, r2, #25
 80047da:	d501      	bpl.n	80047e0 <_vfprintf_r+0x5b0>
 80047dc:	b21b      	sxth	r3, r3
 80047de:	e7f5      	b.n	80047cc <_vfprintf_r+0x59c>
 80047e0:	9a08      	ldr	r2, [sp, #32]
 80047e2:	0592      	lsls	r2, r2, #22
 80047e4:	d5f2      	bpl.n	80047cc <_vfprintf_r+0x59c>
 80047e6:	b25b      	sxtb	r3, r3
 80047e8:	e7f0      	b.n	80047cc <_vfprintf_r+0x59c>
 80047ea:	2307      	movs	r3, #7
 80047ec:	3407      	adds	r4, #7
 80047ee:	439c      	bics	r4, r3
 80047f0:	0022      	movs	r2, r4
 80047f2:	ca18      	ldmia	r2!, {r3, r4}
 80047f4:	920e      	str	r2, [sp, #56]	; 0x38
 80047f6:	2201      	movs	r2, #1
 80047f8:	9314      	str	r3, [sp, #80]	; 0x50
 80047fa:	9415      	str	r4, [sp, #84]	; 0x54
 80047fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80047fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004800:	005c      	lsls	r4, r3, #1
 8004802:	0864      	lsrs	r4, r4, #1
 8004804:	0028      	movs	r0, r5
 8004806:	0021      	movs	r1, r4
 8004808:	4b44      	ldr	r3, [pc, #272]	; (800491c <_vfprintf_r+0x6ec>)
 800480a:	4252      	negs	r2, r2
 800480c:	f7fd fca2 	bl	8002154 <__aeabi_dcmpun>
 8004810:	2800      	cmp	r0, #0
 8004812:	d128      	bne.n	8004866 <_vfprintf_r+0x636>
 8004814:	2201      	movs	r2, #1
 8004816:	0028      	movs	r0, r5
 8004818:	0021      	movs	r1, r4
 800481a:	4b40      	ldr	r3, [pc, #256]	; (800491c <_vfprintf_r+0x6ec>)
 800481c:	4252      	negs	r2, r2
 800481e:	f7fb fe21 	bl	8000464 <__aeabi_dcmple>
 8004822:	2800      	cmp	r0, #0
 8004824:	d11f      	bne.n	8004866 <_vfprintf_r+0x636>
 8004826:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004828:	9915      	ldr	r1, [sp, #84]	; 0x54
 800482a:	2200      	movs	r2, #0
 800482c:	2300      	movs	r3, #0
 800482e:	f7fb fe0f 	bl	8000450 <__aeabi_dcmplt>
 8004832:	2800      	cmp	r0, #0
 8004834:	d004      	beq.n	8004840 <_vfprintf_r+0x610>
 8004836:	231b      	movs	r3, #27
 8004838:	aa1e      	add	r2, sp, #120	; 0x78
 800483a:	189b      	adds	r3, r3, r2
 800483c:	222d      	movs	r2, #45	; 0x2d
 800483e:	701a      	strb	r2, [r3, #0]
 8004840:	4b37      	ldr	r3, [pc, #220]	; (8004920 <_vfprintf_r+0x6f0>)
 8004842:	9309      	str	r3, [sp, #36]	; 0x24
 8004844:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004846:	2b47      	cmp	r3, #71	; 0x47
 8004848:	dd01      	ble.n	800484e <_vfprintf_r+0x61e>
 800484a:	4b36      	ldr	r3, [pc, #216]	; (8004924 <_vfprintf_r+0x6f4>)
 800484c:	9309      	str	r3, [sp, #36]	; 0x24
 800484e:	2380      	movs	r3, #128	; 0x80
 8004850:	9a08      	ldr	r2, [sp, #32]
 8004852:	439a      	bics	r2, r3
 8004854:	2300      	movs	r3, #0
 8004856:	930c      	str	r3, [sp, #48]	; 0x30
 8004858:	3303      	adds	r3, #3
 800485a:	930b      	str	r3, [sp, #44]	; 0x2c
 800485c:	2300      	movs	r3, #0
 800485e:	9208      	str	r2, [sp, #32]
 8004860:	9319      	str	r3, [sp, #100]	; 0x64
 8004862:	f000 ffea 	bl	800583a <_vfprintf_r+0x160a>
 8004866:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004868:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800486a:	0010      	movs	r0, r2
 800486c:	0019      	movs	r1, r3
 800486e:	f7fd fc71 	bl	8002154 <__aeabi_dcmpun>
 8004872:	2800      	cmp	r0, #0
 8004874:	d00e      	beq.n	8004894 <_vfprintf_r+0x664>
 8004876:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004878:	2b00      	cmp	r3, #0
 800487a:	da04      	bge.n	8004886 <_vfprintf_r+0x656>
 800487c:	231b      	movs	r3, #27
 800487e:	aa1e      	add	r2, sp, #120	; 0x78
 8004880:	189b      	adds	r3, r3, r2
 8004882:	222d      	movs	r2, #45	; 0x2d
 8004884:	701a      	strb	r2, [r3, #0]
 8004886:	4b28      	ldr	r3, [pc, #160]	; (8004928 <_vfprintf_r+0x6f8>)
 8004888:	9309      	str	r3, [sp, #36]	; 0x24
 800488a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800488c:	2b47      	cmp	r3, #71	; 0x47
 800488e:	ddde      	ble.n	800484e <_vfprintf_r+0x61e>
 8004890:	4b26      	ldr	r3, [pc, #152]	; (800492c <_vfprintf_r+0x6fc>)
 8004892:	e7db      	b.n	800484c <_vfprintf_r+0x61c>
 8004894:	2320      	movs	r3, #32
 8004896:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004898:	439a      	bics	r2, r3
 800489a:	9210      	str	r2, [sp, #64]	; 0x40
 800489c:	2a41      	cmp	r2, #65	; 0x41
 800489e:	d129      	bne.n	80048f4 <_vfprintf_r+0x6c4>
 80048a0:	2230      	movs	r2, #48	; 0x30
 80048a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80048a4:	ab25      	add	r3, sp, #148	; 0x94
 80048a6:	701a      	strb	r2, [r3, #0]
 80048a8:	3248      	adds	r2, #72	; 0x48
 80048aa:	2961      	cmp	r1, #97	; 0x61
 80048ac:	d000      	beq.n	80048b0 <_vfprintf_r+0x680>
 80048ae:	3a20      	subs	r2, #32
 80048b0:	705a      	strb	r2, [r3, #1]
 80048b2:	2302      	movs	r3, #2
 80048b4:	9a08      	ldr	r2, [sp, #32]
 80048b6:	431a      	orrs	r2, r3
 80048b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80048ba:	9208      	str	r2, [sp, #32]
 80048bc:	2b63      	cmp	r3, #99	; 0x63
 80048be:	dd37      	ble.n	8004930 <_vfprintf_r+0x700>
 80048c0:	1c59      	adds	r1, r3, #1
 80048c2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80048c4:	f002 f9e0 	bl	8006c88 <_malloc_r>
 80048c8:	1e03      	subs	r3, r0, #0
 80048ca:	9009      	str	r0, [sp, #36]	; 0x24
 80048cc:	d000      	beq.n	80048d0 <_vfprintf_r+0x6a0>
 80048ce:	e14a      	b.n	8004b66 <_vfprintf_r+0x936>
 80048d0:	89b2      	ldrh	r2, [r6, #12]
 80048d2:	3340      	adds	r3, #64	; 0x40
 80048d4:	4313      	orrs	r3, r2
 80048d6:	81b3      	strh	r3, [r6, #12]
 80048d8:	6e73      	ldr	r3, [r6, #100]	; 0x64
 80048da:	07db      	lsls	r3, r3, #31
 80048dc:	d405      	bmi.n	80048ea <_vfprintf_r+0x6ba>
 80048de:	89b3      	ldrh	r3, [r6, #12]
 80048e0:	059b      	lsls	r3, r3, #22
 80048e2:	d402      	bmi.n	80048ea <_vfprintf_r+0x6ba>
 80048e4:	6db0      	ldr	r0, [r6, #88]	; 0x58
 80048e6:	f002 f95a 	bl	8006b9e <__retarget_lock_release_recursive>
 80048ea:	89b3      	ldrh	r3, [r6, #12]
 80048ec:	065b      	lsls	r3, r3, #25
 80048ee:	d400      	bmi.n	80048f2 <_vfprintf_r+0x6c2>
 80048f0:	e4de      	b.n	80042b0 <_vfprintf_r+0x80>
 80048f2:	e4da      	b.n	80042aa <_vfprintf_r+0x7a>
 80048f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80048f6:	900c      	str	r0, [sp, #48]	; 0x30
 80048f8:	3301      	adds	r3, #1
 80048fa:	d100      	bne.n	80048fe <_vfprintf_r+0x6ce>
 80048fc:	e136      	b.n	8004b6c <_vfprintf_r+0x93c>
 80048fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004900:	2b47      	cmp	r3, #71	; 0x47
 8004902:	d119      	bne.n	8004938 <_vfprintf_r+0x708>
 8004904:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004906:	2b00      	cmp	r3, #0
 8004908:	d116      	bne.n	8004938 <_vfprintf_r+0x708>
 800490a:	930c      	str	r3, [sp, #48]	; 0x30
 800490c:	3301      	adds	r3, #1
 800490e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004910:	e012      	b.n	8004938 <_vfprintf_r+0x708>
 8004912:	46c0      	nop			; (mov r8, r8)
 8004914:	08009104 	.word	0x08009104
 8004918:	08009114 	.word	0x08009114
 800491c:	7fefffff 	.word	0x7fefffff
 8004920:	080090d0 	.word	0x080090d0
 8004924:	080090d4 	.word	0x080090d4
 8004928:	080090d8 	.word	0x080090d8
 800492c:	080090dc 	.word	0x080090dc
 8004930:	2300      	movs	r3, #0
 8004932:	930c      	str	r3, [sp, #48]	; 0x30
 8004934:	ab3f      	add	r3, sp, #252	; 0xfc
 8004936:	9309      	str	r3, [sp, #36]	; 0x24
 8004938:	2380      	movs	r3, #128	; 0x80
 800493a:	9a08      	ldr	r2, [sp, #32]
 800493c:	005b      	lsls	r3, r3, #1
 800493e:	431a      	orrs	r2, r3
 8004940:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004942:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004944:	921a      	str	r2, [sp, #104]	; 0x68
 8004946:	2b00      	cmp	r3, #0
 8004948:	db00      	blt.n	800494c <_vfprintf_r+0x71c>
 800494a:	e111      	b.n	8004b70 <_vfprintf_r+0x940>
 800494c:	2280      	movs	r2, #128	; 0x80
 800494e:	0612      	lsls	r2, r2, #24
 8004950:	4694      	mov	ip, r2
 8004952:	4463      	add	r3, ip
 8004954:	930d      	str	r3, [sp, #52]	; 0x34
 8004956:	232d      	movs	r3, #45	; 0x2d
 8004958:	9322      	str	r3, [sp, #136]	; 0x88
 800495a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800495c:	2b41      	cmp	r3, #65	; 0x41
 800495e:	d000      	beq.n	8004962 <_vfprintf_r+0x732>
 8004960:	e11f      	b.n	8004ba2 <_vfprintf_r+0x972>
 8004962:	0020      	movs	r0, r4
 8004964:	aa26      	add	r2, sp, #152	; 0x98
 8004966:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004968:	f002 ff14 	bl	8007794 <frexp>
 800496c:	23ff      	movs	r3, #255	; 0xff
 800496e:	2200      	movs	r2, #0
 8004970:	059b      	lsls	r3, r3, #22
 8004972:	f7fc fdf1 	bl	8001558 <__aeabi_dmul>
 8004976:	2200      	movs	r2, #0
 8004978:	2300      	movs	r3, #0
 800497a:	0004      	movs	r4, r0
 800497c:	000d      	movs	r5, r1
 800497e:	f7fb fd61 	bl	8000444 <__aeabi_dcmpeq>
 8004982:	2800      	cmp	r0, #0
 8004984:	d001      	beq.n	800498a <_vfprintf_r+0x75a>
 8004986:	2301      	movs	r3, #1
 8004988:	9326      	str	r3, [sp, #152]	; 0x98
 800498a:	4bca      	ldr	r3, [pc, #808]	; (8004cb4 <_vfprintf_r+0xa84>)
 800498c:	9311      	str	r3, [sp, #68]	; 0x44
 800498e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004990:	2b61      	cmp	r3, #97	; 0x61
 8004992:	d001      	beq.n	8004998 <_vfprintf_r+0x768>
 8004994:	4bc8      	ldr	r3, [pc, #800]	; (8004cb8 <_vfprintf_r+0xa88>)
 8004996:	9311      	str	r3, [sp, #68]	; 0x44
 8004998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800499a:	930d      	str	r3, [sp, #52]	; 0x34
 800499c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800499e:	3b01      	subs	r3, #1
 80049a0:	9319      	str	r3, [sp, #100]	; 0x64
 80049a2:	2200      	movs	r2, #0
 80049a4:	4bc5      	ldr	r3, [pc, #788]	; (8004cbc <_vfprintf_r+0xa8c>)
 80049a6:	0020      	movs	r0, r4
 80049a8:	0029      	movs	r1, r5
 80049aa:	f7fc fdd5 	bl	8001558 <__aeabi_dmul>
 80049ae:	000d      	movs	r5, r1
 80049b0:	0004      	movs	r4, r0
 80049b2:	f7fd fbed 	bl	8002190 <__aeabi_d2iz>
 80049b6:	9021      	str	r0, [sp, #132]	; 0x84
 80049b8:	f7fd fc20 	bl	80021fc <__aeabi_i2d>
 80049bc:	0002      	movs	r2, r0
 80049be:	000b      	movs	r3, r1
 80049c0:	0020      	movs	r0, r4
 80049c2:	0029      	movs	r1, r5
 80049c4:	f7fd f834 	bl	8001a30 <__aeabi_dsub>
 80049c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80049ca:	000d      	movs	r5, r1
 80049cc:	001a      	movs	r2, r3
 80049ce:	3201      	adds	r2, #1
 80049d0:	9921      	ldr	r1, [sp, #132]	; 0x84
 80049d2:	920d      	str	r2, [sp, #52]	; 0x34
 80049d4:	9223      	str	r2, [sp, #140]	; 0x8c
 80049d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80049d8:	0004      	movs	r4, r0
 80049da:	5c52      	ldrb	r2, [r2, r1]
 80049dc:	701a      	strb	r2, [r3, #0]
 80049de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80049e0:	9320      	str	r3, [sp, #128]	; 0x80
 80049e2:	3301      	adds	r3, #1
 80049e4:	d00a      	beq.n	80049fc <_vfprintf_r+0x7cc>
 80049e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80049e8:	2200      	movs	r2, #0
 80049ea:	3b01      	subs	r3, #1
 80049ec:	9319      	str	r3, [sp, #100]	; 0x64
 80049ee:	0020      	movs	r0, r4
 80049f0:	2300      	movs	r3, #0
 80049f2:	0029      	movs	r1, r5
 80049f4:	f7fb fd26 	bl	8000444 <__aeabi_dcmpeq>
 80049f8:	2800      	cmp	r0, #0
 80049fa:	d0d2      	beq.n	80049a2 <_vfprintf_r+0x772>
 80049fc:	2200      	movs	r2, #0
 80049fe:	0020      	movs	r0, r4
 8004a00:	0029      	movs	r1, r5
 8004a02:	4baf      	ldr	r3, [pc, #700]	; (8004cc0 <_vfprintf_r+0xa90>)
 8004a04:	f7fb fd38 	bl	8000478 <__aeabi_dcmpgt>
 8004a08:	2800      	cmp	r0, #0
 8004a0a:	d10c      	bne.n	8004a26 <_vfprintf_r+0x7f6>
 8004a0c:	2200      	movs	r2, #0
 8004a0e:	0020      	movs	r0, r4
 8004a10:	0029      	movs	r1, r5
 8004a12:	4bab      	ldr	r3, [pc, #684]	; (8004cc0 <_vfprintf_r+0xa90>)
 8004a14:	f7fb fd16 	bl	8000444 <__aeabi_dcmpeq>
 8004a18:	2800      	cmp	r0, #0
 8004a1a:	d100      	bne.n	8004a1e <_vfprintf_r+0x7ee>
 8004a1c:	e0bb      	b.n	8004b96 <_vfprintf_r+0x966>
 8004a1e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004a20:	07db      	lsls	r3, r3, #31
 8004a22:	d400      	bmi.n	8004a26 <_vfprintf_r+0x7f6>
 8004a24:	e0b7      	b.n	8004b96 <_vfprintf_r+0x966>
 8004a26:	2030      	movs	r0, #48	; 0x30
 8004a28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004a2a:	932a      	str	r3, [sp, #168]	; 0xa8
 8004a2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a2e:	7bdb      	ldrb	r3, [r3, #15]
 8004a30:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8004a32:	3a01      	subs	r2, #1
 8004a34:	922a      	str	r2, [sp, #168]	; 0xa8
 8004a36:	7811      	ldrb	r1, [r2, #0]
 8004a38:	4299      	cmp	r1, r3
 8004a3a:	d100      	bne.n	8004a3e <_vfprintf_r+0x80e>
 8004a3c:	e09b      	b.n	8004b76 <_vfprintf_r+0x946>
 8004a3e:	1c4b      	adds	r3, r1, #1
 8004a40:	b2db      	uxtb	r3, r3
 8004a42:	2939      	cmp	r1, #57	; 0x39
 8004a44:	d101      	bne.n	8004a4a <_vfprintf_r+0x81a>
 8004a46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a48:	7a9b      	ldrb	r3, [r3, #10]
 8004a4a:	7013      	strb	r3, [r2, #0]
 8004a4c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004a4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a50:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8004a52:	1a9b      	subs	r3, r3, r2
 8004a54:	930d      	str	r3, [sp, #52]	; 0x34
 8004a56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004a58:	2b47      	cmp	r3, #71	; 0x47
 8004a5a:	d000      	beq.n	8004a5e <_vfprintf_r+0x82e>
 8004a5c:	e0f0      	b.n	8004c40 <_vfprintf_r+0xa10>
 8004a5e:	1ceb      	adds	r3, r5, #3
 8004a60:	db03      	blt.n	8004a6a <_vfprintf_r+0x83a>
 8004a62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a64:	429d      	cmp	r5, r3
 8004a66:	dc00      	bgt.n	8004a6a <_vfprintf_r+0x83a>
 8004a68:	e118      	b.n	8004c9c <_vfprintf_r+0xa6c>
 8004a6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004a6c:	3b02      	subs	r3, #2
 8004a6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8004a70:	223c      	movs	r2, #60	; 0x3c
 8004a72:	466b      	mov	r3, sp
 8004a74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004a76:	189b      	adds	r3, r3, r2
 8004a78:	1e6c      	subs	r4, r5, #1
 8004a7a:	3a1c      	subs	r2, #28
 8004a7c:	2000      	movs	r0, #0
 8004a7e:	781b      	ldrb	r3, [r3, #0]
 8004a80:	9426      	str	r4, [sp, #152]	; 0x98
 8004a82:	4391      	bics	r1, r2
 8004a84:	2941      	cmp	r1, #65	; 0x41
 8004a86:	d102      	bne.n	8004a8e <_vfprintf_r+0x85e>
 8004a88:	330f      	adds	r3, #15
 8004a8a:	b2db      	uxtb	r3, r3
 8004a8c:	3001      	adds	r0, #1
 8004a8e:	a928      	add	r1, sp, #160	; 0xa0
 8004a90:	700b      	strb	r3, [r1, #0]
 8004a92:	232b      	movs	r3, #43	; 0x2b
 8004a94:	2c00      	cmp	r4, #0
 8004a96:	da02      	bge.n	8004a9e <_vfprintf_r+0x86e>
 8004a98:	2401      	movs	r4, #1
 8004a9a:	3302      	adds	r3, #2
 8004a9c:	1b64      	subs	r4, r4, r5
 8004a9e:	704b      	strb	r3, [r1, #1]
 8004aa0:	2c09      	cmp	r4, #9
 8004aa2:	dc00      	bgt.n	8004aa6 <_vfprintf_r+0x876>
 8004aa4:	e0e6      	b.n	8004c74 <_vfprintf_r+0xa44>
 8004aa6:	2337      	movs	r3, #55	; 0x37
 8004aa8:	250a      	movs	r5, #10
 8004aaa:	aa1e      	add	r2, sp, #120	; 0x78
 8004aac:	189b      	adds	r3, r3, r2
 8004aae:	9310      	str	r3, [sp, #64]	; 0x40
 8004ab0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004ab2:	0020      	movs	r0, r4
 8004ab4:	930b      	str	r3, [sp, #44]	; 0x2c
 8004ab6:	0029      	movs	r1, r5
 8004ab8:	3b01      	subs	r3, #1
 8004aba:	9310      	str	r3, [sp, #64]	; 0x40
 8004abc:	f7fb fcac 	bl	8000418 <__aeabi_idivmod>
 8004ac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004ac2:	3130      	adds	r1, #48	; 0x30
 8004ac4:	7019      	strb	r1, [r3, #0]
 8004ac6:	0020      	movs	r0, r4
 8004ac8:	0029      	movs	r1, r5
 8004aca:	9411      	str	r4, [sp, #68]	; 0x44
 8004acc:	f7fb fbbe 	bl	800024c <__divsi3>
 8004ad0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004ad2:	0004      	movs	r4, r0
 8004ad4:	2b63      	cmp	r3, #99	; 0x63
 8004ad6:	dceb      	bgt.n	8004ab0 <_vfprintf_r+0x880>
 8004ad8:	222a      	movs	r2, #42	; 0x2a
 8004ada:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004adc:	a81e      	add	r0, sp, #120	; 0x78
 8004ade:	1e99      	subs	r1, r3, #2
 8004ae0:	1812      	adds	r2, r2, r0
 8004ae2:	2037      	movs	r0, #55	; 0x37
 8004ae4:	000b      	movs	r3, r1
 8004ae6:	3430      	adds	r4, #48	; 0x30
 8004ae8:	700c      	strb	r4, [r1, #0]
 8004aea:	ac1e      	add	r4, sp, #120	; 0x78
 8004aec:	1900      	adds	r0, r0, r4
 8004aee:	4283      	cmp	r3, r0
 8004af0:	d200      	bcs.n	8004af4 <_vfprintf_r+0x8c4>
 8004af2:	e0ba      	b.n	8004c6a <_vfprintf_r+0xa3a>
 8004af4:	2300      	movs	r3, #0
 8004af6:	4281      	cmp	r1, r0
 8004af8:	d804      	bhi.n	8004b04 <_vfprintf_r+0x8d4>
 8004afa:	aa1e      	add	r2, sp, #120	; 0x78
 8004afc:	3339      	adds	r3, #57	; 0x39
 8004afe:	189b      	adds	r3, r3, r2
 8004b00:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004b02:	1a9b      	subs	r3, r3, r2
 8004b04:	222a      	movs	r2, #42	; 0x2a
 8004b06:	a91e      	add	r1, sp, #120	; 0x78
 8004b08:	1852      	adds	r2, r2, r1
 8004b0a:	18d3      	adds	r3, r2, r3
 8004b0c:	aa28      	add	r2, sp, #160	; 0xa0
 8004b0e:	1a9b      	subs	r3, r3, r2
 8004b10:	931e      	str	r3, [sp, #120]	; 0x78
 8004b12:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004b14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004b16:	4694      	mov	ip, r2
 8004b18:	4463      	add	r3, ip
 8004b1a:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004b1e:	2b01      	cmp	r3, #1
 8004b20:	dc02      	bgt.n	8004b28 <_vfprintf_r+0x8f8>
 8004b22:	9b08      	ldr	r3, [sp, #32]
 8004b24:	07db      	lsls	r3, r3, #31
 8004b26:	d504      	bpl.n	8004b32 <_vfprintf_r+0x902>
 8004b28:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004b2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b2c:	4694      	mov	ip, r2
 8004b2e:	4463      	add	r3, ip
 8004b30:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b32:	4b64      	ldr	r3, [pc, #400]	; (8004cc4 <_vfprintf_r+0xa94>)
 8004b34:	9a08      	ldr	r2, [sp, #32]
 8004b36:	401a      	ands	r2, r3
 8004b38:	0013      	movs	r3, r2
 8004b3a:	2280      	movs	r2, #128	; 0x80
 8004b3c:	0052      	lsls	r2, r2, #1
 8004b3e:	431a      	orrs	r2, r3
 8004b40:	2300      	movs	r3, #0
 8004b42:	001d      	movs	r5, r3
 8004b44:	921a      	str	r2, [sp, #104]	; 0x68
 8004b46:	9310      	str	r3, [sp, #64]	; 0x40
 8004b48:	9311      	str	r3, [sp, #68]	; 0x44
 8004b4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d100      	bne.n	8004b52 <_vfprintf_r+0x922>
 8004b50:	e29f      	b.n	8005092 <_vfprintf_r+0xe62>
 8004b52:	231b      	movs	r3, #27
 8004b54:	aa1e      	add	r2, sp, #120	; 0x78
 8004b56:	189b      	adds	r3, r3, r2
 8004b58:	222d      	movs	r2, #45	; 0x2d
 8004b5a:	701a      	strb	r2, [r3, #0]
 8004b5c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004b5e:	9308      	str	r3, [sp, #32]
 8004b60:	2300      	movs	r3, #0
 8004b62:	9319      	str	r3, [sp, #100]	; 0x64
 8004b64:	e515      	b.n	8004592 <_vfprintf_r+0x362>
 8004b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b68:	930c      	str	r3, [sp, #48]	; 0x30
 8004b6a:	e6e5      	b.n	8004938 <_vfprintf_r+0x708>
 8004b6c:	2306      	movs	r3, #6
 8004b6e:	e6ce      	b.n	800490e <_vfprintf_r+0x6de>
 8004b70:	930d      	str	r3, [sp, #52]	; 0x34
 8004b72:	2300      	movs	r3, #0
 8004b74:	e6f0      	b.n	8004958 <_vfprintf_r+0x728>
 8004b76:	7010      	strb	r0, [r2, #0]
 8004b78:	e75a      	b.n	8004a30 <_vfprintf_r+0x800>
 8004b7a:	7018      	strb	r0, [r3, #0]
 8004b7c:	3301      	adds	r3, #1
 8004b7e:	1aca      	subs	r2, r1, r3
 8004b80:	d5fb      	bpl.n	8004b7a <_vfprintf_r+0x94a>
 8004b82:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004b84:	2300      	movs	r3, #0
 8004b86:	3201      	adds	r2, #1
 8004b88:	db01      	blt.n	8004b8e <_vfprintf_r+0x95e>
 8004b8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004b8c:	3301      	adds	r3, #1
 8004b8e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004b90:	18d3      	adds	r3, r2, r3
 8004b92:	9323      	str	r3, [sp, #140]	; 0x8c
 8004b94:	e75a      	b.n	8004a4c <_vfprintf_r+0x81c>
 8004b96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004b98:	9920      	ldr	r1, [sp, #128]	; 0x80
 8004b9a:	2030      	movs	r0, #48	; 0x30
 8004b9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004b9e:	1851      	adds	r1, r2, r1
 8004ba0:	e7ed      	b.n	8004b7e <_vfprintf_r+0x94e>
 8004ba2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004ba4:	2b46      	cmp	r3, #70	; 0x46
 8004ba6:	d006      	beq.n	8004bb6 <_vfprintf_r+0x986>
 8004ba8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004baa:	2b45      	cmp	r3, #69	; 0x45
 8004bac:	d101      	bne.n	8004bb2 <_vfprintf_r+0x982>
 8004bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bb0:	1c5d      	adds	r5, r3, #1
 8004bb2:	2302      	movs	r3, #2
 8004bb4:	e001      	b.n	8004bba <_vfprintf_r+0x98a>
 8004bb6:	2303      	movs	r3, #3
 8004bb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004bba:	aa2a      	add	r2, sp, #168	; 0xa8
 8004bbc:	9204      	str	r2, [sp, #16]
 8004bbe:	aa27      	add	r2, sp, #156	; 0x9c
 8004bc0:	9203      	str	r2, [sp, #12]
 8004bc2:	aa26      	add	r2, sp, #152	; 0x98
 8004bc4:	9202      	str	r2, [sp, #8]
 8004bc6:	9300      	str	r3, [sp, #0]
 8004bc8:	0022      	movs	r2, r4
 8004bca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004bcc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004bce:	9501      	str	r5, [sp, #4]
 8004bd0:	f000 ff84 	bl	8005adc <_dtoa_r>
 8004bd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004bd6:	9009      	str	r0, [sp, #36]	; 0x24
 8004bd8:	2b47      	cmp	r3, #71	; 0x47
 8004bda:	d104      	bne.n	8004be6 <_vfprintf_r+0x9b6>
 8004bdc:	9b08      	ldr	r3, [sp, #32]
 8004bde:	07db      	lsls	r3, r3, #31
 8004be0:	d401      	bmi.n	8004be6 <_vfprintf_r+0x9b6>
 8004be2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8004be4:	e733      	b.n	8004a4e <_vfprintf_r+0x81e>
 8004be6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004be8:	195b      	adds	r3, r3, r5
 8004bea:	9311      	str	r3, [sp, #68]	; 0x44
 8004bec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004bee:	2b46      	cmp	r3, #70	; 0x46
 8004bf0:	d113      	bne.n	8004c1a <_vfprintf_r+0x9ea>
 8004bf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bf4:	781b      	ldrb	r3, [r3, #0]
 8004bf6:	2b30      	cmp	r3, #48	; 0x30
 8004bf8:	d10a      	bne.n	8004c10 <_vfprintf_r+0x9e0>
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	0020      	movs	r0, r4
 8004c00:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004c02:	f7fb fc1f 	bl	8000444 <__aeabi_dcmpeq>
 8004c06:	2800      	cmp	r0, #0
 8004c08:	d102      	bne.n	8004c10 <_vfprintf_r+0x9e0>
 8004c0a:	2301      	movs	r3, #1
 8004c0c:	1b5d      	subs	r5, r3, r5
 8004c0e:	9526      	str	r5, [sp, #152]	; 0x98
 8004c10:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004c12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004c14:	4694      	mov	ip, r2
 8004c16:	4463      	add	r3, ip
 8004c18:	9311      	str	r3, [sp, #68]	; 0x44
 8004c1a:	2200      	movs	r2, #0
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	0020      	movs	r0, r4
 8004c20:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004c22:	f7fb fc0f 	bl	8000444 <__aeabi_dcmpeq>
 8004c26:	2800      	cmp	r0, #0
 8004c28:	d001      	beq.n	8004c2e <_vfprintf_r+0x9fe>
 8004c2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004c2c:	932a      	str	r3, [sp, #168]	; 0xa8
 8004c2e:	2230      	movs	r2, #48	; 0x30
 8004c30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8004c32:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004c34:	4299      	cmp	r1, r3
 8004c36:	d9d4      	bls.n	8004be2 <_vfprintf_r+0x9b2>
 8004c38:	1c59      	adds	r1, r3, #1
 8004c3a:	912a      	str	r1, [sp, #168]	; 0xa8
 8004c3c:	701a      	strb	r2, [r3, #0]
 8004c3e:	e7f7      	b.n	8004c30 <_vfprintf_r+0xa00>
 8004c40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004c42:	2b46      	cmp	r3, #70	; 0x46
 8004c44:	d000      	beq.n	8004c48 <_vfprintf_r+0xa18>
 8004c46:	e713      	b.n	8004a70 <_vfprintf_r+0x840>
 8004c48:	2201      	movs	r2, #1
 8004c4a:	9b08      	ldr	r3, [sp, #32]
 8004c4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004c4e:	4013      	ands	r3, r2
 8004c50:	430b      	orrs	r3, r1
 8004c52:	2d00      	cmp	r5, #0
 8004c54:	dd1c      	ble.n	8004c90 <_vfprintf_r+0xa60>
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	d053      	beq.n	8004d02 <_vfprintf_r+0xad2>
 8004c5a:	000a      	movs	r2, r1
 8004c5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004c5e:	18eb      	adds	r3, r5, r3
 8004c60:	18d3      	adds	r3, r2, r3
 8004c62:	930b      	str	r3, [sp, #44]	; 0x2c
 8004c64:	2366      	movs	r3, #102	; 0x66
 8004c66:	930f      	str	r3, [sp, #60]	; 0x3c
 8004c68:	e03b      	b.n	8004ce2 <_vfprintf_r+0xab2>
 8004c6a:	781c      	ldrb	r4, [r3, #0]
 8004c6c:	3301      	adds	r3, #1
 8004c6e:	7014      	strb	r4, [r2, #0]
 8004c70:	3201      	adds	r2, #1
 8004c72:	e73c      	b.n	8004aee <_vfprintf_r+0x8be>
 8004c74:	222a      	movs	r2, #42	; 0x2a
 8004c76:	ab1e      	add	r3, sp, #120	; 0x78
 8004c78:	18d2      	adds	r2, r2, r3
 8004c7a:	2800      	cmp	r0, #0
 8004c7c:	d104      	bne.n	8004c88 <_vfprintf_r+0xa58>
 8004c7e:	2330      	movs	r3, #48	; 0x30
 8004c80:	222b      	movs	r2, #43	; 0x2b
 8004c82:	708b      	strb	r3, [r1, #2]
 8004c84:	ab1e      	add	r3, sp, #120	; 0x78
 8004c86:	18d2      	adds	r2, r2, r3
 8004c88:	3430      	adds	r4, #48	; 0x30
 8004c8a:	1c53      	adds	r3, r2, #1
 8004c8c:	7014      	strb	r4, [r2, #0]
 8004c8e:	e73d      	b.n	8004b0c <_vfprintf_r+0x8dc>
 8004c90:	2b00      	cmp	r3, #0
 8004c92:	d038      	beq.n	8004d06 <_vfprintf_r+0xad6>
 8004c94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004c96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004c98:	3301      	adds	r3, #1
 8004c9a:	e7e1      	b.n	8004c60 <_vfprintf_r+0xa30>
 8004c9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004c9e:	429d      	cmp	r5, r3
 8004ca0:	db12      	blt.n	8004cc8 <_vfprintf_r+0xa98>
 8004ca2:	9b08      	ldr	r3, [sp, #32]
 8004ca4:	07db      	lsls	r3, r3, #31
 8004ca6:	d532      	bpl.n	8004d0e <_vfprintf_r+0xade>
 8004ca8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004caa:	18eb      	adds	r3, r5, r3
 8004cac:	930b      	str	r3, [sp, #44]	; 0x2c
 8004cae:	2367      	movs	r3, #103	; 0x67
 8004cb0:	e7d9      	b.n	8004c66 <_vfprintf_r+0xa36>
 8004cb2:	46c0      	nop			; (mov r8, r8)
 8004cb4:	080090e0 	.word	0x080090e0
 8004cb8:	080090f1 	.word	0x080090f1
 8004cbc:	40300000 	.word	0x40300000
 8004cc0:	3fe00000 	.word	0x3fe00000
 8004cc4:	fffffbff 	.word	0xfffffbff
 8004cc8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004cca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004ccc:	4694      	mov	ip, r2
 8004cce:	4463      	add	r3, ip
 8004cd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8004cd2:	2367      	movs	r3, #103	; 0x67
 8004cd4:	930f      	str	r3, [sp, #60]	; 0x3c
 8004cd6:	2d00      	cmp	r5, #0
 8004cd8:	dc03      	bgt.n	8004ce2 <_vfprintf_r+0xab2>
 8004cda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004cdc:	1b58      	subs	r0, r3, r5
 8004cde:	1c43      	adds	r3, r0, #1
 8004ce0:	930b      	str	r3, [sp, #44]	; 0x2c
 8004ce2:	2380      	movs	r3, #128	; 0x80
 8004ce4:	9a08      	ldr	r2, [sp, #32]
 8004ce6:	00db      	lsls	r3, r3, #3
 8004ce8:	401a      	ands	r2, r3
 8004cea:	9211      	str	r2, [sp, #68]	; 0x44
 8004cec:	2200      	movs	r2, #0
 8004cee:	9210      	str	r2, [sp, #64]	; 0x40
 8004cf0:	9a08      	ldr	r2, [sp, #32]
 8004cf2:	421a      	tst	r2, r3
 8004cf4:	d100      	bne.n	8004cf8 <_vfprintf_r+0xac8>
 8004cf6:	e728      	b.n	8004b4a <_vfprintf_r+0x91a>
 8004cf8:	2d00      	cmp	r5, #0
 8004cfa:	dc28      	bgt.n	8004d4e <_vfprintf_r+0xb1e>
 8004cfc:	2300      	movs	r3, #0
 8004cfe:	9311      	str	r3, [sp, #68]	; 0x44
 8004d00:	e723      	b.n	8004b4a <_vfprintf_r+0x91a>
 8004d02:	950b      	str	r5, [sp, #44]	; 0x2c
 8004d04:	e7ae      	b.n	8004c64 <_vfprintf_r+0xa34>
 8004d06:	2366      	movs	r3, #102	; 0x66
 8004d08:	920b      	str	r2, [sp, #44]	; 0x2c
 8004d0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8004d0c:	e7e9      	b.n	8004ce2 <_vfprintf_r+0xab2>
 8004d0e:	950b      	str	r5, [sp, #44]	; 0x2c
 8004d10:	e7cd      	b.n	8004cae <_vfprintf_r+0xa7e>
 8004d12:	42ab      	cmp	r3, r5
 8004d14:	da0e      	bge.n	8004d34 <_vfprintf_r+0xb04>
 8004d16:	1aed      	subs	r5, r5, r3
 8004d18:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d1a:	785b      	ldrb	r3, [r3, #1]
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d012      	beq.n	8004d46 <_vfprintf_r+0xb16>
 8004d20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d22:	3301      	adds	r3, #1
 8004d24:	9311      	str	r3, [sp, #68]	; 0x44
 8004d26:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d28:	3301      	adds	r3, #1
 8004d2a:	9312      	str	r3, [sp, #72]	; 0x48
 8004d2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d2e:	781b      	ldrb	r3, [r3, #0]
 8004d30:	2bff      	cmp	r3, #255	; 0xff
 8004d32:	d1ee      	bne.n	8004d12 <_vfprintf_r+0xae2>
 8004d34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004d36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d38:	189b      	adds	r3, r3, r2
 8004d3a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004d3c:	4353      	muls	r3, r2
 8004d3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004d40:	189b      	adds	r3, r3, r2
 8004d42:	930b      	str	r3, [sp, #44]	; 0x2c
 8004d44:	e701      	b.n	8004b4a <_vfprintf_r+0x91a>
 8004d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004d48:	3301      	adds	r3, #1
 8004d4a:	9310      	str	r3, [sp, #64]	; 0x40
 8004d4c:	e7ee      	b.n	8004d2c <_vfprintf_r+0xafc>
 8004d4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004d50:	9311      	str	r3, [sp, #68]	; 0x44
 8004d52:	e7eb      	b.n	8004d2c <_vfprintf_r+0xafc>
 8004d54:	0022      	movs	r2, r4
 8004d56:	ca08      	ldmia	r2!, {r3}
 8004d58:	920e      	str	r2, [sp, #56]	; 0x38
 8004d5a:	9a08      	ldr	r2, [sp, #32]
 8004d5c:	0692      	lsls	r2, r2, #26
 8004d5e:	d508      	bpl.n	8004d72 <_vfprintf_r+0xb42>
 8004d60:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d62:	601a      	str	r2, [r3, #0]
 8004d64:	17d2      	asrs	r2, r2, #31
 8004d66:	605a      	str	r2, [r3, #4]
 8004d68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004d6a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8004d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8004d6e:	f7ff fad3 	bl	8004318 <_vfprintf_r+0xe8>
 8004d72:	9a08      	ldr	r2, [sp, #32]
 8004d74:	06d2      	lsls	r2, r2, #27
 8004d76:	d502      	bpl.n	8004d7e <_vfprintf_r+0xb4e>
 8004d78:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d7a:	601a      	str	r2, [r3, #0]
 8004d7c:	e7f4      	b.n	8004d68 <_vfprintf_r+0xb38>
 8004d7e:	9a08      	ldr	r2, [sp, #32]
 8004d80:	0652      	lsls	r2, r2, #25
 8004d82:	d502      	bpl.n	8004d8a <_vfprintf_r+0xb5a>
 8004d84:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d86:	801a      	strh	r2, [r3, #0]
 8004d88:	e7ee      	b.n	8004d68 <_vfprintf_r+0xb38>
 8004d8a:	9a08      	ldr	r2, [sp, #32]
 8004d8c:	0592      	lsls	r2, r2, #22
 8004d8e:	d5f3      	bpl.n	8004d78 <_vfprintf_r+0xb48>
 8004d90:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d92:	701a      	strb	r2, [r3, #0]
 8004d94:	e7e8      	b.n	8004d68 <_vfprintf_r+0xb38>
 8004d96:	2310      	movs	r3, #16
 8004d98:	9a08      	ldr	r2, [sp, #32]
 8004d9a:	431a      	orrs	r2, r3
 8004d9c:	9208      	str	r2, [sp, #32]
 8004d9e:	2320      	movs	r3, #32
 8004da0:	9908      	ldr	r1, [sp, #32]
 8004da2:	9a08      	ldr	r2, [sp, #32]
 8004da4:	4019      	ands	r1, r3
 8004da6:	421a      	tst	r2, r3
 8004da8:	d011      	beq.n	8004dce <_vfprintf_r+0xb9e>
 8004daa:	3b19      	subs	r3, #25
 8004dac:	3407      	adds	r4, #7
 8004dae:	439c      	bics	r4, r3
 8004db0:	0022      	movs	r2, r4
 8004db2:	ca18      	ldmia	r2!, {r3, r4}
 8004db4:	9306      	str	r3, [sp, #24]
 8004db6:	9407      	str	r4, [sp, #28]
 8004db8:	920e      	str	r2, [sp, #56]	; 0x38
 8004dba:	4bcd      	ldr	r3, [pc, #820]	; (80050f0 <_vfprintf_r+0xec0>)
 8004dbc:	9a08      	ldr	r2, [sp, #32]
 8004dbe:	401a      	ands	r2, r3
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	9208      	str	r2, [sp, #32]
 8004dc4:	221b      	movs	r2, #27
 8004dc6:	a91e      	add	r1, sp, #120	; 0x78
 8004dc8:	1852      	adds	r2, r2, r1
 8004dca:	2100      	movs	r1, #0
 8004dcc:	e4de      	b.n	800478c <_vfprintf_r+0x55c>
 8004dce:	1d23      	adds	r3, r4, #4
 8004dd0:	930e      	str	r3, [sp, #56]	; 0x38
 8004dd2:	2310      	movs	r3, #16
 8004dd4:	9a08      	ldr	r2, [sp, #32]
 8004dd6:	9808      	ldr	r0, [sp, #32]
 8004dd8:	401a      	ands	r2, r3
 8004dda:	4218      	tst	r0, r3
 8004ddc:	d003      	beq.n	8004de6 <_vfprintf_r+0xbb6>
 8004dde:	6823      	ldr	r3, [r4, #0]
 8004de0:	9306      	str	r3, [sp, #24]
 8004de2:	9107      	str	r1, [sp, #28]
 8004de4:	e7e9      	b.n	8004dba <_vfprintf_r+0xb8a>
 8004de6:	2340      	movs	r3, #64	; 0x40
 8004de8:	9908      	ldr	r1, [sp, #32]
 8004dea:	9808      	ldr	r0, [sp, #32]
 8004dec:	4019      	ands	r1, r3
 8004dee:	4218      	tst	r0, r3
 8004df0:	d004      	beq.n	8004dfc <_vfprintf_r+0xbcc>
 8004df2:	6823      	ldr	r3, [r4, #0]
 8004df4:	b29b      	uxth	r3, r3
 8004df6:	9306      	str	r3, [sp, #24]
 8004df8:	9207      	str	r2, [sp, #28]
 8004dfa:	e7de      	b.n	8004dba <_vfprintf_r+0xb8a>
 8004dfc:	2380      	movs	r3, #128	; 0x80
 8004dfe:	9a08      	ldr	r2, [sp, #32]
 8004e00:	9808      	ldr	r0, [sp, #32]
 8004e02:	009b      	lsls	r3, r3, #2
 8004e04:	401a      	ands	r2, r3
 8004e06:	4218      	tst	r0, r3
 8004e08:	d002      	beq.n	8004e10 <_vfprintf_r+0xbe0>
 8004e0a:	6823      	ldr	r3, [r4, #0]
 8004e0c:	b2db      	uxtb	r3, r3
 8004e0e:	e7e7      	b.n	8004de0 <_vfprintf_r+0xbb0>
 8004e10:	6823      	ldr	r3, [r4, #0]
 8004e12:	e7f0      	b.n	8004df6 <_vfprintf_r+0xbc6>
 8004e14:	0023      	movs	r3, r4
 8004e16:	cb04      	ldmia	r3!, {r2}
 8004e18:	49b6      	ldr	r1, [pc, #728]	; (80050f4 <_vfprintf_r+0xec4>)
 8004e1a:	930e      	str	r3, [sp, #56]	; 0x38
 8004e1c:	2300      	movs	r3, #0
 8004e1e:	9206      	str	r2, [sp, #24]
 8004e20:	9a08      	ldr	r2, [sp, #32]
 8004e22:	9307      	str	r3, [sp, #28]
 8004e24:	3302      	adds	r3, #2
 8004e26:	431a      	orrs	r2, r3
 8004e28:	9208      	str	r2, [sp, #32]
 8004e2a:	aa25      	add	r2, sp, #148	; 0x94
 8004e2c:	8011      	strh	r1, [r2, #0]
 8004e2e:	4ab2      	ldr	r2, [pc, #712]	; (80050f8 <_vfprintf_r+0xec8>)
 8004e30:	921f      	str	r2, [sp, #124]	; 0x7c
 8004e32:	2278      	movs	r2, #120	; 0x78
 8004e34:	920f      	str	r2, [sp, #60]	; 0x3c
 8004e36:	e7c5      	b.n	8004dc4 <_vfprintf_r+0xb94>
 8004e38:	0023      	movs	r3, r4
 8004e3a:	cb04      	ldmia	r3!, {r2}
 8004e3c:	2400      	movs	r4, #0
 8004e3e:	930e      	str	r3, [sp, #56]	; 0x38
 8004e40:	231b      	movs	r3, #27
 8004e42:	9209      	str	r2, [sp, #36]	; 0x24
 8004e44:	aa1e      	add	r2, sp, #120	; 0x78
 8004e46:	189b      	adds	r3, r3, r2
 8004e48:	701c      	strb	r4, [r3, #0]
 8004e4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e4c:	3301      	adds	r3, #1
 8004e4e:	d00e      	beq.n	8004e6e <_vfprintf_r+0xc3e>
 8004e50:	0021      	movs	r1, r4
 8004e52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004e54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e56:	f002 f92b 	bl	80070b0 <memchr>
 8004e5a:	900c      	str	r0, [sp, #48]	; 0x30
 8004e5c:	42a0      	cmp	r0, r4
 8004e5e:	d100      	bne.n	8004e62 <_vfprintf_r+0xc32>
 8004e60:	e11b      	b.n	800509a <_vfprintf_r+0xe6a>
 8004e62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004e64:	1a83      	subs	r3, r0, r2
 8004e66:	930b      	str	r3, [sp, #44]	; 0x2c
 8004e68:	0023      	movs	r3, r4
 8004e6a:	940c      	str	r4, [sp, #48]	; 0x30
 8004e6c:	e4f8      	b.n	8004860 <_vfprintf_r+0x630>
 8004e6e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e70:	f7fb f946 	bl	8000100 <strlen>
 8004e74:	900b      	str	r0, [sp, #44]	; 0x2c
 8004e76:	e7f7      	b.n	8004e68 <_vfprintf_r+0xc38>
 8004e78:	2310      	movs	r3, #16
 8004e7a:	9a08      	ldr	r2, [sp, #32]
 8004e7c:	431a      	orrs	r2, r3
 8004e7e:	9208      	str	r2, [sp, #32]
 8004e80:	2320      	movs	r3, #32
 8004e82:	9908      	ldr	r1, [sp, #32]
 8004e84:	9a08      	ldr	r2, [sp, #32]
 8004e86:	4019      	ands	r1, r3
 8004e88:	421a      	tst	r2, r3
 8004e8a:	d009      	beq.n	8004ea0 <_vfprintf_r+0xc70>
 8004e8c:	3b19      	subs	r3, #25
 8004e8e:	3407      	adds	r4, #7
 8004e90:	439c      	bics	r4, r3
 8004e92:	0022      	movs	r2, r4
 8004e94:	ca18      	ldmia	r2!, {r3, r4}
 8004e96:	9306      	str	r3, [sp, #24]
 8004e98:	9407      	str	r4, [sp, #28]
 8004e9a:	920e      	str	r2, [sp, #56]	; 0x38
 8004e9c:	2301      	movs	r3, #1
 8004e9e:	e791      	b.n	8004dc4 <_vfprintf_r+0xb94>
 8004ea0:	1d23      	adds	r3, r4, #4
 8004ea2:	930e      	str	r3, [sp, #56]	; 0x38
 8004ea4:	2310      	movs	r3, #16
 8004ea6:	9a08      	ldr	r2, [sp, #32]
 8004ea8:	9808      	ldr	r0, [sp, #32]
 8004eaa:	401a      	ands	r2, r3
 8004eac:	4218      	tst	r0, r3
 8004eae:	d003      	beq.n	8004eb8 <_vfprintf_r+0xc88>
 8004eb0:	6823      	ldr	r3, [r4, #0]
 8004eb2:	9306      	str	r3, [sp, #24]
 8004eb4:	9107      	str	r1, [sp, #28]
 8004eb6:	e7f1      	b.n	8004e9c <_vfprintf_r+0xc6c>
 8004eb8:	2340      	movs	r3, #64	; 0x40
 8004eba:	9908      	ldr	r1, [sp, #32]
 8004ebc:	9808      	ldr	r0, [sp, #32]
 8004ebe:	4019      	ands	r1, r3
 8004ec0:	4218      	tst	r0, r3
 8004ec2:	d004      	beq.n	8004ece <_vfprintf_r+0xc9e>
 8004ec4:	6823      	ldr	r3, [r4, #0]
 8004ec6:	b29b      	uxth	r3, r3
 8004ec8:	9306      	str	r3, [sp, #24]
 8004eca:	9207      	str	r2, [sp, #28]
 8004ecc:	e7e6      	b.n	8004e9c <_vfprintf_r+0xc6c>
 8004ece:	2380      	movs	r3, #128	; 0x80
 8004ed0:	9a08      	ldr	r2, [sp, #32]
 8004ed2:	9808      	ldr	r0, [sp, #32]
 8004ed4:	009b      	lsls	r3, r3, #2
 8004ed6:	401a      	ands	r2, r3
 8004ed8:	4218      	tst	r0, r3
 8004eda:	d002      	beq.n	8004ee2 <_vfprintf_r+0xcb2>
 8004edc:	6823      	ldr	r3, [r4, #0]
 8004ede:	b2db      	uxtb	r3, r3
 8004ee0:	e7e7      	b.n	8004eb2 <_vfprintf_r+0xc82>
 8004ee2:	6823      	ldr	r3, [r4, #0]
 8004ee4:	e7f0      	b.n	8004ec8 <_vfprintf_r+0xc98>
 8004ee6:	4b85      	ldr	r3, [pc, #532]	; (80050fc <_vfprintf_r+0xecc>)
 8004ee8:	931f      	str	r3, [sp, #124]	; 0x7c
 8004eea:	2320      	movs	r3, #32
 8004eec:	9908      	ldr	r1, [sp, #32]
 8004eee:	9a08      	ldr	r2, [sp, #32]
 8004ef0:	4019      	ands	r1, r3
 8004ef2:	421a      	tst	r2, r3
 8004ef4:	d01f      	beq.n	8004f36 <_vfprintf_r+0xd06>
 8004ef6:	3b19      	subs	r3, #25
 8004ef8:	3407      	adds	r4, #7
 8004efa:	439c      	bics	r4, r3
 8004efc:	0022      	movs	r2, r4
 8004efe:	ca18      	ldmia	r2!, {r3, r4}
 8004f00:	9306      	str	r3, [sp, #24]
 8004f02:	9407      	str	r4, [sp, #28]
 8004f04:	920e      	str	r2, [sp, #56]	; 0x38
 8004f06:	9b08      	ldr	r3, [sp, #32]
 8004f08:	07db      	lsls	r3, r3, #31
 8004f0a:	d50c      	bpl.n	8004f26 <_vfprintf_r+0xcf6>
 8004f0c:	9b06      	ldr	r3, [sp, #24]
 8004f0e:	9a07      	ldr	r2, [sp, #28]
 8004f10:	4313      	orrs	r3, r2
 8004f12:	d008      	beq.n	8004f26 <_vfprintf_r+0xcf6>
 8004f14:	2230      	movs	r2, #48	; 0x30
 8004f16:	ab25      	add	r3, sp, #148	; 0x94
 8004f18:	701a      	strb	r2, [r3, #0]
 8004f1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004f1c:	705a      	strb	r2, [r3, #1]
 8004f1e:	2302      	movs	r3, #2
 8004f20:	9a08      	ldr	r2, [sp, #32]
 8004f22:	431a      	orrs	r2, r3
 8004f24:	9208      	str	r2, [sp, #32]
 8004f26:	4b72      	ldr	r3, [pc, #456]	; (80050f0 <_vfprintf_r+0xec0>)
 8004f28:	9a08      	ldr	r2, [sp, #32]
 8004f2a:	401a      	ands	r2, r3
 8004f2c:	9208      	str	r2, [sp, #32]
 8004f2e:	2302      	movs	r3, #2
 8004f30:	e748      	b.n	8004dc4 <_vfprintf_r+0xb94>
 8004f32:	4b71      	ldr	r3, [pc, #452]	; (80050f8 <_vfprintf_r+0xec8>)
 8004f34:	e7d8      	b.n	8004ee8 <_vfprintf_r+0xcb8>
 8004f36:	1d23      	adds	r3, r4, #4
 8004f38:	930e      	str	r3, [sp, #56]	; 0x38
 8004f3a:	2310      	movs	r3, #16
 8004f3c:	9a08      	ldr	r2, [sp, #32]
 8004f3e:	9808      	ldr	r0, [sp, #32]
 8004f40:	401a      	ands	r2, r3
 8004f42:	4218      	tst	r0, r3
 8004f44:	d003      	beq.n	8004f4e <_vfprintf_r+0xd1e>
 8004f46:	6823      	ldr	r3, [r4, #0]
 8004f48:	9306      	str	r3, [sp, #24]
 8004f4a:	9107      	str	r1, [sp, #28]
 8004f4c:	e7db      	b.n	8004f06 <_vfprintf_r+0xcd6>
 8004f4e:	2340      	movs	r3, #64	; 0x40
 8004f50:	9908      	ldr	r1, [sp, #32]
 8004f52:	9808      	ldr	r0, [sp, #32]
 8004f54:	4019      	ands	r1, r3
 8004f56:	4218      	tst	r0, r3
 8004f58:	d004      	beq.n	8004f64 <_vfprintf_r+0xd34>
 8004f5a:	6823      	ldr	r3, [r4, #0]
 8004f5c:	b29b      	uxth	r3, r3
 8004f5e:	9306      	str	r3, [sp, #24]
 8004f60:	9207      	str	r2, [sp, #28]
 8004f62:	e7d0      	b.n	8004f06 <_vfprintf_r+0xcd6>
 8004f64:	2380      	movs	r3, #128	; 0x80
 8004f66:	9a08      	ldr	r2, [sp, #32]
 8004f68:	9808      	ldr	r0, [sp, #32]
 8004f6a:	009b      	lsls	r3, r3, #2
 8004f6c:	401a      	ands	r2, r3
 8004f6e:	4218      	tst	r0, r3
 8004f70:	d002      	beq.n	8004f78 <_vfprintf_r+0xd48>
 8004f72:	6823      	ldr	r3, [r4, #0]
 8004f74:	b2db      	uxtb	r3, r3
 8004f76:	e7e7      	b.n	8004f48 <_vfprintf_r+0xd18>
 8004f78:	6823      	ldr	r3, [r4, #0]
 8004f7a:	e7f0      	b.n	8004f5e <_vfprintf_r+0xd2e>
 8004f7c:	9b07      	ldr	r3, [sp, #28]
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d10b      	bne.n	8004f9a <_vfprintf_r+0xd6a>
 8004f82:	9b06      	ldr	r3, [sp, #24]
 8004f84:	2b09      	cmp	r3, #9
 8004f86:	d808      	bhi.n	8004f9a <_vfprintf_r+0xd6a>
 8004f88:	20e7      	movs	r0, #231	; 0xe7
 8004f8a:	ab1e      	add	r3, sp, #120	; 0x78
 8004f8c:	18c0      	adds	r0, r0, r3
 8004f8e:	9b06      	ldr	r3, [sp, #24]
 8004f90:	3330      	adds	r3, #48	; 0x30
 8004f92:	7003      	strb	r3, [r0, #0]
 8004f94:	9009      	str	r0, [sp, #36]	; 0x24
 8004f96:	f000 fc47 	bl	8005828 <_vfprintf_r+0x15f8>
 8004f9a:	2480      	movs	r4, #128	; 0x80
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	00e4      	lsls	r4, r4, #3
 8004fa0:	930d      	str	r3, [sp, #52]	; 0x34
 8004fa2:	a858      	add	r0, sp, #352	; 0x160
 8004fa4:	402c      	ands	r4, r5
 8004fa6:	1e43      	subs	r3, r0, #1
 8004fa8:	9309      	str	r3, [sp, #36]	; 0x24
 8004faa:	220a      	movs	r2, #10
 8004fac:	9806      	ldr	r0, [sp, #24]
 8004fae:	9907      	ldr	r1, [sp, #28]
 8004fb0:	2300      	movs	r3, #0
 8004fb2:	f7fb fa75 	bl	80004a0 <__aeabi_uldivmod>
 8004fb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fb8:	3230      	adds	r2, #48	; 0x30
 8004fba:	701a      	strb	r2, [r3, #0]
 8004fbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004fbe:	3301      	adds	r3, #1
 8004fc0:	930d      	str	r3, [sp, #52]	; 0x34
 8004fc2:	2c00      	cmp	r4, #0
 8004fc4:	d01d      	beq.n	8005002 <_vfprintf_r+0xdd2>
 8004fc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004fc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004fca:	781b      	ldrb	r3, [r3, #0]
 8004fcc:	429a      	cmp	r2, r3
 8004fce:	d118      	bne.n	8005002 <_vfprintf_r+0xdd2>
 8004fd0:	2aff      	cmp	r2, #255	; 0xff
 8004fd2:	d016      	beq.n	8005002 <_vfprintf_r+0xdd2>
 8004fd4:	9b07      	ldr	r3, [sp, #28]
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d102      	bne.n	8004fe0 <_vfprintf_r+0xdb0>
 8004fda:	9b06      	ldr	r3, [sp, #24]
 8004fdc:	2b09      	cmp	r3, #9
 8004fde:	d910      	bls.n	8005002 <_vfprintf_r+0xdd2>
 8004fe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fe2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004fe4:	991d      	ldr	r1, [sp, #116]	; 0x74
 8004fe6:	1a9b      	subs	r3, r3, r2
 8004fe8:	0018      	movs	r0, r3
 8004fea:	9309      	str	r3, [sp, #36]	; 0x24
 8004fec:	f002 fc62 	bl	80078b4 <strncpy>
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004ff4:	920d      	str	r2, [sp, #52]	; 0x34
 8004ff6:	785b      	ldrb	r3, [r3, #1]
 8004ff8:	1e5a      	subs	r2, r3, #1
 8004ffa:	4193      	sbcs	r3, r2
 8004ffc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ffe:	18d3      	adds	r3, r2, r3
 8005000:	9312      	str	r3, [sp, #72]	; 0x48
 8005002:	2300      	movs	r3, #0
 8005004:	9806      	ldr	r0, [sp, #24]
 8005006:	9907      	ldr	r1, [sp, #28]
 8005008:	220a      	movs	r2, #10
 800500a:	f7fb fa49 	bl	80004a0 <__aeabi_uldivmod>
 800500e:	9b07      	ldr	r3, [sp, #28]
 8005010:	2b00      	cmp	r3, #0
 8005012:	d104      	bne.n	800501e <_vfprintf_r+0xdee>
 8005014:	9b06      	ldr	r3, [sp, #24]
 8005016:	2b09      	cmp	r3, #9
 8005018:	d801      	bhi.n	800501e <_vfprintf_r+0xdee>
 800501a:	f000 fc05 	bl	8005828 <_vfprintf_r+0x15f8>
 800501e:	9006      	str	r0, [sp, #24]
 8005020:	9107      	str	r1, [sp, #28]
 8005022:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005024:	e7bf      	b.n	8004fa6 <_vfprintf_r+0xd76>
 8005026:	200f      	movs	r0, #15
 8005028:	ab58      	add	r3, sp, #352	; 0x160
 800502a:	9309      	str	r3, [sp, #36]	; 0x24
 800502c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800502e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8005030:	3b01      	subs	r3, #1
 8005032:	9309      	str	r3, [sp, #36]	; 0x24
 8005034:	9b06      	ldr	r3, [sp, #24]
 8005036:	4003      	ands	r3, r0
 8005038:	5cd3      	ldrb	r3, [r2, r3]
 800503a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800503c:	7013      	strb	r3, [r2, #0]
 800503e:	9b07      	ldr	r3, [sp, #28]
 8005040:	0719      	lsls	r1, r3, #28
 8005042:	9b06      	ldr	r3, [sp, #24]
 8005044:	091a      	lsrs	r2, r3, #4
 8005046:	9b07      	ldr	r3, [sp, #28]
 8005048:	4311      	orrs	r1, r2
 800504a:	091b      	lsrs	r3, r3, #4
 800504c:	9307      	str	r3, [sp, #28]
 800504e:	000b      	movs	r3, r1
 8005050:	9a07      	ldr	r2, [sp, #28]
 8005052:	9106      	str	r1, [sp, #24]
 8005054:	4313      	orrs	r3, r2
 8005056:	d1e9      	bne.n	800502c <_vfprintf_r+0xdfc>
 8005058:	e3e6      	b.n	8005828 <_vfprintf_r+0x15f8>
 800505a:	aa58      	add	r2, sp, #352	; 0x160
 800505c:	9209      	str	r2, [sp, #36]	; 0x24
 800505e:	2b00      	cmp	r3, #0
 8005060:	d000      	beq.n	8005064 <_vfprintf_r+0xe34>
 8005062:	e3e1      	b.n	8005828 <_vfprintf_r+0x15f8>
 8005064:	9b08      	ldr	r3, [sp, #32]
 8005066:	07db      	lsls	r3, r3, #31
 8005068:	d400      	bmi.n	800506c <_vfprintf_r+0xe3c>
 800506a:	e3dd      	b.n	8005828 <_vfprintf_r+0x15f8>
 800506c:	20e7      	movs	r0, #231	; 0xe7
 800506e:	ab1e      	add	r3, sp, #120	; 0x78
 8005070:	18c0      	adds	r0, r0, r3
 8005072:	2330      	movs	r3, #48	; 0x30
 8005074:	e78d      	b.n	8004f92 <_vfprintf_r+0xd62>
 8005076:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005078:	2b00      	cmp	r3, #0
 800507a:	d100      	bne.n	800507e <_vfprintf_r+0xe4e>
 800507c:	e392      	b.n	80057a4 <_vfprintf_r+0x1574>
 800507e:	221b      	movs	r2, #27
 8005080:	a83f      	add	r0, sp, #252	; 0xfc
 8005082:	7003      	strb	r3, [r0, #0]
 8005084:	2300      	movs	r3, #0
 8005086:	a91e      	add	r1, sp, #120	; 0x78
 8005088:	1852      	adds	r2, r2, r1
 800508a:	7013      	strb	r3, [r2, #0]
 800508c:	940e      	str	r4, [sp, #56]	; 0x38
 800508e:	f7ff fa77 	bl	8004580 <_vfprintf_r+0x350>
 8005092:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005094:	9308      	str	r3, [sp, #32]
 8005096:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005098:	e563      	b.n	8004b62 <_vfprintf_r+0x932>
 800509a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800509c:	f7ff fbe0 	bl	8004860 <_vfprintf_r+0x630>
 80050a0:	2010      	movs	r0, #16
 80050a2:	1812      	adds	r2, r2, r0
 80050a4:	6078      	str	r0, [r7, #4]
 80050a6:	922e      	str	r2, [sp, #184]	; 0xb8
 80050a8:	932d      	str	r3, [sp, #180]	; 0xb4
 80050aa:	2b07      	cmp	r3, #7
 80050ac:	dd08      	ble.n	80050c0 <_vfprintf_r+0xe90>
 80050ae:	0031      	movs	r1, r6
 80050b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80050b2:	aa2c      	add	r2, sp, #176	; 0xb0
 80050b4:	f002 fc1e 	bl	80078f4 <__sprint_r>
 80050b8:	2800      	cmp	r0, #0
 80050ba:	d000      	beq.n	80050be <_vfprintf_r+0xe8e>
 80050bc:	e351      	b.n	8005762 <_vfprintf_r+0x1532>
 80050be:	a92f      	add	r1, sp, #188	; 0xbc
 80050c0:	000f      	movs	r7, r1
 80050c2:	3c10      	subs	r4, #16
 80050c4:	f7ff fa8a 	bl	80045dc <_vfprintf_r+0x3ac>
 80050c8:	2010      	movs	r0, #16
 80050ca:	1812      	adds	r2, r2, r0
 80050cc:	6078      	str	r0, [r7, #4]
 80050ce:	922e      	str	r2, [sp, #184]	; 0xb8
 80050d0:	932d      	str	r3, [sp, #180]	; 0xb4
 80050d2:	2b07      	cmp	r3, #7
 80050d4:	dd08      	ble.n	80050e8 <_vfprintf_r+0xeb8>
 80050d6:	0031      	movs	r1, r6
 80050d8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80050da:	aa2c      	add	r2, sp, #176	; 0xb0
 80050dc:	f002 fc0a 	bl	80078f4 <__sprint_r>
 80050e0:	2800      	cmp	r0, #0
 80050e2:	d000      	beq.n	80050e6 <_vfprintf_r+0xeb6>
 80050e4:	e33d      	b.n	8005762 <_vfprintf_r+0x1532>
 80050e6:	a92f      	add	r1, sp, #188	; 0xbc
 80050e8:	000f      	movs	r7, r1
 80050ea:	3c10      	subs	r4, #16
 80050ec:	f7ff fad6 	bl	800469c <_vfprintf_r+0x46c>
 80050f0:	fffffbff 	.word	0xfffffbff
 80050f4:	00007830 	.word	0x00007830
 80050f8:	080090e0 	.word	0x080090e0
 80050fc:	080090f1 	.word	0x080090f1
 8005100:	2010      	movs	r0, #16
 8005102:	1812      	adds	r2, r2, r0
 8005104:	6078      	str	r0, [r7, #4]
 8005106:	922e      	str	r2, [sp, #184]	; 0xb8
 8005108:	932d      	str	r3, [sp, #180]	; 0xb4
 800510a:	2b07      	cmp	r3, #7
 800510c:	dd08      	ble.n	8005120 <_vfprintf_r+0xef0>
 800510e:	0031      	movs	r1, r6
 8005110:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005112:	aa2c      	add	r2, sp, #176	; 0xb0
 8005114:	f002 fbee 	bl	80078f4 <__sprint_r>
 8005118:	2800      	cmp	r0, #0
 800511a:	d000      	beq.n	800511e <_vfprintf_r+0xeee>
 800511c:	e321      	b.n	8005762 <_vfprintf_r+0x1532>
 800511e:	a92f      	add	r1, sp, #188	; 0xbc
 8005120:	000f      	movs	r7, r1
 8005122:	3c10      	subs	r4, #16
 8005124:	f7ff fadc 	bl	80046e0 <_vfprintf_r+0x4b0>
 8005128:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800512a:	2b65      	cmp	r3, #101	; 0x65
 800512c:	dc00      	bgt.n	8005130 <_vfprintf_r+0xf00>
 800512e:	e25c      	b.n	80055ea <_vfprintf_r+0x13ba>
 8005130:	9814      	ldr	r0, [sp, #80]	; 0x50
 8005132:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005134:	2200      	movs	r2, #0
 8005136:	2300      	movs	r3, #0
 8005138:	f7fb f984 	bl	8000444 <__aeabi_dcmpeq>
 800513c:	2800      	cmp	r0, #0
 800513e:	d07e      	beq.n	800523e <_vfprintf_r+0x100e>
 8005140:	4b81      	ldr	r3, [pc, #516]	; (8005348 <_vfprintf_r+0x1118>)
 8005142:	603b      	str	r3, [r7, #0]
 8005144:	2301      	movs	r3, #1
 8005146:	607b      	str	r3, [r7, #4]
 8005148:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800514a:	3708      	adds	r7, #8
 800514c:	3301      	adds	r3, #1
 800514e:	932e      	str	r3, [sp, #184]	; 0xb8
 8005150:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005152:	9309      	str	r3, [sp, #36]	; 0x24
 8005154:	3301      	adds	r3, #1
 8005156:	932d      	str	r3, [sp, #180]	; 0xb4
 8005158:	2b07      	cmp	r3, #7
 800515a:	dd08      	ble.n	800516e <_vfprintf_r+0xf3e>
 800515c:	0031      	movs	r1, r6
 800515e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005160:	aa2c      	add	r2, sp, #176	; 0xb0
 8005162:	f002 fbc7 	bl	80078f4 <__sprint_r>
 8005166:	2800      	cmp	r0, #0
 8005168:	d000      	beq.n	800516c <_vfprintf_r+0xf3c>
 800516a:	e2fa      	b.n	8005762 <_vfprintf_r+0x1532>
 800516c:	af2f      	add	r7, sp, #188	; 0xbc
 800516e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005170:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005172:	4293      	cmp	r3, r2
 8005174:	db02      	blt.n	800517c <_vfprintf_r+0xf4c>
 8005176:	9b08      	ldr	r3, [sp, #32]
 8005178:	07db      	lsls	r3, r3, #31
 800517a:	d51d      	bpl.n	80051b8 <_vfprintf_r+0xf88>
 800517c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800517e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005180:	4694      	mov	ip, r2
 8005182:	603b      	str	r3, [r7, #0]
 8005184:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005186:	607b      	str	r3, [r7, #4]
 8005188:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800518a:	3708      	adds	r7, #8
 800518c:	4463      	add	r3, ip
 800518e:	932e      	str	r3, [sp, #184]	; 0xb8
 8005190:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005192:	9309      	str	r3, [sp, #36]	; 0x24
 8005194:	3301      	adds	r3, #1
 8005196:	932d      	str	r3, [sp, #180]	; 0xb4
 8005198:	2b07      	cmp	r3, #7
 800519a:	dd08      	ble.n	80051ae <_vfprintf_r+0xf7e>
 800519c:	0031      	movs	r1, r6
 800519e:	980a      	ldr	r0, [sp, #40]	; 0x28
 80051a0:	aa2c      	add	r2, sp, #176	; 0xb0
 80051a2:	f002 fba7 	bl	80078f4 <__sprint_r>
 80051a6:	2800      	cmp	r0, #0
 80051a8:	d000      	beq.n	80051ac <_vfprintf_r+0xf7c>
 80051aa:	e2da      	b.n	8005762 <_vfprintf_r+0x1532>
 80051ac:	af2f      	add	r7, sp, #188	; 0xbc
 80051ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80051b0:	2510      	movs	r5, #16
 80051b2:	1e5c      	subs	r4, r3, #1
 80051b4:	2c00      	cmp	r4, #0
 80051b6:	dc30      	bgt.n	800521a <_vfprintf_r+0xfea>
 80051b8:	9b08      	ldr	r3, [sp, #32]
 80051ba:	075b      	lsls	r3, r3, #29
 80051bc:	d500      	bpl.n	80051c0 <_vfprintf_r+0xf90>
 80051be:	e2b2      	b.n	8005726 <_vfprintf_r+0x14f6>
 80051c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80051c2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80051c4:	4293      	cmp	r3, r2
 80051c6:	da00      	bge.n	80051ca <_vfprintf_r+0xf9a>
 80051c8:	0013      	movs	r3, r2
 80051ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80051cc:	18d3      	adds	r3, r2, r3
 80051ce:	9316      	str	r3, [sp, #88]	; 0x58
 80051d0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80051d2:	9308      	str	r3, [sp, #32]
 80051d4:	2b00      	cmp	r3, #0
 80051d6:	d007      	beq.n	80051e8 <_vfprintf_r+0xfb8>
 80051d8:	0031      	movs	r1, r6
 80051da:	980a      	ldr	r0, [sp, #40]	; 0x28
 80051dc:	aa2c      	add	r2, sp, #176	; 0xb0
 80051de:	f002 fb89 	bl	80078f4 <__sprint_r>
 80051e2:	2800      	cmp	r0, #0
 80051e4:	d000      	beq.n	80051e8 <_vfprintf_r+0xfb8>
 80051e6:	e2bc      	b.n	8005762 <_vfprintf_r+0x1532>
 80051e8:	2300      	movs	r3, #0
 80051ea:	932d      	str	r3, [sp, #180]	; 0xb4
 80051ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d000      	beq.n	80051f4 <_vfprintf_r+0xfc4>
 80051f2:	e2d2      	b.n	800579a <_vfprintf_r+0x156a>
 80051f4:	af2f      	add	r7, sp, #188	; 0xbc
 80051f6:	e5b7      	b.n	8004d68 <_vfprintf_r+0xb38>
 80051f8:	3210      	adds	r2, #16
 80051fa:	607d      	str	r5, [r7, #4]
 80051fc:	922e      	str	r2, [sp, #184]	; 0xb8
 80051fe:	932d      	str	r3, [sp, #180]	; 0xb4
 8005200:	2b07      	cmp	r3, #7
 8005202:	dd08      	ble.n	8005216 <_vfprintf_r+0xfe6>
 8005204:	0031      	movs	r1, r6
 8005206:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005208:	aa2c      	add	r2, sp, #176	; 0xb0
 800520a:	f002 fb73 	bl	80078f4 <__sprint_r>
 800520e:	2800      	cmp	r0, #0
 8005210:	d000      	beq.n	8005214 <_vfprintf_r+0xfe4>
 8005212:	e2a6      	b.n	8005762 <_vfprintf_r+0x1532>
 8005214:	a92f      	add	r1, sp, #188	; 0xbc
 8005216:	000f      	movs	r7, r1
 8005218:	3c10      	subs	r4, #16
 800521a:	0039      	movs	r1, r7
 800521c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800521e:	484b      	ldr	r0, [pc, #300]	; (800534c <_vfprintf_r+0x111c>)
 8005220:	9309      	str	r3, [sp, #36]	; 0x24
 8005222:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8005224:	3301      	adds	r3, #1
 8005226:	3108      	adds	r1, #8
 8005228:	6038      	str	r0, [r7, #0]
 800522a:	2c10      	cmp	r4, #16
 800522c:	dce4      	bgt.n	80051f8 <_vfprintf_r+0xfc8>
 800522e:	607c      	str	r4, [r7, #4]
 8005230:	18a4      	adds	r4, r4, r2
 8005232:	000f      	movs	r7, r1
 8005234:	942e      	str	r4, [sp, #184]	; 0xb8
 8005236:	932d      	str	r3, [sp, #180]	; 0xb4
 8005238:	2b07      	cmp	r3, #7
 800523a:	ddbd      	ble.n	80051b8 <_vfprintf_r+0xf88>
 800523c:	e068      	b.n	8005310 <_vfprintf_r+0x10e0>
 800523e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005240:	2b00      	cmp	r3, #0
 8005242:	dd00      	ble.n	8005246 <_vfprintf_r+0x1016>
 8005244:	e084      	b.n	8005350 <_vfprintf_r+0x1120>
 8005246:	4b40      	ldr	r3, [pc, #256]	; (8005348 <_vfprintf_r+0x1118>)
 8005248:	603b      	str	r3, [r7, #0]
 800524a:	2301      	movs	r3, #1
 800524c:	607b      	str	r3, [r7, #4]
 800524e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005250:	3708      	adds	r7, #8
 8005252:	3301      	adds	r3, #1
 8005254:	932e      	str	r3, [sp, #184]	; 0xb8
 8005256:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005258:	930b      	str	r3, [sp, #44]	; 0x2c
 800525a:	3301      	adds	r3, #1
 800525c:	932d      	str	r3, [sp, #180]	; 0xb4
 800525e:	2b07      	cmp	r3, #7
 8005260:	dd08      	ble.n	8005274 <_vfprintf_r+0x1044>
 8005262:	0031      	movs	r1, r6
 8005264:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005266:	aa2c      	add	r2, sp, #176	; 0xb0
 8005268:	f002 fb44 	bl	80078f4 <__sprint_r>
 800526c:	2800      	cmp	r0, #0
 800526e:	d000      	beq.n	8005272 <_vfprintf_r+0x1042>
 8005270:	e277      	b.n	8005762 <_vfprintf_r+0x1532>
 8005272:	af2f      	add	r7, sp, #188	; 0xbc
 8005274:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005278:	9808      	ldr	r0, [sp, #32]
 800527a:	430b      	orrs	r3, r1
 800527c:	2101      	movs	r1, #1
 800527e:	4001      	ands	r1, r0
 8005280:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8005282:	430b      	orrs	r3, r1
 8005284:	d098      	beq.n	80051b8 <_vfprintf_r+0xf88>
 8005286:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005288:	603b      	str	r3, [r7, #0]
 800528a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800528c:	607b      	str	r3, [r7, #4]
 800528e:	189a      	adds	r2, r3, r2
 8005290:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005292:	922e      	str	r2, [sp, #184]	; 0xb8
 8005294:	930b      	str	r3, [sp, #44]	; 0x2c
 8005296:	3301      	adds	r3, #1
 8005298:	932d      	str	r3, [sp, #180]	; 0xb4
 800529a:	3708      	adds	r7, #8
 800529c:	2b07      	cmp	r3, #7
 800529e:	dd08      	ble.n	80052b2 <_vfprintf_r+0x1082>
 80052a0:	0031      	movs	r1, r6
 80052a2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80052a4:	aa2c      	add	r2, sp, #176	; 0xb0
 80052a6:	f002 fb25 	bl	80078f4 <__sprint_r>
 80052aa:	2800      	cmp	r0, #0
 80052ac:	d000      	beq.n	80052b0 <_vfprintf_r+0x1080>
 80052ae:	e258      	b.n	8005762 <_vfprintf_r+0x1532>
 80052b0:	af2f      	add	r7, sp, #188	; 0xbc
 80052b2:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80052b4:	2c00      	cmp	r4, #0
 80052b6:	da1a      	bge.n	80052ee <_vfprintf_r+0x10be>
 80052b8:	0039      	movs	r1, r7
 80052ba:	2510      	movs	r5, #16
 80052bc:	4264      	negs	r4, r4
 80052be:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80052c0:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80052c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80052c4:	1c5a      	adds	r2, r3, #1
 80052c6:	4b21      	ldr	r3, [pc, #132]	; (800534c <_vfprintf_r+0x111c>)
 80052c8:	3708      	adds	r7, #8
 80052ca:	600b      	str	r3, [r1, #0]
 80052cc:	2c10      	cmp	r4, #16
 80052ce:	dc29      	bgt.n	8005324 <_vfprintf_r+0x10f4>
 80052d0:	604c      	str	r4, [r1, #4]
 80052d2:	1824      	adds	r4, r4, r0
 80052d4:	942e      	str	r4, [sp, #184]	; 0xb8
 80052d6:	922d      	str	r2, [sp, #180]	; 0xb4
 80052d8:	2a07      	cmp	r2, #7
 80052da:	dd08      	ble.n	80052ee <_vfprintf_r+0x10be>
 80052dc:	0031      	movs	r1, r6
 80052de:	980a      	ldr	r0, [sp, #40]	; 0x28
 80052e0:	aa2c      	add	r2, sp, #176	; 0xb0
 80052e2:	f002 fb07 	bl	80078f4 <__sprint_r>
 80052e6:	2800      	cmp	r0, #0
 80052e8:	d000      	beq.n	80052ec <_vfprintf_r+0x10bc>
 80052ea:	e23a      	b.n	8005762 <_vfprintf_r+0x1532>
 80052ec:	af2f      	add	r7, sp, #188	; 0xbc
 80052ee:	990d      	ldr	r1, [sp, #52]	; 0x34
 80052f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052f2:	468c      	mov	ip, r1
 80052f4:	603b      	str	r3, [r7, #0]
 80052f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80052f8:	607b      	str	r3, [r7, #4]
 80052fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80052fc:	4463      	add	r3, ip
 80052fe:	932e      	str	r3, [sp, #184]	; 0xb8
 8005300:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005302:	1c5a      	adds	r2, r3, #1
 8005304:	9309      	str	r3, [sp, #36]	; 0x24
 8005306:	922d      	str	r2, [sp, #180]	; 0xb4
 8005308:	2a07      	cmp	r2, #7
 800530a:	dc01      	bgt.n	8005310 <_vfprintf_r+0x10e0>
 800530c:	f7ff fa1d 	bl	800474a <_vfprintf_r+0x51a>
 8005310:	0031      	movs	r1, r6
 8005312:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005314:	aa2c      	add	r2, sp, #176	; 0xb0
 8005316:	f002 faed 	bl	80078f4 <__sprint_r>
 800531a:	2800      	cmp	r0, #0
 800531c:	d000      	beq.n	8005320 <_vfprintf_r+0x10f0>
 800531e:	e220      	b.n	8005762 <_vfprintf_r+0x1532>
 8005320:	af2f      	add	r7, sp, #188	; 0xbc
 8005322:	e749      	b.n	80051b8 <_vfprintf_r+0xf88>
 8005324:	3010      	adds	r0, #16
 8005326:	604d      	str	r5, [r1, #4]
 8005328:	902e      	str	r0, [sp, #184]	; 0xb8
 800532a:	922d      	str	r2, [sp, #180]	; 0xb4
 800532c:	2a07      	cmp	r2, #7
 800532e:	dd08      	ble.n	8005342 <_vfprintf_r+0x1112>
 8005330:	0031      	movs	r1, r6
 8005332:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005334:	aa2c      	add	r2, sp, #176	; 0xb0
 8005336:	f002 fadd 	bl	80078f4 <__sprint_r>
 800533a:	2800      	cmp	r0, #0
 800533c:	d000      	beq.n	8005340 <_vfprintf_r+0x1110>
 800533e:	e210      	b.n	8005762 <_vfprintf_r+0x1532>
 8005340:	af2f      	add	r7, sp, #188	; 0xbc
 8005342:	0039      	movs	r1, r7
 8005344:	3c10      	subs	r4, #16
 8005346:	e7ba      	b.n	80052be <_vfprintf_r+0x108e>
 8005348:	08009102 	.word	0x08009102
 800534c:	08009114 	.word	0x08009114
 8005350:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005352:	002c      	movs	r4, r5
 8005354:	429d      	cmp	r5, r3
 8005356:	dd00      	ble.n	800535a <_vfprintf_r+0x112a>
 8005358:	001c      	movs	r4, r3
 800535a:	2c00      	cmp	r4, #0
 800535c:	dd15      	ble.n	800538a <_vfprintf_r+0x115a>
 800535e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005360:	607c      	str	r4, [r7, #4]
 8005362:	603b      	str	r3, [r7, #0]
 8005364:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005366:	3708      	adds	r7, #8
 8005368:	18e3      	adds	r3, r4, r3
 800536a:	932e      	str	r3, [sp, #184]	; 0xb8
 800536c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800536e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005370:	3301      	adds	r3, #1
 8005372:	932d      	str	r3, [sp, #180]	; 0xb4
 8005374:	2b07      	cmp	r3, #7
 8005376:	dd08      	ble.n	800538a <_vfprintf_r+0x115a>
 8005378:	0031      	movs	r1, r6
 800537a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800537c:	aa2c      	add	r2, sp, #176	; 0xb0
 800537e:	f002 fab9 	bl	80078f4 <__sprint_r>
 8005382:	2800      	cmp	r0, #0
 8005384:	d000      	beq.n	8005388 <_vfprintf_r+0x1158>
 8005386:	e1ec      	b.n	8005762 <_vfprintf_r+0x1532>
 8005388:	af2f      	add	r7, sp, #188	; 0xbc
 800538a:	43e3      	mvns	r3, r4
 800538c:	17db      	asrs	r3, r3, #31
 800538e:	401c      	ands	r4, r3
 8005390:	1b2c      	subs	r4, r5, r4
 8005392:	2c00      	cmp	r4, #0
 8005394:	dd1a      	ble.n	80053cc <_vfprintf_r+0x119c>
 8005396:	0039      	movs	r1, r7
 8005398:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800539a:	48cc      	ldr	r0, [pc, #816]	; (80056cc <_vfprintf_r+0x149c>)
 800539c:	930b      	str	r3, [sp, #44]	; 0x2c
 800539e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80053a0:	3301      	adds	r3, #1
 80053a2:	3108      	adds	r1, #8
 80053a4:	6038      	str	r0, [r7, #0]
 80053a6:	2c10      	cmp	r4, #16
 80053a8:	dd00      	ble.n	80053ac <_vfprintf_r+0x117c>
 80053aa:	e08c      	b.n	80054c6 <_vfprintf_r+0x1296>
 80053ac:	607c      	str	r4, [r7, #4]
 80053ae:	18a4      	adds	r4, r4, r2
 80053b0:	000f      	movs	r7, r1
 80053b2:	942e      	str	r4, [sp, #184]	; 0xb8
 80053b4:	932d      	str	r3, [sp, #180]	; 0xb4
 80053b6:	2b07      	cmp	r3, #7
 80053b8:	dd08      	ble.n	80053cc <_vfprintf_r+0x119c>
 80053ba:	0031      	movs	r1, r6
 80053bc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80053be:	aa2c      	add	r2, sp, #176	; 0xb0
 80053c0:	f002 fa98 	bl	80078f4 <__sprint_r>
 80053c4:	2800      	cmp	r0, #0
 80053c6:	d000      	beq.n	80053ca <_vfprintf_r+0x119a>
 80053c8:	e1cb      	b.n	8005762 <_vfprintf_r+0x1532>
 80053ca:	af2f      	add	r7, sp, #188	; 0xbc
 80053cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80053ce:	195d      	adds	r5, r3, r5
 80053d0:	9b08      	ldr	r3, [sp, #32]
 80053d2:	055b      	lsls	r3, r3, #21
 80053d4:	d50d      	bpl.n	80053f2 <_vfprintf_r+0x11c2>
 80053d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053d8:	2b00      	cmp	r3, #0
 80053da:	d000      	beq.n	80053de <_vfprintf_r+0x11ae>
 80053dc:	e086      	b.n	80054ec <_vfprintf_r+0x12bc>
 80053de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d000      	beq.n	80053e6 <_vfprintf_r+0x11b6>
 80053e4:	e085      	b.n	80054f2 <_vfprintf_r+0x12c2>
 80053e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80053e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80053ea:	189b      	adds	r3, r3, r2
 80053ec:	429d      	cmp	r5, r3
 80053ee:	d900      	bls.n	80053f2 <_vfprintf_r+0x11c2>
 80053f0:	001d      	movs	r5, r3
 80053f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80053f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80053f6:	4293      	cmp	r3, r2
 80053f8:	db02      	blt.n	8005400 <_vfprintf_r+0x11d0>
 80053fa:	9b08      	ldr	r3, [sp, #32]
 80053fc:	07db      	lsls	r3, r3, #31
 80053fe:	d518      	bpl.n	8005432 <_vfprintf_r+0x1202>
 8005400:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8005402:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005404:	4694      	mov	ip, r2
 8005406:	603b      	str	r3, [r7, #0]
 8005408:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800540a:	607b      	str	r3, [r7, #4]
 800540c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800540e:	3708      	adds	r7, #8
 8005410:	4463      	add	r3, ip
 8005412:	932e      	str	r3, [sp, #184]	; 0xb8
 8005414:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005416:	930b      	str	r3, [sp, #44]	; 0x2c
 8005418:	3301      	adds	r3, #1
 800541a:	932d      	str	r3, [sp, #180]	; 0xb4
 800541c:	2b07      	cmp	r3, #7
 800541e:	dd08      	ble.n	8005432 <_vfprintf_r+0x1202>
 8005420:	0031      	movs	r1, r6
 8005422:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005424:	aa2c      	add	r2, sp, #176	; 0xb0
 8005426:	f002 fa65 	bl	80078f4 <__sprint_r>
 800542a:	2800      	cmp	r0, #0
 800542c:	d000      	beq.n	8005430 <_vfprintf_r+0x1200>
 800542e:	e198      	b.n	8005762 <_vfprintf_r+0x1532>
 8005430:	af2f      	add	r7, sp, #188	; 0xbc
 8005432:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005434:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005436:	4694      	mov	ip, r2
 8005438:	4463      	add	r3, ip
 800543a:	1b58      	subs	r0, r3, r5
 800543c:	0013      	movs	r3, r2
 800543e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005440:	1a9c      	subs	r4, r3, r2
 8005442:	4284      	cmp	r4, r0
 8005444:	dd00      	ble.n	8005448 <_vfprintf_r+0x1218>
 8005446:	0004      	movs	r4, r0
 8005448:	2c00      	cmp	r4, #0
 800544a:	dd14      	ble.n	8005476 <_vfprintf_r+0x1246>
 800544c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800544e:	603d      	str	r5, [r7, #0]
 8005450:	18e3      	adds	r3, r4, r3
 8005452:	932e      	str	r3, [sp, #184]	; 0xb8
 8005454:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005456:	607c      	str	r4, [r7, #4]
 8005458:	9309      	str	r3, [sp, #36]	; 0x24
 800545a:	3301      	adds	r3, #1
 800545c:	932d      	str	r3, [sp, #180]	; 0xb4
 800545e:	3708      	adds	r7, #8
 8005460:	2b07      	cmp	r3, #7
 8005462:	dd08      	ble.n	8005476 <_vfprintf_r+0x1246>
 8005464:	0031      	movs	r1, r6
 8005466:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005468:	aa2c      	add	r2, sp, #176	; 0xb0
 800546a:	f002 fa43 	bl	80078f4 <__sprint_r>
 800546e:	2800      	cmp	r0, #0
 8005470:	d000      	beq.n	8005474 <_vfprintf_r+0x1244>
 8005472:	e176      	b.n	8005762 <_vfprintf_r+0x1532>
 8005474:	af2f      	add	r7, sp, #188	; 0xbc
 8005476:	43e3      	mvns	r3, r4
 8005478:	17db      	asrs	r3, r3, #31
 800547a:	401c      	ands	r4, r3
 800547c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800547e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005480:	2510      	movs	r5, #16
 8005482:	1a9b      	subs	r3, r3, r2
 8005484:	1b1c      	subs	r4, r3, r4
 8005486:	2c00      	cmp	r4, #0
 8005488:	dc00      	bgt.n	800548c <_vfprintf_r+0x125c>
 800548a:	e695      	b.n	80051b8 <_vfprintf_r+0xf88>
 800548c:	0039      	movs	r1, r7
 800548e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005490:	488e      	ldr	r0, [pc, #568]	; (80056cc <_vfprintf_r+0x149c>)
 8005492:	9309      	str	r3, [sp, #36]	; 0x24
 8005494:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8005496:	3301      	adds	r3, #1
 8005498:	3108      	adds	r1, #8
 800549a:	6038      	str	r0, [r7, #0]
 800549c:	2c10      	cmp	r4, #16
 800549e:	dc00      	bgt.n	80054a2 <_vfprintf_r+0x1272>
 80054a0:	e6c5      	b.n	800522e <_vfprintf_r+0xffe>
 80054a2:	3210      	adds	r2, #16
 80054a4:	607d      	str	r5, [r7, #4]
 80054a6:	922e      	str	r2, [sp, #184]	; 0xb8
 80054a8:	932d      	str	r3, [sp, #180]	; 0xb4
 80054aa:	2b07      	cmp	r3, #7
 80054ac:	dd08      	ble.n	80054c0 <_vfprintf_r+0x1290>
 80054ae:	0031      	movs	r1, r6
 80054b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80054b2:	aa2c      	add	r2, sp, #176	; 0xb0
 80054b4:	f002 fa1e 	bl	80078f4 <__sprint_r>
 80054b8:	2800      	cmp	r0, #0
 80054ba:	d000      	beq.n	80054be <_vfprintf_r+0x128e>
 80054bc:	e151      	b.n	8005762 <_vfprintf_r+0x1532>
 80054be:	a92f      	add	r1, sp, #188	; 0xbc
 80054c0:	000f      	movs	r7, r1
 80054c2:	3c10      	subs	r4, #16
 80054c4:	e7e2      	b.n	800548c <_vfprintf_r+0x125c>
 80054c6:	2010      	movs	r0, #16
 80054c8:	1812      	adds	r2, r2, r0
 80054ca:	6078      	str	r0, [r7, #4]
 80054cc:	922e      	str	r2, [sp, #184]	; 0xb8
 80054ce:	932d      	str	r3, [sp, #180]	; 0xb4
 80054d0:	2b07      	cmp	r3, #7
 80054d2:	dd08      	ble.n	80054e6 <_vfprintf_r+0x12b6>
 80054d4:	0031      	movs	r1, r6
 80054d6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80054d8:	aa2c      	add	r2, sp, #176	; 0xb0
 80054da:	f002 fa0b 	bl	80078f4 <__sprint_r>
 80054de:	2800      	cmp	r0, #0
 80054e0:	d000      	beq.n	80054e4 <_vfprintf_r+0x12b4>
 80054e2:	e13e      	b.n	8005762 <_vfprintf_r+0x1532>
 80054e4:	a92f      	add	r1, sp, #188	; 0xbc
 80054e6:	000f      	movs	r7, r1
 80054e8:	3c10      	subs	r4, #16
 80054ea:	e754      	b.n	8005396 <_vfprintf_r+0x1166>
 80054ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	d061      	beq.n	80055b6 <_vfprintf_r+0x1386>
 80054f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054f4:	3b01      	subs	r3, #1
 80054f6:	9310      	str	r3, [sp, #64]	; 0x40
 80054f8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80054fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80054fc:	4694      	mov	ip, r2
 80054fe:	603b      	str	r3, [r7, #0]
 8005500:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005502:	607b      	str	r3, [r7, #4]
 8005504:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8005506:	3708      	adds	r7, #8
 8005508:	4463      	add	r3, ip
 800550a:	932e      	str	r3, [sp, #184]	; 0xb8
 800550c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800550e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005510:	3301      	adds	r3, #1
 8005512:	932d      	str	r3, [sp, #180]	; 0xb4
 8005514:	2b07      	cmp	r3, #7
 8005516:	dd08      	ble.n	800552a <_vfprintf_r+0x12fa>
 8005518:	0031      	movs	r1, r6
 800551a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800551c:	aa2c      	add	r2, sp, #176	; 0xb0
 800551e:	f002 f9e9 	bl	80078f4 <__sprint_r>
 8005522:	2800      	cmp	r0, #0
 8005524:	d000      	beq.n	8005528 <_vfprintf_r+0x12f8>
 8005526:	e11c      	b.n	8005762 <_vfprintf_r+0x1532>
 8005528:	af2f      	add	r7, sp, #188	; 0xbc
 800552a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800552c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800552e:	189b      	adds	r3, r3, r2
 8005530:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005532:	1b5b      	subs	r3, r3, r5
 8005534:	7814      	ldrb	r4, [r2, #0]
 8005536:	429c      	cmp	r4, r3
 8005538:	dd00      	ble.n	800553c <_vfprintf_r+0x130c>
 800553a:	001c      	movs	r4, r3
 800553c:	2c00      	cmp	r4, #0
 800553e:	dd14      	ble.n	800556a <_vfprintf_r+0x133a>
 8005540:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8005542:	603d      	str	r5, [r7, #0]
 8005544:	18e3      	adds	r3, r4, r3
 8005546:	932e      	str	r3, [sp, #184]	; 0xb8
 8005548:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800554a:	607c      	str	r4, [r7, #4]
 800554c:	930b      	str	r3, [sp, #44]	; 0x2c
 800554e:	3301      	adds	r3, #1
 8005550:	932d      	str	r3, [sp, #180]	; 0xb4
 8005552:	3708      	adds	r7, #8
 8005554:	2b07      	cmp	r3, #7
 8005556:	dd08      	ble.n	800556a <_vfprintf_r+0x133a>
 8005558:	0031      	movs	r1, r6
 800555a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800555c:	aa2c      	add	r2, sp, #176	; 0xb0
 800555e:	f002 f9c9 	bl	80078f4 <__sprint_r>
 8005562:	2800      	cmp	r0, #0
 8005564:	d000      	beq.n	8005568 <_vfprintf_r+0x1338>
 8005566:	e0fc      	b.n	8005762 <_vfprintf_r+0x1532>
 8005568:	af2f      	add	r7, sp, #188	; 0xbc
 800556a:	43e3      	mvns	r3, r4
 800556c:	17db      	asrs	r3, r3, #31
 800556e:	401c      	ands	r4, r3
 8005570:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005572:	781b      	ldrb	r3, [r3, #0]
 8005574:	1b1c      	subs	r4, r3, r4
 8005576:	2c00      	cmp	r4, #0
 8005578:	dd19      	ble.n	80055ae <_vfprintf_r+0x137e>
 800557a:	0039      	movs	r1, r7
 800557c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800557e:	4853      	ldr	r0, [pc, #332]	; (80056cc <_vfprintf_r+0x149c>)
 8005580:	930b      	str	r3, [sp, #44]	; 0x2c
 8005582:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8005584:	3301      	adds	r3, #1
 8005586:	3108      	adds	r1, #8
 8005588:	6038      	str	r0, [r7, #0]
 800558a:	2c10      	cmp	r4, #16
 800558c:	dc1a      	bgt.n	80055c4 <_vfprintf_r+0x1394>
 800558e:	607c      	str	r4, [r7, #4]
 8005590:	18a4      	adds	r4, r4, r2
 8005592:	000f      	movs	r7, r1
 8005594:	942e      	str	r4, [sp, #184]	; 0xb8
 8005596:	932d      	str	r3, [sp, #180]	; 0xb4
 8005598:	2b07      	cmp	r3, #7
 800559a:	dd08      	ble.n	80055ae <_vfprintf_r+0x137e>
 800559c:	0031      	movs	r1, r6
 800559e:	980a      	ldr	r0, [sp, #40]	; 0x28
 80055a0:	aa2c      	add	r2, sp, #176	; 0xb0
 80055a2:	f002 f9a7 	bl	80078f4 <__sprint_r>
 80055a6:	2800      	cmp	r0, #0
 80055a8:	d000      	beq.n	80055ac <_vfprintf_r+0x137c>
 80055aa:	e0da      	b.n	8005762 <_vfprintf_r+0x1532>
 80055ac:	af2f      	add	r7, sp, #188	; 0xbc
 80055ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80055b0:	781b      	ldrb	r3, [r3, #0]
 80055b2:	18ed      	adds	r5, r5, r3
 80055b4:	e70f      	b.n	80053d6 <_vfprintf_r+0x11a6>
 80055b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80055b8:	3b01      	subs	r3, #1
 80055ba:	9312      	str	r3, [sp, #72]	; 0x48
 80055bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055be:	3b01      	subs	r3, #1
 80055c0:	9311      	str	r3, [sp, #68]	; 0x44
 80055c2:	e799      	b.n	80054f8 <_vfprintf_r+0x12c8>
 80055c4:	2010      	movs	r0, #16
 80055c6:	1812      	adds	r2, r2, r0
 80055c8:	6078      	str	r0, [r7, #4]
 80055ca:	922e      	str	r2, [sp, #184]	; 0xb8
 80055cc:	932d      	str	r3, [sp, #180]	; 0xb4
 80055ce:	2b07      	cmp	r3, #7
 80055d0:	dd08      	ble.n	80055e4 <_vfprintf_r+0x13b4>
 80055d2:	0031      	movs	r1, r6
 80055d4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80055d6:	aa2c      	add	r2, sp, #176	; 0xb0
 80055d8:	f002 f98c 	bl	80078f4 <__sprint_r>
 80055dc:	2800      	cmp	r0, #0
 80055de:	d000      	beq.n	80055e2 <_vfprintf_r+0x13b2>
 80055e0:	e0bf      	b.n	8005762 <_vfprintf_r+0x1532>
 80055e2:	a92f      	add	r1, sp, #188	; 0xbc
 80055e4:	000f      	movs	r7, r1
 80055e6:	3c10      	subs	r4, #16
 80055e8:	e7c7      	b.n	800557a <_vfprintf_r+0x134a>
 80055ea:	003c      	movs	r4, r7
 80055ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80055ee:	9919      	ldr	r1, [sp, #100]	; 0x64
 80055f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80055f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80055f4:	3101      	adds	r1, #1
 80055f6:	3301      	adds	r3, #1
 80055f8:	3408      	adds	r4, #8
 80055fa:	2a01      	cmp	r2, #1
 80055fc:	dc04      	bgt.n	8005608 <_vfprintf_r+0x13d8>
 80055fe:	2201      	movs	r2, #1
 8005600:	9808      	ldr	r0, [sp, #32]
 8005602:	4210      	tst	r0, r2
 8005604:	d100      	bne.n	8005608 <_vfprintf_r+0x13d8>
 8005606:	e089      	b.n	800571c <_vfprintf_r+0x14ec>
 8005608:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800560a:	912e      	str	r1, [sp, #184]	; 0xb8
 800560c:	603a      	str	r2, [r7, #0]
 800560e:	2201      	movs	r2, #1
 8005610:	932d      	str	r3, [sp, #180]	; 0xb4
 8005612:	607a      	str	r2, [r7, #4]
 8005614:	2b07      	cmp	r3, #7
 8005616:	dd08      	ble.n	800562a <_vfprintf_r+0x13fa>
 8005618:	0031      	movs	r1, r6
 800561a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800561c:	aa2c      	add	r2, sp, #176	; 0xb0
 800561e:	f002 f969 	bl	80078f4 <__sprint_r>
 8005622:	2800      	cmp	r0, #0
 8005624:	d000      	beq.n	8005628 <_vfprintf_r+0x13f8>
 8005626:	e09c      	b.n	8005762 <_vfprintf_r+0x1532>
 8005628:	ac2f      	add	r4, sp, #188	; 0xbc
 800562a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800562c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800562e:	4694      	mov	ip, r2
 8005630:	6023      	str	r3, [r4, #0]
 8005632:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005634:	6063      	str	r3, [r4, #4]
 8005636:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8005638:	3408      	adds	r4, #8
 800563a:	4463      	add	r3, ip
 800563c:	932e      	str	r3, [sp, #184]	; 0xb8
 800563e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005640:	930b      	str	r3, [sp, #44]	; 0x2c
 8005642:	3301      	adds	r3, #1
 8005644:	932d      	str	r3, [sp, #180]	; 0xb4
 8005646:	2b07      	cmp	r3, #7
 8005648:	dd08      	ble.n	800565c <_vfprintf_r+0x142c>
 800564a:	0031      	movs	r1, r6
 800564c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800564e:	aa2c      	add	r2, sp, #176	; 0xb0
 8005650:	f002 f950 	bl	80078f4 <__sprint_r>
 8005654:	2800      	cmp	r0, #0
 8005656:	d000      	beq.n	800565a <_vfprintf_r+0x142a>
 8005658:	e083      	b.n	8005762 <_vfprintf_r+0x1532>
 800565a:	ac2f      	add	r4, sp, #188	; 0xbc
 800565c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800565e:	2200      	movs	r2, #0
 8005660:	9814      	ldr	r0, [sp, #80]	; 0x50
 8005662:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005664:	1e5d      	subs	r5, r3, #1
 8005666:	2300      	movs	r3, #0
 8005668:	f7fa feec 	bl	8000444 <__aeabi_dcmpeq>
 800566c:	2800      	cmp	r0, #0
 800566e:	d12f      	bne.n	80056d0 <_vfprintf_r+0x14a0>
 8005670:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8005672:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005674:	930b      	str	r3, [sp, #44]	; 0x2c
 8005676:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005678:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800567a:	1c59      	adds	r1, r3, #1
 800567c:	930f      	str	r3, [sp, #60]	; 0x3c
 800567e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005680:	3001      	adds	r0, #1
 8005682:	3b01      	subs	r3, #1
 8005684:	189b      	adds	r3, r3, r2
 8005686:	6020      	str	r0, [r4, #0]
 8005688:	6065      	str	r5, [r4, #4]
 800568a:	932e      	str	r3, [sp, #184]	; 0xb8
 800568c:	912d      	str	r1, [sp, #180]	; 0xb4
 800568e:	3408      	adds	r4, #8
 8005690:	2907      	cmp	r1, #7
 8005692:	dd07      	ble.n	80056a4 <_vfprintf_r+0x1474>
 8005694:	0031      	movs	r1, r6
 8005696:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005698:	aa2c      	add	r2, sp, #176	; 0xb0
 800569a:	f002 f92b 	bl	80078f4 <__sprint_r>
 800569e:	2800      	cmp	r0, #0
 80056a0:	d15f      	bne.n	8005762 <_vfprintf_r+0x1532>
 80056a2:	ac2f      	add	r4, sp, #188	; 0xbc
 80056a4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80056a6:	ab28      	add	r3, sp, #160	; 0xa0
 80056a8:	4694      	mov	ip, r2
 80056aa:	6023      	str	r3, [r4, #0]
 80056ac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80056ae:	6063      	str	r3, [r4, #4]
 80056b0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80056b2:	4463      	add	r3, ip
 80056b4:	932e      	str	r3, [sp, #184]	; 0xb8
 80056b6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80056b8:	9309      	str	r3, [sp, #36]	; 0x24
 80056ba:	3301      	adds	r3, #1
 80056bc:	932d      	str	r3, [sp, #180]	; 0xb4
 80056be:	2b07      	cmp	r3, #7
 80056c0:	dd00      	ble.n	80056c4 <_vfprintf_r+0x1494>
 80056c2:	e625      	b.n	8005310 <_vfprintf_r+0x10e0>
 80056c4:	3408      	adds	r4, #8
 80056c6:	0027      	movs	r7, r4
 80056c8:	e576      	b.n	80051b8 <_vfprintf_r+0xf88>
 80056ca:	46c0      	nop			; (mov r8, r8)
 80056cc:	08009114 	.word	0x08009114
 80056d0:	2710      	movs	r7, #16
 80056d2:	2d00      	cmp	r5, #0
 80056d4:	dde6      	ble.n	80056a4 <_vfprintf_r+0x1474>
 80056d6:	0021      	movs	r1, r4
 80056d8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80056da:	485a      	ldr	r0, [pc, #360]	; (8005844 <_vfprintf_r+0x1614>)
 80056dc:	9309      	str	r3, [sp, #36]	; 0x24
 80056de:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80056e0:	3301      	adds	r3, #1
 80056e2:	3108      	adds	r1, #8
 80056e4:	6020      	str	r0, [r4, #0]
 80056e6:	2d10      	cmp	r5, #16
 80056e8:	dc07      	bgt.n	80056fa <_vfprintf_r+0x14ca>
 80056ea:	6065      	str	r5, [r4, #4]
 80056ec:	000c      	movs	r4, r1
 80056ee:	18ad      	adds	r5, r5, r2
 80056f0:	952e      	str	r5, [sp, #184]	; 0xb8
 80056f2:	932d      	str	r3, [sp, #180]	; 0xb4
 80056f4:	2b07      	cmp	r3, #7
 80056f6:	ddd5      	ble.n	80056a4 <_vfprintf_r+0x1474>
 80056f8:	e7cc      	b.n	8005694 <_vfprintf_r+0x1464>
 80056fa:	3210      	adds	r2, #16
 80056fc:	6067      	str	r7, [r4, #4]
 80056fe:	922e      	str	r2, [sp, #184]	; 0xb8
 8005700:	932d      	str	r3, [sp, #180]	; 0xb4
 8005702:	2b07      	cmp	r3, #7
 8005704:	dd07      	ble.n	8005716 <_vfprintf_r+0x14e6>
 8005706:	0031      	movs	r1, r6
 8005708:	980a      	ldr	r0, [sp, #40]	; 0x28
 800570a:	aa2c      	add	r2, sp, #176	; 0xb0
 800570c:	f002 f8f2 	bl	80078f4 <__sprint_r>
 8005710:	2800      	cmp	r0, #0
 8005712:	d126      	bne.n	8005762 <_vfprintf_r+0x1532>
 8005714:	a92f      	add	r1, sp, #188	; 0xbc
 8005716:	000c      	movs	r4, r1
 8005718:	3d10      	subs	r5, #16
 800571a:	e7dc      	b.n	80056d6 <_vfprintf_r+0x14a6>
 800571c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800571e:	912e      	str	r1, [sp, #184]	; 0xb8
 8005720:	c705      	stmia	r7!, {r0, r2}
 8005722:	932d      	str	r3, [sp, #180]	; 0xb4
 8005724:	e7e6      	b.n	80056f4 <_vfprintf_r+0x14c4>
 8005726:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005728:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800572a:	2510      	movs	r5, #16
 800572c:	1a9c      	subs	r4, r3, r2
 800572e:	2c00      	cmp	r4, #0
 8005730:	dc00      	bgt.n	8005734 <_vfprintf_r+0x1504>
 8005732:	e545      	b.n	80051c0 <_vfprintf_r+0xf90>
 8005734:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8005736:	4944      	ldr	r1, [pc, #272]	; (8005848 <_vfprintf_r+0x1618>)
 8005738:	9308      	str	r3, [sp, #32]
 800573a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800573c:	3301      	adds	r3, #1
 800573e:	6039      	str	r1, [r7, #0]
 8005740:	2c10      	cmp	r4, #16
 8005742:	dc19      	bgt.n	8005778 <_vfprintf_r+0x1548>
 8005744:	607c      	str	r4, [r7, #4]
 8005746:	18a4      	adds	r4, r4, r2
 8005748:	942e      	str	r4, [sp, #184]	; 0xb8
 800574a:	932d      	str	r3, [sp, #180]	; 0xb4
 800574c:	2b07      	cmp	r3, #7
 800574e:	dc00      	bgt.n	8005752 <_vfprintf_r+0x1522>
 8005750:	e536      	b.n	80051c0 <_vfprintf_r+0xf90>
 8005752:	0031      	movs	r1, r6
 8005754:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005756:	aa2c      	add	r2, sp, #176	; 0xb0
 8005758:	f002 f8cc 	bl	80078f4 <__sprint_r>
 800575c:	2800      	cmp	r0, #0
 800575e:	d100      	bne.n	8005762 <_vfprintf_r+0x1532>
 8005760:	e52e      	b.n	80051c0 <_vfprintf_r+0xf90>
 8005762:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005764:	2b00      	cmp	r3, #0
 8005766:	d101      	bne.n	800576c <_vfprintf_r+0x153c>
 8005768:	f7ff f8b6 	bl	80048d8 <_vfprintf_r+0x6a8>
 800576c:	0019      	movs	r1, r3
 800576e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005770:	f001 f93a 	bl	80069e8 <_free_r>
 8005774:	f7ff f8b0 	bl	80048d8 <_vfprintf_r+0x6a8>
 8005778:	3210      	adds	r2, #16
 800577a:	607d      	str	r5, [r7, #4]
 800577c:	922e      	str	r2, [sp, #184]	; 0xb8
 800577e:	932d      	str	r3, [sp, #180]	; 0xb4
 8005780:	3708      	adds	r7, #8
 8005782:	2b07      	cmp	r3, #7
 8005784:	dd07      	ble.n	8005796 <_vfprintf_r+0x1566>
 8005786:	0031      	movs	r1, r6
 8005788:	980a      	ldr	r0, [sp, #40]	; 0x28
 800578a:	aa2c      	add	r2, sp, #176	; 0xb0
 800578c:	f002 f8b2 	bl	80078f4 <__sprint_r>
 8005790:	2800      	cmp	r0, #0
 8005792:	d1e6      	bne.n	8005762 <_vfprintf_r+0x1532>
 8005794:	af2f      	add	r7, sp, #188	; 0xbc
 8005796:	3c10      	subs	r4, #16
 8005798:	e7cc      	b.n	8005734 <_vfprintf_r+0x1504>
 800579a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800579c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800579e:	f001 f923 	bl	80069e8 <_free_r>
 80057a2:	e527      	b.n	80051f4 <_vfprintf_r+0xfc4>
 80057a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80057a6:	9308      	str	r3, [sp, #32]
 80057a8:	2b00      	cmp	r3, #0
 80057aa:	d103      	bne.n	80057b4 <_vfprintf_r+0x1584>
 80057ac:	2300      	movs	r3, #0
 80057ae:	932d      	str	r3, [sp, #180]	; 0xb4
 80057b0:	f7ff f892 	bl	80048d8 <_vfprintf_r+0x6a8>
 80057b4:	0031      	movs	r1, r6
 80057b6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80057b8:	aa2c      	add	r2, sp, #176	; 0xb0
 80057ba:	f002 f89b 	bl	80078f4 <__sprint_r>
 80057be:	2800      	cmp	r0, #0
 80057c0:	d0f4      	beq.n	80057ac <_vfprintf_r+0x157c>
 80057c2:	f7ff f889 	bl	80048d8 <_vfprintf_r+0x6a8>
 80057c6:	9d08      	ldr	r5, [sp, #32]
 80057c8:	2a00      	cmp	r2, #0
 80057ca:	d101      	bne.n	80057d0 <_vfprintf_r+0x15a0>
 80057cc:	f7fe fff3 	bl	80047b6 <_vfprintf_r+0x586>
 80057d0:	2b01      	cmp	r3, #1
 80057d2:	d101      	bne.n	80057d8 <_vfprintf_r+0x15a8>
 80057d4:	f7ff fbd2 	bl	8004f7c <_vfprintf_r+0xd4c>
 80057d8:	2b02      	cmp	r3, #2
 80057da:	d100      	bne.n	80057de <_vfprintf_r+0x15ae>
 80057dc:	e423      	b.n	8005026 <_vfprintf_r+0xdf6>
 80057de:	ab58      	add	r3, sp, #352	; 0x160
 80057e0:	9309      	str	r3, [sp, #36]	; 0x24
 80057e2:	2307      	movs	r3, #7
 80057e4:	469c      	mov	ip, r3
 80057e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80057e8:	9a06      	ldr	r2, [sp, #24]
 80057ea:	000b      	movs	r3, r1
 80057ec:	3b01      	subs	r3, #1
 80057ee:	9309      	str	r3, [sp, #36]	; 0x24
 80057f0:	4663      	mov	r3, ip
 80057f2:	4013      	ands	r3, r2
 80057f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80057f6:	3330      	adds	r3, #48	; 0x30
 80057f8:	7013      	strb	r3, [r2, #0]
 80057fa:	9a07      	ldr	r2, [sp, #28]
 80057fc:	0754      	lsls	r4, r2, #29
 80057fe:	9a06      	ldr	r2, [sp, #24]
 8005800:	08d0      	lsrs	r0, r2, #3
 8005802:	9a07      	ldr	r2, [sp, #28]
 8005804:	4304      	orrs	r4, r0
 8005806:	08d2      	lsrs	r2, r2, #3
 8005808:	9207      	str	r2, [sp, #28]
 800580a:	0022      	movs	r2, r4
 800580c:	9807      	ldr	r0, [sp, #28]
 800580e:	9406      	str	r4, [sp, #24]
 8005810:	4302      	orrs	r2, r0
 8005812:	d1e8      	bne.n	80057e6 <_vfprintf_r+0x15b6>
 8005814:	07ea      	lsls	r2, r5, #31
 8005816:	d507      	bpl.n	8005828 <_vfprintf_r+0x15f8>
 8005818:	2b30      	cmp	r3, #48	; 0x30
 800581a:	d005      	beq.n	8005828 <_vfprintf_r+0x15f8>
 800581c:	2330      	movs	r3, #48	; 0x30
 800581e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005820:	3801      	subs	r0, #1
 8005822:	7003      	strb	r3, [r0, #0]
 8005824:	1e8b      	subs	r3, r1, #2
 8005826:	9309      	str	r3, [sp, #36]	; 0x24
 8005828:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800582a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800582c:	9319      	str	r3, [sp, #100]	; 0x64
 800582e:	ab58      	add	r3, sp, #352	; 0x160
 8005830:	1a9b      	subs	r3, r3, r2
 8005832:	930b      	str	r3, [sp, #44]	; 0x2c
 8005834:	2300      	movs	r3, #0
 8005836:	9508      	str	r5, [sp, #32]
 8005838:	930c      	str	r3, [sp, #48]	; 0x30
 800583a:	001d      	movs	r5, r3
 800583c:	9310      	str	r3, [sp, #64]	; 0x40
 800583e:	9311      	str	r3, [sp, #68]	; 0x44
 8005840:	f7fe fea7 	bl	8004592 <_vfprintf_r+0x362>
 8005844:	08009114 	.word	0x08009114
 8005848:	08009104 	.word	0x08009104

0800584c <__sbprintf>:
 800584c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800584e:	0015      	movs	r5, r2
 8005850:	2202      	movs	r2, #2
 8005852:	4c1e      	ldr	r4, [pc, #120]	; (80058cc <__sbprintf+0x80>)
 8005854:	001f      	movs	r7, r3
 8005856:	898b      	ldrh	r3, [r1, #12]
 8005858:	44a5      	add	sp, r4
 800585a:	4393      	bics	r3, r2
 800585c:	466a      	mov	r2, sp
 800585e:	8193      	strh	r3, [r2, #12]
 8005860:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8005862:	0006      	movs	r6, r0
 8005864:	9319      	str	r3, [sp, #100]	; 0x64
 8005866:	89cb      	ldrh	r3, [r1, #14]
 8005868:	a816      	add	r0, sp, #88	; 0x58
 800586a:	81d3      	strh	r3, [r2, #14]
 800586c:	69cb      	ldr	r3, [r1, #28]
 800586e:	000c      	movs	r4, r1
 8005870:	9307      	str	r3, [sp, #28]
 8005872:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8005874:	9309      	str	r3, [sp, #36]	; 0x24
 8005876:	ab1a      	add	r3, sp, #104	; 0x68
 8005878:	9300      	str	r3, [sp, #0]
 800587a:	9304      	str	r3, [sp, #16]
 800587c:	2380      	movs	r3, #128	; 0x80
 800587e:	00db      	lsls	r3, r3, #3
 8005880:	9302      	str	r3, [sp, #8]
 8005882:	9305      	str	r3, [sp, #20]
 8005884:	2300      	movs	r3, #0
 8005886:	9306      	str	r3, [sp, #24]
 8005888:	f001 f986 	bl	8006b98 <__retarget_lock_init_recursive>
 800588c:	002a      	movs	r2, r5
 800588e:	003b      	movs	r3, r7
 8005890:	4669      	mov	r1, sp
 8005892:	0030      	movs	r0, r6
 8005894:	f7fe fccc 	bl	8004230 <_vfprintf_r>
 8005898:	1e05      	subs	r5, r0, #0
 800589a:	db07      	blt.n	80058ac <__sbprintf+0x60>
 800589c:	4669      	mov	r1, sp
 800589e:	0030      	movs	r0, r6
 80058a0:	f000 ff9a 	bl	80067d8 <_fflush_r>
 80058a4:	2800      	cmp	r0, #0
 80058a6:	d001      	beq.n	80058ac <__sbprintf+0x60>
 80058a8:	2501      	movs	r5, #1
 80058aa:	426d      	negs	r5, r5
 80058ac:	466b      	mov	r3, sp
 80058ae:	899a      	ldrh	r2, [r3, #12]
 80058b0:	2340      	movs	r3, #64	; 0x40
 80058b2:	421a      	tst	r2, r3
 80058b4:	d002      	beq.n	80058bc <__sbprintf+0x70>
 80058b6:	89a2      	ldrh	r2, [r4, #12]
 80058b8:	4313      	orrs	r3, r2
 80058ba:	81a3      	strh	r3, [r4, #12]
 80058bc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80058be:	f001 f96c 	bl	8006b9a <__retarget_lock_close_recursive>
 80058c2:	0028      	movs	r0, r5
 80058c4:	4b02      	ldr	r3, [pc, #8]	; (80058d0 <__sbprintf+0x84>)
 80058c6:	449d      	add	sp, r3
 80058c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80058ca:	46c0      	nop			; (mov r8, r8)
 80058cc:	fffffb94 	.word	0xfffffb94
 80058d0:	0000046c 	.word	0x0000046c

080058d4 <__swsetup_r>:
 80058d4:	4b30      	ldr	r3, [pc, #192]	; (8005998 <__swsetup_r+0xc4>)
 80058d6:	b570      	push	{r4, r5, r6, lr}
 80058d8:	0005      	movs	r5, r0
 80058da:	6818      	ldr	r0, [r3, #0]
 80058dc:	000c      	movs	r4, r1
 80058de:	2800      	cmp	r0, #0
 80058e0:	d004      	beq.n	80058ec <__swsetup_r+0x18>
 80058e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80058e4:	2b00      	cmp	r3, #0
 80058e6:	d101      	bne.n	80058ec <__swsetup_r+0x18>
 80058e8:	f000 ffec 	bl	80068c4 <__sinit>
 80058ec:	230c      	movs	r3, #12
 80058ee:	5ee2      	ldrsh	r2, [r4, r3]
 80058f0:	b293      	uxth	r3, r2
 80058f2:	0711      	lsls	r1, r2, #28
 80058f4:	d423      	bmi.n	800593e <__swsetup_r+0x6a>
 80058f6:	06d9      	lsls	r1, r3, #27
 80058f8:	d407      	bmi.n	800590a <__swsetup_r+0x36>
 80058fa:	2309      	movs	r3, #9
 80058fc:	2001      	movs	r0, #1
 80058fe:	602b      	str	r3, [r5, #0]
 8005900:	3337      	adds	r3, #55	; 0x37
 8005902:	4313      	orrs	r3, r2
 8005904:	81a3      	strh	r3, [r4, #12]
 8005906:	4240      	negs	r0, r0
 8005908:	bd70      	pop	{r4, r5, r6, pc}
 800590a:	075b      	lsls	r3, r3, #29
 800590c:	d513      	bpl.n	8005936 <__swsetup_r+0x62>
 800590e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005910:	2900      	cmp	r1, #0
 8005912:	d008      	beq.n	8005926 <__swsetup_r+0x52>
 8005914:	0023      	movs	r3, r4
 8005916:	3340      	adds	r3, #64	; 0x40
 8005918:	4299      	cmp	r1, r3
 800591a:	d002      	beq.n	8005922 <__swsetup_r+0x4e>
 800591c:	0028      	movs	r0, r5
 800591e:	f001 f863 	bl	80069e8 <_free_r>
 8005922:	2300      	movs	r3, #0
 8005924:	6323      	str	r3, [r4, #48]	; 0x30
 8005926:	2224      	movs	r2, #36	; 0x24
 8005928:	89a3      	ldrh	r3, [r4, #12]
 800592a:	4393      	bics	r3, r2
 800592c:	81a3      	strh	r3, [r4, #12]
 800592e:	2300      	movs	r3, #0
 8005930:	6063      	str	r3, [r4, #4]
 8005932:	6923      	ldr	r3, [r4, #16]
 8005934:	6023      	str	r3, [r4, #0]
 8005936:	2308      	movs	r3, #8
 8005938:	89a2      	ldrh	r2, [r4, #12]
 800593a:	4313      	orrs	r3, r2
 800593c:	81a3      	strh	r3, [r4, #12]
 800593e:	6923      	ldr	r3, [r4, #16]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d10b      	bne.n	800595c <__swsetup_r+0x88>
 8005944:	21a0      	movs	r1, #160	; 0xa0
 8005946:	2280      	movs	r2, #128	; 0x80
 8005948:	89a3      	ldrh	r3, [r4, #12]
 800594a:	0089      	lsls	r1, r1, #2
 800594c:	0092      	lsls	r2, r2, #2
 800594e:	400b      	ands	r3, r1
 8005950:	4293      	cmp	r3, r2
 8005952:	d003      	beq.n	800595c <__swsetup_r+0x88>
 8005954:	0021      	movs	r1, r4
 8005956:	0028      	movs	r0, r5
 8005958:	f001 f952 	bl	8006c00 <__smakebuf_r>
 800595c:	220c      	movs	r2, #12
 800595e:	5ea3      	ldrsh	r3, [r4, r2]
 8005960:	2001      	movs	r0, #1
 8005962:	001a      	movs	r2, r3
 8005964:	b299      	uxth	r1, r3
 8005966:	4002      	ands	r2, r0
 8005968:	4203      	tst	r3, r0
 800596a:	d00f      	beq.n	800598c <__swsetup_r+0xb8>
 800596c:	2200      	movs	r2, #0
 800596e:	60a2      	str	r2, [r4, #8]
 8005970:	6962      	ldr	r2, [r4, #20]
 8005972:	4252      	negs	r2, r2
 8005974:	61a2      	str	r2, [r4, #24]
 8005976:	2000      	movs	r0, #0
 8005978:	6922      	ldr	r2, [r4, #16]
 800597a:	4282      	cmp	r2, r0
 800597c:	d1c4      	bne.n	8005908 <__swsetup_r+0x34>
 800597e:	060a      	lsls	r2, r1, #24
 8005980:	d5c2      	bpl.n	8005908 <__swsetup_r+0x34>
 8005982:	2240      	movs	r2, #64	; 0x40
 8005984:	4313      	orrs	r3, r2
 8005986:	81a3      	strh	r3, [r4, #12]
 8005988:	3801      	subs	r0, #1
 800598a:	e7bd      	b.n	8005908 <__swsetup_r+0x34>
 800598c:	0788      	lsls	r0, r1, #30
 800598e:	d400      	bmi.n	8005992 <__swsetup_r+0xbe>
 8005990:	6962      	ldr	r2, [r4, #20]
 8005992:	60a2      	str	r2, [r4, #8]
 8005994:	e7ef      	b.n	8005976 <__swsetup_r+0xa2>
 8005996:	46c0      	nop			; (mov r8, r8)
 8005998:	2000000c 	.word	0x2000000c

0800599c <register_fini>:
 800599c:	4b03      	ldr	r3, [pc, #12]	; (80059ac <register_fini+0x10>)
 800599e:	b510      	push	{r4, lr}
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	d002      	beq.n	80059aa <register_fini+0xe>
 80059a4:	4802      	ldr	r0, [pc, #8]	; (80059b0 <register_fini+0x14>)
 80059a6:	f000 f805 	bl	80059b4 <atexit>
 80059aa:	bd10      	pop	{r4, pc}
 80059ac:	00000000 	.word	0x00000000
 80059b0:	08006919 	.word	0x08006919

080059b4 <atexit>:
 80059b4:	2300      	movs	r3, #0
 80059b6:	b510      	push	{r4, lr}
 80059b8:	0001      	movs	r1, r0
 80059ba:	001a      	movs	r2, r3
 80059bc:	0018      	movs	r0, r3
 80059be:	f002 fd23 	bl	8008408 <__register_exitproc>
 80059c2:	bd10      	pop	{r4, pc}

080059c4 <quorem>:
 80059c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059c6:	0006      	movs	r6, r0
 80059c8:	690d      	ldr	r5, [r1, #16]
 80059ca:	6933      	ldr	r3, [r6, #16]
 80059cc:	b087      	sub	sp, #28
 80059ce:	2000      	movs	r0, #0
 80059d0:	9102      	str	r1, [sp, #8]
 80059d2:	42ab      	cmp	r3, r5
 80059d4:	db6b      	blt.n	8005aae <quorem+0xea>
 80059d6:	000b      	movs	r3, r1
 80059d8:	3d01      	subs	r5, #1
 80059da:	00ac      	lsls	r4, r5, #2
 80059dc:	3314      	adds	r3, #20
 80059de:	9305      	str	r3, [sp, #20]
 80059e0:	191b      	adds	r3, r3, r4
 80059e2:	9303      	str	r3, [sp, #12]
 80059e4:	0033      	movs	r3, r6
 80059e6:	3314      	adds	r3, #20
 80059e8:	9301      	str	r3, [sp, #4]
 80059ea:	191c      	adds	r4, r3, r4
 80059ec:	9b03      	ldr	r3, [sp, #12]
 80059ee:	6827      	ldr	r7, [r4, #0]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	0038      	movs	r0, r7
 80059f4:	9300      	str	r3, [sp, #0]
 80059f6:	3301      	adds	r3, #1
 80059f8:	0019      	movs	r1, r3
 80059fa:	9304      	str	r3, [sp, #16]
 80059fc:	f7fa fb9c 	bl	8000138 <__udivsi3>
 8005a00:	9b04      	ldr	r3, [sp, #16]
 8005a02:	9000      	str	r0, [sp, #0]
 8005a04:	429f      	cmp	r7, r3
 8005a06:	d329      	bcc.n	8005a5c <quorem+0x98>
 8005a08:	2300      	movs	r3, #0
 8005a0a:	469c      	mov	ip, r3
 8005a0c:	9801      	ldr	r0, [sp, #4]
 8005a0e:	9f05      	ldr	r7, [sp, #20]
 8005a10:	9304      	str	r3, [sp, #16]
 8005a12:	cf08      	ldmia	r7!, {r3}
 8005a14:	9a00      	ldr	r2, [sp, #0]
 8005a16:	b299      	uxth	r1, r3
 8005a18:	4351      	muls	r1, r2
 8005a1a:	0c1b      	lsrs	r3, r3, #16
 8005a1c:	4353      	muls	r3, r2
 8005a1e:	4461      	add	r1, ip
 8005a20:	0c0a      	lsrs	r2, r1, #16
 8005a22:	189b      	adds	r3, r3, r2
 8005a24:	0c1a      	lsrs	r2, r3, #16
 8005a26:	9305      	str	r3, [sp, #20]
 8005a28:	6803      	ldr	r3, [r0, #0]
 8005a2a:	4694      	mov	ip, r2
 8005a2c:	b29a      	uxth	r2, r3
 8005a2e:	9b04      	ldr	r3, [sp, #16]
 8005a30:	b289      	uxth	r1, r1
 8005a32:	18d2      	adds	r2, r2, r3
 8005a34:	6803      	ldr	r3, [r0, #0]
 8005a36:	1a52      	subs	r2, r2, r1
 8005a38:	0c19      	lsrs	r1, r3, #16
 8005a3a:	466b      	mov	r3, sp
 8005a3c:	8a9b      	ldrh	r3, [r3, #20]
 8005a3e:	1acb      	subs	r3, r1, r3
 8005a40:	1411      	asrs	r1, r2, #16
 8005a42:	185b      	adds	r3, r3, r1
 8005a44:	1419      	asrs	r1, r3, #16
 8005a46:	b292      	uxth	r2, r2
 8005a48:	041b      	lsls	r3, r3, #16
 8005a4a:	431a      	orrs	r2, r3
 8005a4c:	9b03      	ldr	r3, [sp, #12]
 8005a4e:	9104      	str	r1, [sp, #16]
 8005a50:	c004      	stmia	r0!, {r2}
 8005a52:	42bb      	cmp	r3, r7
 8005a54:	d2dd      	bcs.n	8005a12 <quorem+0x4e>
 8005a56:	6823      	ldr	r3, [r4, #0]
 8005a58:	2b00      	cmp	r3, #0
 8005a5a:	d02e      	beq.n	8005aba <quorem+0xf6>
 8005a5c:	0030      	movs	r0, r6
 8005a5e:	9902      	ldr	r1, [sp, #8]
 8005a60:	f001 fd80 	bl	8007564 <__mcmp>
 8005a64:	2800      	cmp	r0, #0
 8005a66:	db21      	blt.n	8005aac <quorem+0xe8>
 8005a68:	0030      	movs	r0, r6
 8005a6a:	2400      	movs	r4, #0
 8005a6c:	9b00      	ldr	r3, [sp, #0]
 8005a6e:	9902      	ldr	r1, [sp, #8]
 8005a70:	3301      	adds	r3, #1
 8005a72:	9300      	str	r3, [sp, #0]
 8005a74:	3014      	adds	r0, #20
 8005a76:	3114      	adds	r1, #20
 8005a78:	6802      	ldr	r2, [r0, #0]
 8005a7a:	c908      	ldmia	r1!, {r3}
 8005a7c:	b292      	uxth	r2, r2
 8005a7e:	1914      	adds	r4, r2, r4
 8005a80:	b29a      	uxth	r2, r3
 8005a82:	1aa2      	subs	r2, r4, r2
 8005a84:	6804      	ldr	r4, [r0, #0]
 8005a86:	0c1b      	lsrs	r3, r3, #16
 8005a88:	0c24      	lsrs	r4, r4, #16
 8005a8a:	1ae3      	subs	r3, r4, r3
 8005a8c:	1414      	asrs	r4, r2, #16
 8005a8e:	191b      	adds	r3, r3, r4
 8005a90:	141c      	asrs	r4, r3, #16
 8005a92:	b292      	uxth	r2, r2
 8005a94:	041b      	lsls	r3, r3, #16
 8005a96:	4313      	orrs	r3, r2
 8005a98:	c008      	stmia	r0!, {r3}
 8005a9a:	9b03      	ldr	r3, [sp, #12]
 8005a9c:	428b      	cmp	r3, r1
 8005a9e:	d2eb      	bcs.n	8005a78 <quorem+0xb4>
 8005aa0:	9a01      	ldr	r2, [sp, #4]
 8005aa2:	00ab      	lsls	r3, r5, #2
 8005aa4:	18d3      	adds	r3, r2, r3
 8005aa6:	681a      	ldr	r2, [r3, #0]
 8005aa8:	2a00      	cmp	r2, #0
 8005aaa:	d010      	beq.n	8005ace <quorem+0x10a>
 8005aac:	9800      	ldr	r0, [sp, #0]
 8005aae:	b007      	add	sp, #28
 8005ab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ab2:	6823      	ldr	r3, [r4, #0]
 8005ab4:	2b00      	cmp	r3, #0
 8005ab6:	d104      	bne.n	8005ac2 <quorem+0xfe>
 8005ab8:	3d01      	subs	r5, #1
 8005aba:	9b01      	ldr	r3, [sp, #4]
 8005abc:	3c04      	subs	r4, #4
 8005abe:	42a3      	cmp	r3, r4
 8005ac0:	d3f7      	bcc.n	8005ab2 <quorem+0xee>
 8005ac2:	6135      	str	r5, [r6, #16]
 8005ac4:	e7ca      	b.n	8005a5c <quorem+0x98>
 8005ac6:	681a      	ldr	r2, [r3, #0]
 8005ac8:	2a00      	cmp	r2, #0
 8005aca:	d104      	bne.n	8005ad6 <quorem+0x112>
 8005acc:	3d01      	subs	r5, #1
 8005ace:	9a01      	ldr	r2, [sp, #4]
 8005ad0:	3b04      	subs	r3, #4
 8005ad2:	429a      	cmp	r2, r3
 8005ad4:	d3f7      	bcc.n	8005ac6 <quorem+0x102>
 8005ad6:	6135      	str	r5, [r6, #16]
 8005ad8:	e7e8      	b.n	8005aac <quorem+0xe8>
	...

08005adc <_dtoa_r>:
 8005adc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ade:	0014      	movs	r4, r2
 8005ae0:	001d      	movs	r5, r3
 8005ae2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8005ae4:	b09d      	sub	sp, #116	; 0x74
 8005ae6:	940a      	str	r4, [sp, #40]	; 0x28
 8005ae8:	950b      	str	r5, [sp, #44]	; 0x2c
 8005aea:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8005aec:	9003      	str	r0, [sp, #12]
 8005aee:	2900      	cmp	r1, #0
 8005af0:	d009      	beq.n	8005b06 <_dtoa_r+0x2a>
 8005af2:	2301      	movs	r3, #1
 8005af4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8005af6:	4093      	lsls	r3, r2
 8005af8:	604a      	str	r2, [r1, #4]
 8005afa:	608b      	str	r3, [r1, #8]
 8005afc:	f001 fb24 	bl	8007148 <_Bfree>
 8005b00:	2300      	movs	r3, #0
 8005b02:	9a03      	ldr	r2, [sp, #12]
 8005b04:	6413      	str	r3, [r2, #64]	; 0x40
 8005b06:	2d00      	cmp	r5, #0
 8005b08:	da1f      	bge.n	8005b4a <_dtoa_r+0x6e>
 8005b0a:	2301      	movs	r3, #1
 8005b0c:	6033      	str	r3, [r6, #0]
 8005b0e:	006b      	lsls	r3, r5, #1
 8005b10:	085b      	lsrs	r3, r3, #1
 8005b12:	930b      	str	r3, [sp, #44]	; 0x2c
 8005b14:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005b16:	4bb9      	ldr	r3, [pc, #740]	; (8005dfc <_dtoa_r+0x320>)
 8005b18:	003a      	movs	r2, r7
 8005b1a:	9318      	str	r3, [sp, #96]	; 0x60
 8005b1c:	401a      	ands	r2, r3
 8005b1e:	429a      	cmp	r2, r3
 8005b20:	d116      	bne.n	8005b50 <_dtoa_r+0x74>
 8005b22:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005b24:	4bb6      	ldr	r3, [pc, #728]	; (8005e00 <_dtoa_r+0x324>)
 8005b26:	6013      	str	r3, [r2, #0]
 8005b28:	033a      	lsls	r2, r7, #12
 8005b2a:	0b12      	lsrs	r2, r2, #12
 8005b2c:	4314      	orrs	r4, r2
 8005b2e:	d101      	bne.n	8005b34 <_dtoa_r+0x58>
 8005b30:	f000 fda4 	bl	800667c <_dtoa_r+0xba0>
 8005b34:	48b3      	ldr	r0, [pc, #716]	; (8005e04 <_dtoa_r+0x328>)
 8005b36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005b38:	9005      	str	r0, [sp, #20]
 8005b3a:	2b00      	cmp	r3, #0
 8005b3c:	d002      	beq.n	8005b44 <_dtoa_r+0x68>
 8005b3e:	4bb2      	ldr	r3, [pc, #712]	; (8005e08 <_dtoa_r+0x32c>)
 8005b40:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005b42:	6013      	str	r3, [r2, #0]
 8005b44:	9805      	ldr	r0, [sp, #20]
 8005b46:	b01d      	add	sp, #116	; 0x74
 8005b48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005b4a:	2300      	movs	r3, #0
 8005b4c:	6033      	str	r3, [r6, #0]
 8005b4e:	e7e1      	b.n	8005b14 <_dtoa_r+0x38>
 8005b50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005b52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005b54:	9210      	str	r2, [sp, #64]	; 0x40
 8005b56:	9311      	str	r3, [sp, #68]	; 0x44
 8005b58:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005b5a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005b5c:	2200      	movs	r2, #0
 8005b5e:	2300      	movs	r3, #0
 8005b60:	f7fa fc70 	bl	8000444 <__aeabi_dcmpeq>
 8005b64:	1e06      	subs	r6, r0, #0
 8005b66:	d00b      	beq.n	8005b80 <_dtoa_r+0xa4>
 8005b68:	2301      	movs	r3, #1
 8005b6a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005b6c:	6013      	str	r3, [r2, #0]
 8005b6e:	4ba7      	ldr	r3, [pc, #668]	; (8005e0c <_dtoa_r+0x330>)
 8005b70:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005b72:	9305      	str	r3, [sp, #20]
 8005b74:	2a00      	cmp	r2, #0
 8005b76:	d0e5      	beq.n	8005b44 <_dtoa_r+0x68>
 8005b78:	4aa5      	ldr	r2, [pc, #660]	; (8005e10 <_dtoa_r+0x334>)
 8005b7a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005b7c:	600a      	str	r2, [r1, #0]
 8005b7e:	e7e1      	b.n	8005b44 <_dtoa_r+0x68>
 8005b80:	ab1a      	add	r3, sp, #104	; 0x68
 8005b82:	9301      	str	r3, [sp, #4]
 8005b84:	ab1b      	add	r3, sp, #108	; 0x6c
 8005b86:	9300      	str	r3, [sp, #0]
 8005b88:	9803      	ldr	r0, [sp, #12]
 8005b8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005b8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005b8e:	f001 fd9d 	bl	80076cc <__d2b>
 8005b92:	007b      	lsls	r3, r7, #1
 8005b94:	9004      	str	r0, [sp, #16]
 8005b96:	0d5b      	lsrs	r3, r3, #21
 8005b98:	d100      	bne.n	8005b9c <_dtoa_r+0xc0>
 8005b9a:	e07c      	b.n	8005c96 <_dtoa_r+0x1ba>
 8005b9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005b9e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005ba0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005ba2:	4c9c      	ldr	r4, [pc, #624]	; (8005e14 <_dtoa_r+0x338>)
 8005ba4:	0312      	lsls	r2, r2, #12
 8005ba6:	0b12      	lsrs	r2, r2, #12
 8005ba8:	4314      	orrs	r4, r2
 8005baa:	0021      	movs	r1, r4
 8005bac:	4a9a      	ldr	r2, [pc, #616]	; (8005e18 <_dtoa_r+0x33c>)
 8005bae:	9616      	str	r6, [sp, #88]	; 0x58
 8005bb0:	189f      	adds	r7, r3, r2
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	4b99      	ldr	r3, [pc, #612]	; (8005e1c <_dtoa_r+0x340>)
 8005bb6:	f7fb ff3b 	bl	8001a30 <__aeabi_dsub>
 8005bba:	4a99      	ldr	r2, [pc, #612]	; (8005e20 <_dtoa_r+0x344>)
 8005bbc:	4b99      	ldr	r3, [pc, #612]	; (8005e24 <_dtoa_r+0x348>)
 8005bbe:	f7fb fccb 	bl	8001558 <__aeabi_dmul>
 8005bc2:	4a99      	ldr	r2, [pc, #612]	; (8005e28 <_dtoa_r+0x34c>)
 8005bc4:	4b99      	ldr	r3, [pc, #612]	; (8005e2c <_dtoa_r+0x350>)
 8005bc6:	f7fa fd57 	bl	8000678 <__aeabi_dadd>
 8005bca:	0004      	movs	r4, r0
 8005bcc:	0038      	movs	r0, r7
 8005bce:	000d      	movs	r5, r1
 8005bd0:	f7fc fb14 	bl	80021fc <__aeabi_i2d>
 8005bd4:	4a96      	ldr	r2, [pc, #600]	; (8005e30 <_dtoa_r+0x354>)
 8005bd6:	4b97      	ldr	r3, [pc, #604]	; (8005e34 <_dtoa_r+0x358>)
 8005bd8:	f7fb fcbe 	bl	8001558 <__aeabi_dmul>
 8005bdc:	0002      	movs	r2, r0
 8005bde:	000b      	movs	r3, r1
 8005be0:	0020      	movs	r0, r4
 8005be2:	0029      	movs	r1, r5
 8005be4:	f7fa fd48 	bl	8000678 <__aeabi_dadd>
 8005be8:	0004      	movs	r4, r0
 8005bea:	000d      	movs	r5, r1
 8005bec:	f7fc fad0 	bl	8002190 <__aeabi_d2iz>
 8005bf0:	2200      	movs	r2, #0
 8005bf2:	9002      	str	r0, [sp, #8]
 8005bf4:	2300      	movs	r3, #0
 8005bf6:	0020      	movs	r0, r4
 8005bf8:	0029      	movs	r1, r5
 8005bfa:	f7fa fc29 	bl	8000450 <__aeabi_dcmplt>
 8005bfe:	2800      	cmp	r0, #0
 8005c00:	d00b      	beq.n	8005c1a <_dtoa_r+0x13e>
 8005c02:	9802      	ldr	r0, [sp, #8]
 8005c04:	f7fc fafa 	bl	80021fc <__aeabi_i2d>
 8005c08:	002b      	movs	r3, r5
 8005c0a:	0022      	movs	r2, r4
 8005c0c:	f7fa fc1a 	bl	8000444 <__aeabi_dcmpeq>
 8005c10:	4243      	negs	r3, r0
 8005c12:	4158      	adcs	r0, r3
 8005c14:	9b02      	ldr	r3, [sp, #8]
 8005c16:	1a1b      	subs	r3, r3, r0
 8005c18:	9302      	str	r3, [sp, #8]
 8005c1a:	2301      	movs	r3, #1
 8005c1c:	9314      	str	r3, [sp, #80]	; 0x50
 8005c1e:	9b02      	ldr	r3, [sp, #8]
 8005c20:	2b16      	cmp	r3, #22
 8005c22:	d80f      	bhi.n	8005c44 <_dtoa_r+0x168>
 8005c24:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005c26:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005c28:	00da      	lsls	r2, r3, #3
 8005c2a:	4b83      	ldr	r3, [pc, #524]	; (8005e38 <_dtoa_r+0x35c>)
 8005c2c:	189b      	adds	r3, r3, r2
 8005c2e:	681a      	ldr	r2, [r3, #0]
 8005c30:	685b      	ldr	r3, [r3, #4]
 8005c32:	f7fa fc0d 	bl	8000450 <__aeabi_dcmplt>
 8005c36:	2800      	cmp	r0, #0
 8005c38:	d049      	beq.n	8005cce <_dtoa_r+0x1f2>
 8005c3a:	9b02      	ldr	r3, [sp, #8]
 8005c3c:	3b01      	subs	r3, #1
 8005c3e:	9302      	str	r3, [sp, #8]
 8005c40:	2300      	movs	r3, #0
 8005c42:	9314      	str	r3, [sp, #80]	; 0x50
 8005c44:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005c46:	1bdf      	subs	r7, r3, r7
 8005c48:	2300      	movs	r3, #0
 8005c4a:	9309      	str	r3, [sp, #36]	; 0x24
 8005c4c:	003b      	movs	r3, r7
 8005c4e:	3b01      	subs	r3, #1
 8005c50:	930d      	str	r3, [sp, #52]	; 0x34
 8005c52:	d504      	bpl.n	8005c5e <_dtoa_r+0x182>
 8005c54:	2301      	movs	r3, #1
 8005c56:	1bdb      	subs	r3, r3, r7
 8005c58:	9309      	str	r3, [sp, #36]	; 0x24
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	930d      	str	r3, [sp, #52]	; 0x34
 8005c5e:	9b02      	ldr	r3, [sp, #8]
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	db36      	blt.n	8005cd2 <_dtoa_r+0x1f6>
 8005c64:	9a02      	ldr	r2, [sp, #8]
 8005c66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005c68:	4694      	mov	ip, r2
 8005c6a:	4463      	add	r3, ip
 8005c6c:	930d      	str	r3, [sp, #52]	; 0x34
 8005c6e:	2300      	movs	r3, #0
 8005c70:	9213      	str	r2, [sp, #76]	; 0x4c
 8005c72:	930e      	str	r3, [sp, #56]	; 0x38
 8005c74:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005c76:	2401      	movs	r4, #1
 8005c78:	2b09      	cmp	r3, #9
 8005c7a:	d865      	bhi.n	8005d48 <_dtoa_r+0x26c>
 8005c7c:	2b05      	cmp	r3, #5
 8005c7e:	dd02      	ble.n	8005c86 <_dtoa_r+0x1aa>
 8005c80:	2400      	movs	r4, #0
 8005c82:	3b04      	subs	r3, #4
 8005c84:	9322      	str	r3, [sp, #136]	; 0x88
 8005c86:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005c88:	1e98      	subs	r0, r3, #2
 8005c8a:	2803      	cmp	r0, #3
 8005c8c:	d865      	bhi.n	8005d5a <_dtoa_r+0x27e>
 8005c8e:	f7fa fa3f 	bl	8000110 <__gnu_thumb1_case_uqi>
 8005c92:	3629      	.short	0x3629
 8005c94:	5934      	.short	0x5934
 8005c96:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005c98:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005c9a:	189e      	adds	r6, r3, r2
 8005c9c:	4b67      	ldr	r3, [pc, #412]	; (8005e3c <_dtoa_r+0x360>)
 8005c9e:	18f2      	adds	r2, r6, r3
 8005ca0:	2a20      	cmp	r2, #32
 8005ca2:	dd0f      	ble.n	8005cc4 <_dtoa_r+0x1e8>
 8005ca4:	2340      	movs	r3, #64	; 0x40
 8005ca6:	0038      	movs	r0, r7
 8005ca8:	1a9b      	subs	r3, r3, r2
 8005caa:	4098      	lsls	r0, r3
 8005cac:	4b64      	ldr	r3, [pc, #400]	; (8005e40 <_dtoa_r+0x364>)
 8005cae:	18f3      	adds	r3, r6, r3
 8005cb0:	40dc      	lsrs	r4, r3
 8005cb2:	4320      	orrs	r0, r4
 8005cb4:	f7fc fad2 	bl	800225c <__aeabi_ui2d>
 8005cb8:	2301      	movs	r3, #1
 8005cba:	4c62      	ldr	r4, [pc, #392]	; (8005e44 <_dtoa_r+0x368>)
 8005cbc:	1e77      	subs	r7, r6, #1
 8005cbe:	1909      	adds	r1, r1, r4
 8005cc0:	9316      	str	r3, [sp, #88]	; 0x58
 8005cc2:	e776      	b.n	8005bb2 <_dtoa_r+0xd6>
 8005cc4:	2320      	movs	r3, #32
 8005cc6:	0020      	movs	r0, r4
 8005cc8:	1a9b      	subs	r3, r3, r2
 8005cca:	4098      	lsls	r0, r3
 8005ccc:	e7f2      	b.n	8005cb4 <_dtoa_r+0x1d8>
 8005cce:	9014      	str	r0, [sp, #80]	; 0x50
 8005cd0:	e7b8      	b.n	8005c44 <_dtoa_r+0x168>
 8005cd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005cd4:	9a02      	ldr	r2, [sp, #8]
 8005cd6:	1a9b      	subs	r3, r3, r2
 8005cd8:	9309      	str	r3, [sp, #36]	; 0x24
 8005cda:	4253      	negs	r3, r2
 8005cdc:	930e      	str	r3, [sp, #56]	; 0x38
 8005cde:	2300      	movs	r3, #0
 8005ce0:	9313      	str	r3, [sp, #76]	; 0x4c
 8005ce2:	e7c7      	b.n	8005c74 <_dtoa_r+0x198>
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	9312      	str	r3, [sp, #72]	; 0x48
 8005ce8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005cea:	2b00      	cmp	r3, #0
 8005cec:	dc39      	bgt.n	8005d62 <_dtoa_r+0x286>
 8005cee:	2301      	movs	r3, #1
 8005cf0:	001a      	movs	r2, r3
 8005cf2:	930c      	str	r3, [sp, #48]	; 0x30
 8005cf4:	9308      	str	r3, [sp, #32]
 8005cf6:	9223      	str	r2, [sp, #140]	; 0x8c
 8005cf8:	e00d      	b.n	8005d16 <_dtoa_r+0x23a>
 8005cfa:	2301      	movs	r3, #1
 8005cfc:	e7f3      	b.n	8005ce6 <_dtoa_r+0x20a>
 8005cfe:	2300      	movs	r3, #0
 8005d00:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8005d02:	9312      	str	r3, [sp, #72]	; 0x48
 8005d04:	4694      	mov	ip, r2
 8005d06:	9b02      	ldr	r3, [sp, #8]
 8005d08:	4463      	add	r3, ip
 8005d0a:	930c      	str	r3, [sp, #48]	; 0x30
 8005d0c:	3301      	adds	r3, #1
 8005d0e:	9308      	str	r3, [sp, #32]
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	dc00      	bgt.n	8005d16 <_dtoa_r+0x23a>
 8005d14:	2301      	movs	r3, #1
 8005d16:	2200      	movs	r2, #0
 8005d18:	9903      	ldr	r1, [sp, #12]
 8005d1a:	644a      	str	r2, [r1, #68]	; 0x44
 8005d1c:	3204      	adds	r2, #4
 8005d1e:	0010      	movs	r0, r2
 8005d20:	9903      	ldr	r1, [sp, #12]
 8005d22:	3014      	adds	r0, #20
 8005d24:	6c49      	ldr	r1, [r1, #68]	; 0x44
 8005d26:	4298      	cmp	r0, r3
 8005d28:	d91f      	bls.n	8005d6a <_dtoa_r+0x28e>
 8005d2a:	9803      	ldr	r0, [sp, #12]
 8005d2c:	f001 f9e4 	bl	80070f8 <_Balloc>
 8005d30:	9005      	str	r0, [sp, #20]
 8005d32:	2800      	cmp	r0, #0
 8005d34:	d11e      	bne.n	8005d74 <_dtoa_r+0x298>
 8005d36:	21d5      	movs	r1, #213	; 0xd5
 8005d38:	0002      	movs	r2, r0
 8005d3a:	4b43      	ldr	r3, [pc, #268]	; (8005e48 <_dtoa_r+0x36c>)
 8005d3c:	0049      	lsls	r1, r1, #1
 8005d3e:	4843      	ldr	r0, [pc, #268]	; (8005e4c <_dtoa_r+0x370>)
 8005d40:	f002 fba4 	bl	800848c <__assert_func>
 8005d44:	2301      	movs	r3, #1
 8005d46:	e7db      	b.n	8005d00 <_dtoa_r+0x224>
 8005d48:	2300      	movs	r3, #0
 8005d4a:	9412      	str	r4, [sp, #72]	; 0x48
 8005d4c:	9322      	str	r3, [sp, #136]	; 0x88
 8005d4e:	3b01      	subs	r3, #1
 8005d50:	930c      	str	r3, [sp, #48]	; 0x30
 8005d52:	9308      	str	r3, [sp, #32]
 8005d54:	2200      	movs	r2, #0
 8005d56:	3313      	adds	r3, #19
 8005d58:	e7cd      	b.n	8005cf6 <_dtoa_r+0x21a>
 8005d5a:	2301      	movs	r3, #1
 8005d5c:	9312      	str	r3, [sp, #72]	; 0x48
 8005d5e:	3b02      	subs	r3, #2
 8005d60:	e7f6      	b.n	8005d50 <_dtoa_r+0x274>
 8005d62:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005d64:	930c      	str	r3, [sp, #48]	; 0x30
 8005d66:	9308      	str	r3, [sp, #32]
 8005d68:	e7d5      	b.n	8005d16 <_dtoa_r+0x23a>
 8005d6a:	9803      	ldr	r0, [sp, #12]
 8005d6c:	3101      	adds	r1, #1
 8005d6e:	6441      	str	r1, [r0, #68]	; 0x44
 8005d70:	0052      	lsls	r2, r2, #1
 8005d72:	e7d4      	b.n	8005d1e <_dtoa_r+0x242>
 8005d74:	9b03      	ldr	r3, [sp, #12]
 8005d76:	9a05      	ldr	r2, [sp, #20]
 8005d78:	641a      	str	r2, [r3, #64]	; 0x40
 8005d7a:	9b08      	ldr	r3, [sp, #32]
 8005d7c:	2b0e      	cmp	r3, #14
 8005d7e:	d900      	bls.n	8005d82 <_dtoa_r+0x2a6>
 8005d80:	e0df      	b.n	8005f42 <_dtoa_r+0x466>
 8005d82:	2c00      	cmp	r4, #0
 8005d84:	d100      	bne.n	8005d88 <_dtoa_r+0x2ac>
 8005d86:	e0dc      	b.n	8005f42 <_dtoa_r+0x466>
 8005d88:	9b02      	ldr	r3, [sp, #8]
 8005d8a:	2b00      	cmp	r3, #0
 8005d8c:	dd62      	ble.n	8005e54 <_dtoa_r+0x378>
 8005d8e:	001a      	movs	r2, r3
 8005d90:	210f      	movs	r1, #15
 8005d92:	4b29      	ldr	r3, [pc, #164]	; (8005e38 <_dtoa_r+0x35c>)
 8005d94:	400a      	ands	r2, r1
 8005d96:	00d2      	lsls	r2, r2, #3
 8005d98:	189b      	adds	r3, r3, r2
 8005d9a:	681d      	ldr	r5, [r3, #0]
 8005d9c:	685e      	ldr	r6, [r3, #4]
 8005d9e:	9b02      	ldr	r3, [sp, #8]
 8005da0:	2702      	movs	r7, #2
 8005da2:	111c      	asrs	r4, r3, #4
 8005da4:	05db      	lsls	r3, r3, #23
 8005da6:	d50a      	bpl.n	8005dbe <_dtoa_r+0x2e2>
 8005da8:	4b29      	ldr	r3, [pc, #164]	; (8005e50 <_dtoa_r+0x374>)
 8005daa:	400c      	ands	r4, r1
 8005dac:	6a1a      	ldr	r2, [r3, #32]
 8005dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005db0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005db2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005db4:	f7fa ffca 	bl	8000d4c <__aeabi_ddiv>
 8005db8:	900a      	str	r0, [sp, #40]	; 0x28
 8005dba:	910b      	str	r1, [sp, #44]	; 0x2c
 8005dbc:	3701      	adds	r7, #1
 8005dbe:	4b24      	ldr	r3, [pc, #144]	; (8005e50 <_dtoa_r+0x374>)
 8005dc0:	9306      	str	r3, [sp, #24]
 8005dc2:	2c00      	cmp	r4, #0
 8005dc4:	d108      	bne.n	8005dd8 <_dtoa_r+0x2fc>
 8005dc6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005dc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005dca:	002a      	movs	r2, r5
 8005dcc:	0033      	movs	r3, r6
 8005dce:	f7fa ffbd 	bl	8000d4c <__aeabi_ddiv>
 8005dd2:	900a      	str	r0, [sp, #40]	; 0x28
 8005dd4:	910b      	str	r1, [sp, #44]	; 0x2c
 8005dd6:	e058      	b.n	8005e8a <_dtoa_r+0x3ae>
 8005dd8:	2301      	movs	r3, #1
 8005dda:	421c      	tst	r4, r3
 8005ddc:	d009      	beq.n	8005df2 <_dtoa_r+0x316>
 8005dde:	18ff      	adds	r7, r7, r3
 8005de0:	9b06      	ldr	r3, [sp, #24]
 8005de2:	0028      	movs	r0, r5
 8005de4:	681a      	ldr	r2, [r3, #0]
 8005de6:	685b      	ldr	r3, [r3, #4]
 8005de8:	0031      	movs	r1, r6
 8005dea:	f7fb fbb5 	bl	8001558 <__aeabi_dmul>
 8005dee:	0005      	movs	r5, r0
 8005df0:	000e      	movs	r6, r1
 8005df2:	9b06      	ldr	r3, [sp, #24]
 8005df4:	1064      	asrs	r4, r4, #1
 8005df6:	3308      	adds	r3, #8
 8005df8:	e7e2      	b.n	8005dc0 <_dtoa_r+0x2e4>
 8005dfa:	46c0      	nop			; (mov r8, r8)
 8005dfc:	7ff00000 	.word	0x7ff00000
 8005e00:	0000270f 	.word	0x0000270f
 8005e04:	08009124 	.word	0x08009124
 8005e08:	08009127 	.word	0x08009127
 8005e0c:	08009102 	.word	0x08009102
 8005e10:	08009103 	.word	0x08009103
 8005e14:	3ff00000 	.word	0x3ff00000
 8005e18:	fffffc01 	.word	0xfffffc01
 8005e1c:	3ff80000 	.word	0x3ff80000
 8005e20:	636f4361 	.word	0x636f4361
 8005e24:	3fd287a7 	.word	0x3fd287a7
 8005e28:	8b60c8b3 	.word	0x8b60c8b3
 8005e2c:	3fc68a28 	.word	0x3fc68a28
 8005e30:	509f79fb 	.word	0x509f79fb
 8005e34:	3fd34413 	.word	0x3fd34413
 8005e38:	08009230 	.word	0x08009230
 8005e3c:	00000432 	.word	0x00000432
 8005e40:	00000412 	.word	0x00000412
 8005e44:	fe100000 	.word	0xfe100000
 8005e48:	08009131 	.word	0x08009131
 8005e4c:	08009142 	.word	0x08009142
 8005e50:	08009208 	.word	0x08009208
 8005e54:	9b02      	ldr	r3, [sp, #8]
 8005e56:	2702      	movs	r7, #2
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d016      	beq.n	8005e8a <_dtoa_r+0x3ae>
 8005e5c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005e5e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005e60:	425c      	negs	r4, r3
 8005e62:	230f      	movs	r3, #15
 8005e64:	4ad4      	ldr	r2, [pc, #848]	; (80061b8 <_dtoa_r+0x6dc>)
 8005e66:	4023      	ands	r3, r4
 8005e68:	00db      	lsls	r3, r3, #3
 8005e6a:	18d3      	adds	r3, r2, r3
 8005e6c:	681a      	ldr	r2, [r3, #0]
 8005e6e:	685b      	ldr	r3, [r3, #4]
 8005e70:	f7fb fb72 	bl	8001558 <__aeabi_dmul>
 8005e74:	2601      	movs	r6, #1
 8005e76:	2300      	movs	r3, #0
 8005e78:	900a      	str	r0, [sp, #40]	; 0x28
 8005e7a:	910b      	str	r1, [sp, #44]	; 0x2c
 8005e7c:	4dcf      	ldr	r5, [pc, #828]	; (80061bc <_dtoa_r+0x6e0>)
 8005e7e:	1124      	asrs	r4, r4, #4
 8005e80:	2c00      	cmp	r4, #0
 8005e82:	d000      	beq.n	8005e86 <_dtoa_r+0x3aa>
 8005e84:	e08d      	b.n	8005fa2 <_dtoa_r+0x4c6>
 8005e86:	2b00      	cmp	r3, #0
 8005e88:	d1a3      	bne.n	8005dd2 <_dtoa_r+0x2f6>
 8005e8a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d100      	bne.n	8005e92 <_dtoa_r+0x3b6>
 8005e90:	e092      	b.n	8005fb8 <_dtoa_r+0x4dc>
 8005e92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005e94:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005e96:	2200      	movs	r2, #0
 8005e98:	0020      	movs	r0, r4
 8005e9a:	0029      	movs	r1, r5
 8005e9c:	4bc8      	ldr	r3, [pc, #800]	; (80061c0 <_dtoa_r+0x6e4>)
 8005e9e:	f7fa fad7 	bl	8000450 <__aeabi_dcmplt>
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	d100      	bne.n	8005ea8 <_dtoa_r+0x3cc>
 8005ea6:	e087      	b.n	8005fb8 <_dtoa_r+0x4dc>
 8005ea8:	9b08      	ldr	r3, [sp, #32]
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	d100      	bne.n	8005eb0 <_dtoa_r+0x3d4>
 8005eae:	e083      	b.n	8005fb8 <_dtoa_r+0x4dc>
 8005eb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005eb2:	2b00      	cmp	r3, #0
 8005eb4:	dd41      	ble.n	8005f3a <_dtoa_r+0x45e>
 8005eb6:	9b02      	ldr	r3, [sp, #8]
 8005eb8:	2200      	movs	r2, #0
 8005eba:	3b01      	subs	r3, #1
 8005ebc:	930f      	str	r3, [sp, #60]	; 0x3c
 8005ebe:	0020      	movs	r0, r4
 8005ec0:	0029      	movs	r1, r5
 8005ec2:	4bc0      	ldr	r3, [pc, #768]	; (80061c4 <_dtoa_r+0x6e8>)
 8005ec4:	f7fb fb48 	bl	8001558 <__aeabi_dmul>
 8005ec8:	900a      	str	r0, [sp, #40]	; 0x28
 8005eca:	910b      	str	r1, [sp, #44]	; 0x2c
 8005ecc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005ece:	3701      	adds	r7, #1
 8005ed0:	0038      	movs	r0, r7
 8005ed2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005ed4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005ed6:	f7fc f991 	bl	80021fc <__aeabi_i2d>
 8005eda:	0022      	movs	r2, r4
 8005edc:	002b      	movs	r3, r5
 8005ede:	f7fb fb3b 	bl	8001558 <__aeabi_dmul>
 8005ee2:	2200      	movs	r2, #0
 8005ee4:	4bb8      	ldr	r3, [pc, #736]	; (80061c8 <_dtoa_r+0x6ec>)
 8005ee6:	f7fa fbc7 	bl	8000678 <__aeabi_dadd>
 8005eea:	900a      	str	r0, [sp, #40]	; 0x28
 8005eec:	910b      	str	r1, [sp, #44]	; 0x2c
 8005eee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005ef0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005ef2:	9206      	str	r2, [sp, #24]
 8005ef4:	9307      	str	r3, [sp, #28]
 8005ef6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005ef8:	4ab4      	ldr	r2, [pc, #720]	; (80061cc <_dtoa_r+0x6f0>)
 8005efa:	189f      	adds	r7, r3, r2
 8005efc:	9707      	str	r7, [sp, #28]
 8005efe:	2e00      	cmp	r6, #0
 8005f00:	d15e      	bne.n	8005fc0 <_dtoa_r+0x4e4>
 8005f02:	2200      	movs	r2, #0
 8005f04:	0020      	movs	r0, r4
 8005f06:	0029      	movs	r1, r5
 8005f08:	4bb1      	ldr	r3, [pc, #708]	; (80061d0 <_dtoa_r+0x6f4>)
 8005f0a:	f7fb fd91 	bl	8001a30 <__aeabi_dsub>
 8005f0e:	003b      	movs	r3, r7
 8005f10:	9a06      	ldr	r2, [sp, #24]
 8005f12:	0004      	movs	r4, r0
 8005f14:	000d      	movs	r5, r1
 8005f16:	f7fa faaf 	bl	8000478 <__aeabi_dcmpgt>
 8005f1a:	2800      	cmp	r0, #0
 8005f1c:	d000      	beq.n	8005f20 <_dtoa_r+0x444>
 8005f1e:	e2aa      	b.n	8006476 <_dtoa_r+0x99a>
 8005f20:	48ac      	ldr	r0, [pc, #688]	; (80061d4 <_dtoa_r+0x6f8>)
 8005f22:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005f24:	4684      	mov	ip, r0
 8005f26:	4461      	add	r1, ip
 8005f28:	000b      	movs	r3, r1
 8005f2a:	0020      	movs	r0, r4
 8005f2c:	0029      	movs	r1, r5
 8005f2e:	9a06      	ldr	r2, [sp, #24]
 8005f30:	f7fa fa8e 	bl	8000450 <__aeabi_dcmplt>
 8005f34:	2800      	cmp	r0, #0
 8005f36:	d000      	beq.n	8005f3a <_dtoa_r+0x45e>
 8005f38:	e29b      	b.n	8006472 <_dtoa_r+0x996>
 8005f3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005f3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8005f3e:	930a      	str	r3, [sp, #40]	; 0x28
 8005f40:	940b      	str	r4, [sp, #44]	; 0x2c
 8005f42:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005f44:	2b00      	cmp	r3, #0
 8005f46:	da00      	bge.n	8005f4a <_dtoa_r+0x46e>
 8005f48:	e16a      	b.n	8006220 <_dtoa_r+0x744>
 8005f4a:	9a02      	ldr	r2, [sp, #8]
 8005f4c:	2a0e      	cmp	r2, #14
 8005f4e:	dd00      	ble.n	8005f52 <_dtoa_r+0x476>
 8005f50:	e166      	b.n	8006220 <_dtoa_r+0x744>
 8005f52:	4b99      	ldr	r3, [pc, #612]	; (80061b8 <_dtoa_r+0x6dc>)
 8005f54:	00d2      	lsls	r2, r2, #3
 8005f56:	189b      	adds	r3, r3, r2
 8005f58:	681e      	ldr	r6, [r3, #0]
 8005f5a:	685f      	ldr	r7, [r3, #4]
 8005f5c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	db00      	blt.n	8005f64 <_dtoa_r+0x488>
 8005f62:	e0d7      	b.n	8006114 <_dtoa_r+0x638>
 8005f64:	9b08      	ldr	r3, [sp, #32]
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	dd00      	ble.n	8005f6c <_dtoa_r+0x490>
 8005f6a:	e0d3      	b.n	8006114 <_dtoa_r+0x638>
 8005f6c:	d000      	beq.n	8005f70 <_dtoa_r+0x494>
 8005f6e:	e27f      	b.n	8006470 <_dtoa_r+0x994>
 8005f70:	2200      	movs	r2, #0
 8005f72:	0030      	movs	r0, r6
 8005f74:	0039      	movs	r1, r7
 8005f76:	4b96      	ldr	r3, [pc, #600]	; (80061d0 <_dtoa_r+0x6f4>)
 8005f78:	f7fb faee 	bl	8001558 <__aeabi_dmul>
 8005f7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005f7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f80:	f7fa fa84 	bl	800048c <__aeabi_dcmpge>
 8005f84:	9e08      	ldr	r6, [sp, #32]
 8005f86:	0037      	movs	r7, r6
 8005f88:	2800      	cmp	r0, #0
 8005f8a:	d000      	beq.n	8005f8e <_dtoa_r+0x4b2>
 8005f8c:	e256      	b.n	800643c <_dtoa_r+0x960>
 8005f8e:	9b05      	ldr	r3, [sp, #20]
 8005f90:	9a05      	ldr	r2, [sp, #20]
 8005f92:	3301      	adds	r3, #1
 8005f94:	9306      	str	r3, [sp, #24]
 8005f96:	2331      	movs	r3, #49	; 0x31
 8005f98:	7013      	strb	r3, [r2, #0]
 8005f9a:	9b02      	ldr	r3, [sp, #8]
 8005f9c:	3301      	adds	r3, #1
 8005f9e:	9302      	str	r3, [sp, #8]
 8005fa0:	e251      	b.n	8006446 <_dtoa_r+0x96a>
 8005fa2:	4234      	tst	r4, r6
 8005fa4:	d005      	beq.n	8005fb2 <_dtoa_r+0x4d6>
 8005fa6:	682a      	ldr	r2, [r5, #0]
 8005fa8:	686b      	ldr	r3, [r5, #4]
 8005faa:	f7fb fad5 	bl	8001558 <__aeabi_dmul>
 8005fae:	0033      	movs	r3, r6
 8005fb0:	3701      	adds	r7, #1
 8005fb2:	1064      	asrs	r4, r4, #1
 8005fb4:	3508      	adds	r5, #8
 8005fb6:	e763      	b.n	8005e80 <_dtoa_r+0x3a4>
 8005fb8:	9b02      	ldr	r3, [sp, #8]
 8005fba:	9e08      	ldr	r6, [sp, #32]
 8005fbc:	930f      	str	r3, [sp, #60]	; 0x3c
 8005fbe:	e787      	b.n	8005ed0 <_dtoa_r+0x3f4>
 8005fc0:	4b7d      	ldr	r3, [pc, #500]	; (80061b8 <_dtoa_r+0x6dc>)
 8005fc2:	1e72      	subs	r2, r6, #1
 8005fc4:	00d2      	lsls	r2, r2, #3
 8005fc6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005fc8:	189b      	adds	r3, r3, r2
 8005fca:	681a      	ldr	r2, [r3, #0]
 8005fcc:	685b      	ldr	r3, [r3, #4]
 8005fce:	2900      	cmp	r1, #0
 8005fd0:	d04e      	beq.n	8006070 <_dtoa_r+0x594>
 8005fd2:	2000      	movs	r0, #0
 8005fd4:	4980      	ldr	r1, [pc, #512]	; (80061d8 <_dtoa_r+0x6fc>)
 8005fd6:	f7fa feb9 	bl	8000d4c <__aeabi_ddiv>
 8005fda:	9a06      	ldr	r2, [sp, #24]
 8005fdc:	9b07      	ldr	r3, [sp, #28]
 8005fde:	f7fb fd27 	bl	8001a30 <__aeabi_dsub>
 8005fe2:	9b05      	ldr	r3, [sp, #20]
 8005fe4:	900a      	str	r0, [sp, #40]	; 0x28
 8005fe6:	910b      	str	r1, [sp, #44]	; 0x2c
 8005fe8:	9315      	str	r3, [sp, #84]	; 0x54
 8005fea:	18f3      	adds	r3, r6, r3
 8005fec:	9319      	str	r3, [sp, #100]	; 0x64
 8005fee:	0020      	movs	r0, r4
 8005ff0:	0029      	movs	r1, r5
 8005ff2:	f7fc f8cd 	bl	8002190 <__aeabi_d2iz>
 8005ff6:	9017      	str	r0, [sp, #92]	; 0x5c
 8005ff8:	f7fc f900 	bl	80021fc <__aeabi_i2d>
 8005ffc:	0002      	movs	r2, r0
 8005ffe:	000b      	movs	r3, r1
 8006000:	0020      	movs	r0, r4
 8006002:	0029      	movs	r1, r5
 8006004:	f7fb fd14 	bl	8001a30 <__aeabi_dsub>
 8006008:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800600a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 800600c:	3301      	adds	r3, #1
 800600e:	9306      	str	r3, [sp, #24]
 8006010:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006012:	3430      	adds	r4, #48	; 0x30
 8006014:	701c      	strb	r4, [r3, #0]
 8006016:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006018:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800601a:	0006      	movs	r6, r0
 800601c:	000f      	movs	r7, r1
 800601e:	f7fa fa17 	bl	8000450 <__aeabi_dcmplt>
 8006022:	2800      	cmp	r0, #0
 8006024:	d16c      	bne.n	8006100 <_dtoa_r+0x624>
 8006026:	0032      	movs	r2, r6
 8006028:	003b      	movs	r3, r7
 800602a:	2000      	movs	r0, #0
 800602c:	4964      	ldr	r1, [pc, #400]	; (80061c0 <_dtoa_r+0x6e4>)
 800602e:	f7fb fcff 	bl	8001a30 <__aeabi_dsub>
 8006032:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006034:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006036:	f7fa fa0b 	bl	8000450 <__aeabi_dcmplt>
 800603a:	2800      	cmp	r0, #0
 800603c:	d000      	beq.n	8006040 <_dtoa_r+0x564>
 800603e:	e0cf      	b.n	80061e0 <_dtoa_r+0x704>
 8006040:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006042:	9a06      	ldr	r2, [sp, #24]
 8006044:	4293      	cmp	r3, r2
 8006046:	d100      	bne.n	800604a <_dtoa_r+0x56e>
 8006048:	e777      	b.n	8005f3a <_dtoa_r+0x45e>
 800604a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800604c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800604e:	2200      	movs	r2, #0
 8006050:	4b5c      	ldr	r3, [pc, #368]	; (80061c4 <_dtoa_r+0x6e8>)
 8006052:	f7fb fa81 	bl	8001558 <__aeabi_dmul>
 8006056:	4b5b      	ldr	r3, [pc, #364]	; (80061c4 <_dtoa_r+0x6e8>)
 8006058:	900a      	str	r0, [sp, #40]	; 0x28
 800605a:	910b      	str	r1, [sp, #44]	; 0x2c
 800605c:	2200      	movs	r2, #0
 800605e:	0030      	movs	r0, r6
 8006060:	0039      	movs	r1, r7
 8006062:	f7fb fa79 	bl	8001558 <__aeabi_dmul>
 8006066:	9b06      	ldr	r3, [sp, #24]
 8006068:	0004      	movs	r4, r0
 800606a:	000d      	movs	r5, r1
 800606c:	9315      	str	r3, [sp, #84]	; 0x54
 800606e:	e7be      	b.n	8005fee <_dtoa_r+0x512>
 8006070:	9806      	ldr	r0, [sp, #24]
 8006072:	9907      	ldr	r1, [sp, #28]
 8006074:	f7fb fa70 	bl	8001558 <__aeabi_dmul>
 8006078:	9f05      	ldr	r7, [sp, #20]
 800607a:	900a      	str	r0, [sp, #40]	; 0x28
 800607c:	910b      	str	r1, [sp, #44]	; 0x2c
 800607e:	19bb      	adds	r3, r7, r6
 8006080:	9315      	str	r3, [sp, #84]	; 0x54
 8006082:	0029      	movs	r1, r5
 8006084:	0020      	movs	r0, r4
 8006086:	f7fc f883 	bl	8002190 <__aeabi_d2iz>
 800608a:	9006      	str	r0, [sp, #24]
 800608c:	f7fc f8b6 	bl	80021fc <__aeabi_i2d>
 8006090:	000b      	movs	r3, r1
 8006092:	0002      	movs	r2, r0
 8006094:	0029      	movs	r1, r5
 8006096:	0020      	movs	r0, r4
 8006098:	f7fb fcca 	bl	8001a30 <__aeabi_dsub>
 800609c:	9b06      	ldr	r3, [sp, #24]
 800609e:	0004      	movs	r4, r0
 80060a0:	3330      	adds	r3, #48	; 0x30
 80060a2:	703b      	strb	r3, [r7, #0]
 80060a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80060a6:	3701      	adds	r7, #1
 80060a8:	000d      	movs	r5, r1
 80060aa:	429f      	cmp	r7, r3
 80060ac:	d12b      	bne.n	8006106 <_dtoa_r+0x62a>
 80060ae:	980a      	ldr	r0, [sp, #40]	; 0x28
 80060b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80060b2:	9b05      	ldr	r3, [sp, #20]
 80060b4:	2200      	movs	r2, #0
 80060b6:	199b      	adds	r3, r3, r6
 80060b8:	9306      	str	r3, [sp, #24]
 80060ba:	4b47      	ldr	r3, [pc, #284]	; (80061d8 <_dtoa_r+0x6fc>)
 80060bc:	f7fa fadc 	bl	8000678 <__aeabi_dadd>
 80060c0:	0002      	movs	r2, r0
 80060c2:	000b      	movs	r3, r1
 80060c4:	0020      	movs	r0, r4
 80060c6:	0029      	movs	r1, r5
 80060c8:	f7fa f9d6 	bl	8000478 <__aeabi_dcmpgt>
 80060cc:	2800      	cmp	r0, #0
 80060ce:	d000      	beq.n	80060d2 <_dtoa_r+0x5f6>
 80060d0:	e086      	b.n	80061e0 <_dtoa_r+0x704>
 80060d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80060d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060d6:	2000      	movs	r0, #0
 80060d8:	493f      	ldr	r1, [pc, #252]	; (80061d8 <_dtoa_r+0x6fc>)
 80060da:	f7fb fca9 	bl	8001a30 <__aeabi_dsub>
 80060de:	0002      	movs	r2, r0
 80060e0:	000b      	movs	r3, r1
 80060e2:	0020      	movs	r0, r4
 80060e4:	0029      	movs	r1, r5
 80060e6:	f7fa f9b3 	bl	8000450 <__aeabi_dcmplt>
 80060ea:	2800      	cmp	r0, #0
 80060ec:	d100      	bne.n	80060f0 <_dtoa_r+0x614>
 80060ee:	e724      	b.n	8005f3a <_dtoa_r+0x45e>
 80060f0:	9b06      	ldr	r3, [sp, #24]
 80060f2:	001a      	movs	r2, r3
 80060f4:	3a01      	subs	r2, #1
 80060f6:	9206      	str	r2, [sp, #24]
 80060f8:	7812      	ldrb	r2, [r2, #0]
 80060fa:	2a30      	cmp	r2, #48	; 0x30
 80060fc:	d0f8      	beq.n	80060f0 <_dtoa_r+0x614>
 80060fe:	9306      	str	r3, [sp, #24]
 8006100:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006102:	9302      	str	r3, [sp, #8]
 8006104:	e046      	b.n	8006194 <_dtoa_r+0x6b8>
 8006106:	2200      	movs	r2, #0
 8006108:	4b2e      	ldr	r3, [pc, #184]	; (80061c4 <_dtoa_r+0x6e8>)
 800610a:	f7fb fa25 	bl	8001558 <__aeabi_dmul>
 800610e:	0004      	movs	r4, r0
 8006110:	000d      	movs	r5, r1
 8006112:	e7b6      	b.n	8006082 <_dtoa_r+0x5a6>
 8006114:	9b05      	ldr	r3, [sp, #20]
 8006116:	9a05      	ldr	r2, [sp, #20]
 8006118:	9309      	str	r3, [sp, #36]	; 0x24
 800611a:	9b08      	ldr	r3, [sp, #32]
 800611c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800611e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006120:	3b01      	subs	r3, #1
 8006122:	189b      	adds	r3, r3, r2
 8006124:	930a      	str	r3, [sp, #40]	; 0x28
 8006126:	0032      	movs	r2, r6
 8006128:	003b      	movs	r3, r7
 800612a:	0020      	movs	r0, r4
 800612c:	0029      	movs	r1, r5
 800612e:	f7fa fe0d 	bl	8000d4c <__aeabi_ddiv>
 8006132:	f7fc f82d 	bl	8002190 <__aeabi_d2iz>
 8006136:	9008      	str	r0, [sp, #32]
 8006138:	f7fc f860 	bl	80021fc <__aeabi_i2d>
 800613c:	0032      	movs	r2, r6
 800613e:	003b      	movs	r3, r7
 8006140:	f7fb fa0a 	bl	8001558 <__aeabi_dmul>
 8006144:	0002      	movs	r2, r0
 8006146:	000b      	movs	r3, r1
 8006148:	0020      	movs	r0, r4
 800614a:	0029      	movs	r1, r5
 800614c:	f7fb fc70 	bl	8001a30 <__aeabi_dsub>
 8006150:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006152:	001a      	movs	r2, r3
 8006154:	3201      	adds	r2, #1
 8006156:	9209      	str	r2, [sp, #36]	; 0x24
 8006158:	9206      	str	r2, [sp, #24]
 800615a:	9a08      	ldr	r2, [sp, #32]
 800615c:	3230      	adds	r2, #48	; 0x30
 800615e:	701a      	strb	r2, [r3, #0]
 8006160:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006162:	429a      	cmp	r2, r3
 8006164:	d14f      	bne.n	8006206 <_dtoa_r+0x72a>
 8006166:	0002      	movs	r2, r0
 8006168:	000b      	movs	r3, r1
 800616a:	f7fa fa85 	bl	8000678 <__aeabi_dadd>
 800616e:	0032      	movs	r2, r6
 8006170:	003b      	movs	r3, r7
 8006172:	0004      	movs	r4, r0
 8006174:	000d      	movs	r5, r1
 8006176:	f7fa f97f 	bl	8000478 <__aeabi_dcmpgt>
 800617a:	2800      	cmp	r0, #0
 800617c:	d12e      	bne.n	80061dc <_dtoa_r+0x700>
 800617e:	0032      	movs	r2, r6
 8006180:	003b      	movs	r3, r7
 8006182:	0020      	movs	r0, r4
 8006184:	0029      	movs	r1, r5
 8006186:	f7fa f95d 	bl	8000444 <__aeabi_dcmpeq>
 800618a:	2800      	cmp	r0, #0
 800618c:	d002      	beq.n	8006194 <_dtoa_r+0x6b8>
 800618e:	9b08      	ldr	r3, [sp, #32]
 8006190:	07db      	lsls	r3, r3, #31
 8006192:	d423      	bmi.n	80061dc <_dtoa_r+0x700>
 8006194:	9803      	ldr	r0, [sp, #12]
 8006196:	9904      	ldr	r1, [sp, #16]
 8006198:	f000 ffd6 	bl	8007148 <_Bfree>
 800619c:	2300      	movs	r3, #0
 800619e:	9a06      	ldr	r2, [sp, #24]
 80061a0:	9802      	ldr	r0, [sp, #8]
 80061a2:	7013      	strb	r3, [r2, #0]
 80061a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80061a6:	3001      	adds	r0, #1
 80061a8:	6018      	str	r0, [r3, #0]
 80061aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d100      	bne.n	80061b2 <_dtoa_r+0x6d6>
 80061b0:	e4c8      	b.n	8005b44 <_dtoa_r+0x68>
 80061b2:	601a      	str	r2, [r3, #0]
 80061b4:	e4c6      	b.n	8005b44 <_dtoa_r+0x68>
 80061b6:	46c0      	nop			; (mov r8, r8)
 80061b8:	08009230 	.word	0x08009230
 80061bc:	08009208 	.word	0x08009208
 80061c0:	3ff00000 	.word	0x3ff00000
 80061c4:	40240000 	.word	0x40240000
 80061c8:	401c0000 	.word	0x401c0000
 80061cc:	fcc00000 	.word	0xfcc00000
 80061d0:	40140000 	.word	0x40140000
 80061d4:	7cc00000 	.word	0x7cc00000
 80061d8:	3fe00000 	.word	0x3fe00000
 80061dc:	9b02      	ldr	r3, [sp, #8]
 80061de:	930f      	str	r3, [sp, #60]	; 0x3c
 80061e0:	9b06      	ldr	r3, [sp, #24]
 80061e2:	9306      	str	r3, [sp, #24]
 80061e4:	3b01      	subs	r3, #1
 80061e6:	781a      	ldrb	r2, [r3, #0]
 80061e8:	2a39      	cmp	r2, #57	; 0x39
 80061ea:	d108      	bne.n	80061fe <_dtoa_r+0x722>
 80061ec:	9a05      	ldr	r2, [sp, #20]
 80061ee:	429a      	cmp	r2, r3
 80061f0:	d1f7      	bne.n	80061e2 <_dtoa_r+0x706>
 80061f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80061f4:	9905      	ldr	r1, [sp, #20]
 80061f6:	3201      	adds	r2, #1
 80061f8:	920f      	str	r2, [sp, #60]	; 0x3c
 80061fa:	2230      	movs	r2, #48	; 0x30
 80061fc:	700a      	strb	r2, [r1, #0]
 80061fe:	781a      	ldrb	r2, [r3, #0]
 8006200:	3201      	adds	r2, #1
 8006202:	701a      	strb	r2, [r3, #0]
 8006204:	e77c      	b.n	8006100 <_dtoa_r+0x624>
 8006206:	2200      	movs	r2, #0
 8006208:	4baa      	ldr	r3, [pc, #680]	; (80064b4 <_dtoa_r+0x9d8>)
 800620a:	f7fb f9a5 	bl	8001558 <__aeabi_dmul>
 800620e:	2200      	movs	r2, #0
 8006210:	2300      	movs	r3, #0
 8006212:	0004      	movs	r4, r0
 8006214:	000d      	movs	r5, r1
 8006216:	f7fa f915 	bl	8000444 <__aeabi_dcmpeq>
 800621a:	2800      	cmp	r0, #0
 800621c:	d083      	beq.n	8006126 <_dtoa_r+0x64a>
 800621e:	e7b9      	b.n	8006194 <_dtoa_r+0x6b8>
 8006220:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006222:	2a00      	cmp	r2, #0
 8006224:	d100      	bne.n	8006228 <_dtoa_r+0x74c>
 8006226:	e08a      	b.n	800633e <_dtoa_r+0x862>
 8006228:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800622a:	2a01      	cmp	r2, #1
 800622c:	dc6e      	bgt.n	800630c <_dtoa_r+0x830>
 800622e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8006230:	2a00      	cmp	r2, #0
 8006232:	d067      	beq.n	8006304 <_dtoa_r+0x828>
 8006234:	4aa0      	ldr	r2, [pc, #640]	; (80064b8 <_dtoa_r+0x9dc>)
 8006236:	189b      	adds	r3, r3, r2
 8006238:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800623a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800623c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800623e:	2101      	movs	r1, #1
 8006240:	18d2      	adds	r2, r2, r3
 8006242:	9209      	str	r2, [sp, #36]	; 0x24
 8006244:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006246:	9803      	ldr	r0, [sp, #12]
 8006248:	18d3      	adds	r3, r2, r3
 800624a:	930d      	str	r3, [sp, #52]	; 0x34
 800624c:	f001 f812 	bl	8007274 <__i2b>
 8006250:	0007      	movs	r7, r0
 8006252:	2c00      	cmp	r4, #0
 8006254:	dd0e      	ble.n	8006274 <_dtoa_r+0x798>
 8006256:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006258:	2b00      	cmp	r3, #0
 800625a:	dd0b      	ble.n	8006274 <_dtoa_r+0x798>
 800625c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800625e:	0023      	movs	r3, r4
 8006260:	4294      	cmp	r4, r2
 8006262:	dd00      	ble.n	8006266 <_dtoa_r+0x78a>
 8006264:	0013      	movs	r3, r2
 8006266:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006268:	1ae4      	subs	r4, r4, r3
 800626a:	1ad2      	subs	r2, r2, r3
 800626c:	9209      	str	r2, [sp, #36]	; 0x24
 800626e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006270:	1ad3      	subs	r3, r2, r3
 8006272:	930d      	str	r3, [sp, #52]	; 0x34
 8006274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006276:	2b00      	cmp	r3, #0
 8006278:	d01e      	beq.n	80062b8 <_dtoa_r+0x7dc>
 800627a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800627c:	2b00      	cmp	r3, #0
 800627e:	d062      	beq.n	8006346 <_dtoa_r+0x86a>
 8006280:	2d00      	cmp	r5, #0
 8006282:	dd10      	ble.n	80062a6 <_dtoa_r+0x7ca>
 8006284:	0039      	movs	r1, r7
 8006286:	002a      	movs	r2, r5
 8006288:	9803      	ldr	r0, [sp, #12]
 800628a:	f001 f8b9 	bl	8007400 <__pow5mult>
 800628e:	9a04      	ldr	r2, [sp, #16]
 8006290:	0001      	movs	r1, r0
 8006292:	0007      	movs	r7, r0
 8006294:	9803      	ldr	r0, [sp, #12]
 8006296:	f001 f803 	bl	80072a0 <__multiply>
 800629a:	0006      	movs	r6, r0
 800629c:	9904      	ldr	r1, [sp, #16]
 800629e:	9803      	ldr	r0, [sp, #12]
 80062a0:	f000 ff52 	bl	8007148 <_Bfree>
 80062a4:	9604      	str	r6, [sp, #16]
 80062a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80062a8:	1b5a      	subs	r2, r3, r5
 80062aa:	42ab      	cmp	r3, r5
 80062ac:	d004      	beq.n	80062b8 <_dtoa_r+0x7dc>
 80062ae:	9904      	ldr	r1, [sp, #16]
 80062b0:	9803      	ldr	r0, [sp, #12]
 80062b2:	f001 f8a5 	bl	8007400 <__pow5mult>
 80062b6:	9004      	str	r0, [sp, #16]
 80062b8:	2101      	movs	r1, #1
 80062ba:	9803      	ldr	r0, [sp, #12]
 80062bc:	f000 ffda 	bl	8007274 <__i2b>
 80062c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80062c2:	0006      	movs	r6, r0
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	dd40      	ble.n	800634a <_dtoa_r+0x86e>
 80062c8:	001a      	movs	r2, r3
 80062ca:	0001      	movs	r1, r0
 80062cc:	9803      	ldr	r0, [sp, #12]
 80062ce:	f001 f897 	bl	8007400 <__pow5mult>
 80062d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80062d4:	0006      	movs	r6, r0
 80062d6:	2500      	movs	r5, #0
 80062d8:	2b01      	cmp	r3, #1
 80062da:	dc3e      	bgt.n	800635a <_dtoa_r+0x87e>
 80062dc:	2500      	movs	r5, #0
 80062de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80062e0:	42ab      	cmp	r3, r5
 80062e2:	d136      	bne.n	8006352 <_dtoa_r+0x876>
 80062e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80062e6:	031b      	lsls	r3, r3, #12
 80062e8:	42ab      	cmp	r3, r5
 80062ea:	d132      	bne.n	8006352 <_dtoa_r+0x876>
 80062ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80062ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80062f0:	4213      	tst	r3, r2
 80062f2:	d02e      	beq.n	8006352 <_dtoa_r+0x876>
 80062f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062f6:	3501      	adds	r5, #1
 80062f8:	3301      	adds	r3, #1
 80062fa:	9309      	str	r3, [sp, #36]	; 0x24
 80062fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80062fe:	3301      	adds	r3, #1
 8006300:	930d      	str	r3, [sp, #52]	; 0x34
 8006302:	e026      	b.n	8006352 <_dtoa_r+0x876>
 8006304:	2336      	movs	r3, #54	; 0x36
 8006306:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006308:	1a9b      	subs	r3, r3, r2
 800630a:	e795      	b.n	8006238 <_dtoa_r+0x75c>
 800630c:	9b08      	ldr	r3, [sp, #32]
 800630e:	1e5d      	subs	r5, r3, #1
 8006310:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006312:	42ab      	cmp	r3, r5
 8006314:	db08      	blt.n	8006328 <_dtoa_r+0x84c>
 8006316:	1b5d      	subs	r5, r3, r5
 8006318:	9b08      	ldr	r3, [sp, #32]
 800631a:	2b00      	cmp	r3, #0
 800631c:	da0c      	bge.n	8006338 <_dtoa_r+0x85c>
 800631e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006320:	9a08      	ldr	r2, [sp, #32]
 8006322:	1a9c      	subs	r4, r3, r2
 8006324:	2300      	movs	r3, #0
 8006326:	e789      	b.n	800623c <_dtoa_r+0x760>
 8006328:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800632a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800632c:	1aeb      	subs	r3, r5, r3
 800632e:	18d3      	adds	r3, r2, r3
 8006330:	950e      	str	r5, [sp, #56]	; 0x38
 8006332:	9313      	str	r3, [sp, #76]	; 0x4c
 8006334:	2500      	movs	r5, #0
 8006336:	e7ef      	b.n	8006318 <_dtoa_r+0x83c>
 8006338:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800633a:	9b08      	ldr	r3, [sp, #32]
 800633c:	e77e      	b.n	800623c <_dtoa_r+0x760>
 800633e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8006340:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8006342:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8006344:	e785      	b.n	8006252 <_dtoa_r+0x776>
 8006346:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006348:	e7b1      	b.n	80062ae <_dtoa_r+0x7d2>
 800634a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800634c:	2500      	movs	r5, #0
 800634e:	2b01      	cmp	r3, #1
 8006350:	ddc4      	ble.n	80062dc <_dtoa_r+0x800>
 8006352:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006354:	2001      	movs	r0, #1
 8006356:	2b00      	cmp	r3, #0
 8006358:	d008      	beq.n	800636c <_dtoa_r+0x890>
 800635a:	6933      	ldr	r3, [r6, #16]
 800635c:	3303      	adds	r3, #3
 800635e:	009b      	lsls	r3, r3, #2
 8006360:	18f3      	adds	r3, r6, r3
 8006362:	6858      	ldr	r0, [r3, #4]
 8006364:	f000 ff3e 	bl	80071e4 <__hi0bits>
 8006368:	2320      	movs	r3, #32
 800636a:	1a18      	subs	r0, r3, r0
 800636c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800636e:	221f      	movs	r2, #31
 8006370:	1818      	adds	r0, r3, r0
 8006372:	0003      	movs	r3, r0
 8006374:	4013      	ands	r3, r2
 8006376:	4210      	tst	r0, r2
 8006378:	d046      	beq.n	8006408 <_dtoa_r+0x92c>
 800637a:	3201      	adds	r2, #1
 800637c:	1ad2      	subs	r2, r2, r3
 800637e:	2a04      	cmp	r2, #4
 8006380:	dd3f      	ble.n	8006402 <_dtoa_r+0x926>
 8006382:	221c      	movs	r2, #28
 8006384:	1ad3      	subs	r3, r2, r3
 8006386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006388:	18e4      	adds	r4, r4, r3
 800638a:	18d2      	adds	r2, r2, r3
 800638c:	9209      	str	r2, [sp, #36]	; 0x24
 800638e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006390:	18d3      	adds	r3, r2, r3
 8006392:	930d      	str	r3, [sp, #52]	; 0x34
 8006394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006396:	2b00      	cmp	r3, #0
 8006398:	dd05      	ble.n	80063a6 <_dtoa_r+0x8ca>
 800639a:	001a      	movs	r2, r3
 800639c:	9904      	ldr	r1, [sp, #16]
 800639e:	9803      	ldr	r0, [sp, #12]
 80063a0:	f001 f870 	bl	8007484 <__lshift>
 80063a4:	9004      	str	r0, [sp, #16]
 80063a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	dd05      	ble.n	80063b8 <_dtoa_r+0x8dc>
 80063ac:	0031      	movs	r1, r6
 80063ae:	001a      	movs	r2, r3
 80063b0:	9803      	ldr	r0, [sp, #12]
 80063b2:	f001 f867 	bl	8007484 <__lshift>
 80063b6:	0006      	movs	r6, r0
 80063b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d026      	beq.n	800640c <_dtoa_r+0x930>
 80063be:	0031      	movs	r1, r6
 80063c0:	9804      	ldr	r0, [sp, #16]
 80063c2:	f001 f8cf 	bl	8007564 <__mcmp>
 80063c6:	2800      	cmp	r0, #0
 80063c8:	da20      	bge.n	800640c <_dtoa_r+0x930>
 80063ca:	9b02      	ldr	r3, [sp, #8]
 80063cc:	220a      	movs	r2, #10
 80063ce:	3b01      	subs	r3, #1
 80063d0:	9302      	str	r3, [sp, #8]
 80063d2:	9904      	ldr	r1, [sp, #16]
 80063d4:	2300      	movs	r3, #0
 80063d6:	9803      	ldr	r0, [sp, #12]
 80063d8:	f000 fec0 	bl	800715c <__multadd>
 80063dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80063de:	9004      	str	r0, [sp, #16]
 80063e0:	2b00      	cmp	r3, #0
 80063e2:	d100      	bne.n	80063e6 <_dtoa_r+0x90a>
 80063e4:	e154      	b.n	8006690 <_dtoa_r+0xbb4>
 80063e6:	2300      	movs	r3, #0
 80063e8:	0039      	movs	r1, r7
 80063ea:	220a      	movs	r2, #10
 80063ec:	9803      	ldr	r0, [sp, #12]
 80063ee:	f000 feb5 	bl	800715c <__multadd>
 80063f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80063f4:	0007      	movs	r7, r0
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	dc47      	bgt.n	800648a <_dtoa_r+0x9ae>
 80063fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80063fc:	2b02      	cmp	r3, #2
 80063fe:	dc0d      	bgt.n	800641c <_dtoa_r+0x940>
 8006400:	e043      	b.n	800648a <_dtoa_r+0x9ae>
 8006402:	2a04      	cmp	r2, #4
 8006404:	d0c6      	beq.n	8006394 <_dtoa_r+0x8b8>
 8006406:	0013      	movs	r3, r2
 8006408:	331c      	adds	r3, #28
 800640a:	e7bc      	b.n	8006386 <_dtoa_r+0x8aa>
 800640c:	9b08      	ldr	r3, [sp, #32]
 800640e:	2b00      	cmp	r3, #0
 8006410:	dc35      	bgt.n	800647e <_dtoa_r+0x9a2>
 8006412:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006414:	2b02      	cmp	r3, #2
 8006416:	dd32      	ble.n	800647e <_dtoa_r+0x9a2>
 8006418:	9b08      	ldr	r3, [sp, #32]
 800641a:	930c      	str	r3, [sp, #48]	; 0x30
 800641c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800641e:	2b00      	cmp	r3, #0
 8006420:	d10c      	bne.n	800643c <_dtoa_r+0x960>
 8006422:	0031      	movs	r1, r6
 8006424:	2205      	movs	r2, #5
 8006426:	9803      	ldr	r0, [sp, #12]
 8006428:	f000 fe98 	bl	800715c <__multadd>
 800642c:	0006      	movs	r6, r0
 800642e:	0001      	movs	r1, r0
 8006430:	9804      	ldr	r0, [sp, #16]
 8006432:	f001 f897 	bl	8007564 <__mcmp>
 8006436:	2800      	cmp	r0, #0
 8006438:	dd00      	ble.n	800643c <_dtoa_r+0x960>
 800643a:	e5a8      	b.n	8005f8e <_dtoa_r+0x4b2>
 800643c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800643e:	43db      	mvns	r3, r3
 8006440:	9302      	str	r3, [sp, #8]
 8006442:	9b05      	ldr	r3, [sp, #20]
 8006444:	9306      	str	r3, [sp, #24]
 8006446:	2500      	movs	r5, #0
 8006448:	0031      	movs	r1, r6
 800644a:	9803      	ldr	r0, [sp, #12]
 800644c:	f000 fe7c 	bl	8007148 <_Bfree>
 8006450:	2f00      	cmp	r7, #0
 8006452:	d100      	bne.n	8006456 <_dtoa_r+0x97a>
 8006454:	e69e      	b.n	8006194 <_dtoa_r+0x6b8>
 8006456:	2d00      	cmp	r5, #0
 8006458:	d005      	beq.n	8006466 <_dtoa_r+0x98a>
 800645a:	42bd      	cmp	r5, r7
 800645c:	d003      	beq.n	8006466 <_dtoa_r+0x98a>
 800645e:	0029      	movs	r1, r5
 8006460:	9803      	ldr	r0, [sp, #12]
 8006462:	f000 fe71 	bl	8007148 <_Bfree>
 8006466:	0039      	movs	r1, r7
 8006468:	9803      	ldr	r0, [sp, #12]
 800646a:	f000 fe6d 	bl	8007148 <_Bfree>
 800646e:	e691      	b.n	8006194 <_dtoa_r+0x6b8>
 8006470:	2600      	movs	r6, #0
 8006472:	0037      	movs	r7, r6
 8006474:	e7e2      	b.n	800643c <_dtoa_r+0x960>
 8006476:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006478:	0037      	movs	r7, r6
 800647a:	9302      	str	r3, [sp, #8]
 800647c:	e587      	b.n	8005f8e <_dtoa_r+0x4b2>
 800647e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006480:	2b00      	cmp	r3, #0
 8006482:	d100      	bne.n	8006486 <_dtoa_r+0x9aa>
 8006484:	e0bc      	b.n	8006600 <_dtoa_r+0xb24>
 8006486:	9b08      	ldr	r3, [sp, #32]
 8006488:	930c      	str	r3, [sp, #48]	; 0x30
 800648a:	2c00      	cmp	r4, #0
 800648c:	dd05      	ble.n	800649a <_dtoa_r+0x9be>
 800648e:	0039      	movs	r1, r7
 8006490:	0022      	movs	r2, r4
 8006492:	9803      	ldr	r0, [sp, #12]
 8006494:	f000 fff6 	bl	8007484 <__lshift>
 8006498:	0007      	movs	r7, r0
 800649a:	0038      	movs	r0, r7
 800649c:	2d00      	cmp	r5, #0
 800649e:	d01e      	beq.n	80064de <_dtoa_r+0xa02>
 80064a0:	6879      	ldr	r1, [r7, #4]
 80064a2:	9803      	ldr	r0, [sp, #12]
 80064a4:	f000 fe28 	bl	80070f8 <_Balloc>
 80064a8:	1e04      	subs	r4, r0, #0
 80064aa:	d10b      	bne.n	80064c4 <_dtoa_r+0x9e8>
 80064ac:	0002      	movs	r2, r0
 80064ae:	4b03      	ldr	r3, [pc, #12]	; (80064bc <_dtoa_r+0x9e0>)
 80064b0:	4903      	ldr	r1, [pc, #12]	; (80064c0 <_dtoa_r+0x9e4>)
 80064b2:	e444      	b.n	8005d3e <_dtoa_r+0x262>
 80064b4:	40240000 	.word	0x40240000
 80064b8:	00000433 	.word	0x00000433
 80064bc:	08009131 	.word	0x08009131
 80064c0:	000002ea 	.word	0x000002ea
 80064c4:	0039      	movs	r1, r7
 80064c6:	693b      	ldr	r3, [r7, #16]
 80064c8:	310c      	adds	r1, #12
 80064ca:	1c9a      	adds	r2, r3, #2
 80064cc:	0092      	lsls	r2, r2, #2
 80064ce:	300c      	adds	r0, #12
 80064d0:	f000 fdf9 	bl	80070c6 <memcpy>
 80064d4:	2201      	movs	r2, #1
 80064d6:	0021      	movs	r1, r4
 80064d8:	9803      	ldr	r0, [sp, #12]
 80064da:	f000 ffd3 	bl	8007484 <__lshift>
 80064de:	003d      	movs	r5, r7
 80064e0:	0007      	movs	r7, r0
 80064e2:	9b05      	ldr	r3, [sp, #20]
 80064e4:	9308      	str	r3, [sp, #32]
 80064e6:	0031      	movs	r1, r6
 80064e8:	9804      	ldr	r0, [sp, #16]
 80064ea:	f7ff fa6b 	bl	80059c4 <quorem>
 80064ee:	0029      	movs	r1, r5
 80064f0:	0004      	movs	r4, r0
 80064f2:	900d      	str	r0, [sp, #52]	; 0x34
 80064f4:	9804      	ldr	r0, [sp, #16]
 80064f6:	f001 f835 	bl	8007564 <__mcmp>
 80064fa:	003a      	movs	r2, r7
 80064fc:	900e      	str	r0, [sp, #56]	; 0x38
 80064fe:	0031      	movs	r1, r6
 8006500:	9803      	ldr	r0, [sp, #12]
 8006502:	f001 f84b 	bl	800759c <__mdiff>
 8006506:	68c3      	ldr	r3, [r0, #12]
 8006508:	3430      	adds	r4, #48	; 0x30
 800650a:	930f      	str	r3, [sp, #60]	; 0x3c
 800650c:	2301      	movs	r3, #1
 800650e:	9309      	str	r3, [sp, #36]	; 0x24
 8006510:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006512:	9006      	str	r0, [sp, #24]
 8006514:	2b00      	cmp	r3, #0
 8006516:	d104      	bne.n	8006522 <_dtoa_r+0xa46>
 8006518:	0001      	movs	r1, r0
 800651a:	9804      	ldr	r0, [sp, #16]
 800651c:	f001 f822 	bl	8007564 <__mcmp>
 8006520:	9009      	str	r0, [sp, #36]	; 0x24
 8006522:	9803      	ldr	r0, [sp, #12]
 8006524:	9906      	ldr	r1, [sp, #24]
 8006526:	f000 fe0f 	bl	8007148 <_Bfree>
 800652a:	2301      	movs	r3, #1
 800652c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800652e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006530:	4018      	ands	r0, r3
 8006532:	9b08      	ldr	r3, [sp, #32]
 8006534:	3301      	adds	r3, #1
 8006536:	9306      	str	r3, [sp, #24]
 8006538:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800653a:	4313      	orrs	r3, r2
 800653c:	4303      	orrs	r3, r0
 800653e:	d109      	bne.n	8006554 <_dtoa_r+0xa78>
 8006540:	2c39      	cmp	r4, #57	; 0x39
 8006542:	d021      	beq.n	8006588 <_dtoa_r+0xaac>
 8006544:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006546:	2b00      	cmp	r3, #0
 8006548:	dd01      	ble.n	800654e <_dtoa_r+0xa72>
 800654a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800654c:	3431      	adds	r4, #49	; 0x31
 800654e:	9b08      	ldr	r3, [sp, #32]
 8006550:	701c      	strb	r4, [r3, #0]
 8006552:	e779      	b.n	8006448 <_dtoa_r+0x96c>
 8006554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006556:	2b00      	cmp	r3, #0
 8006558:	db03      	blt.n	8006562 <_dtoa_r+0xa86>
 800655a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800655c:	4313      	orrs	r3, r2
 800655e:	4303      	orrs	r3, r0
 8006560:	d11e      	bne.n	80065a0 <_dtoa_r+0xac4>
 8006562:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006564:	2b00      	cmp	r3, #0
 8006566:	ddf2      	ble.n	800654e <_dtoa_r+0xa72>
 8006568:	9904      	ldr	r1, [sp, #16]
 800656a:	2201      	movs	r2, #1
 800656c:	9803      	ldr	r0, [sp, #12]
 800656e:	f000 ff89 	bl	8007484 <__lshift>
 8006572:	0031      	movs	r1, r6
 8006574:	9004      	str	r0, [sp, #16]
 8006576:	f000 fff5 	bl	8007564 <__mcmp>
 800657a:	2800      	cmp	r0, #0
 800657c:	dc02      	bgt.n	8006584 <_dtoa_r+0xaa8>
 800657e:	d1e6      	bne.n	800654e <_dtoa_r+0xa72>
 8006580:	07e3      	lsls	r3, r4, #31
 8006582:	d5e4      	bpl.n	800654e <_dtoa_r+0xa72>
 8006584:	2c39      	cmp	r4, #57	; 0x39
 8006586:	d1e0      	bne.n	800654a <_dtoa_r+0xa6e>
 8006588:	2339      	movs	r3, #57	; 0x39
 800658a:	9a08      	ldr	r2, [sp, #32]
 800658c:	7013      	strb	r3, [r2, #0]
 800658e:	9b06      	ldr	r3, [sp, #24]
 8006590:	9306      	str	r3, [sp, #24]
 8006592:	3b01      	subs	r3, #1
 8006594:	781a      	ldrb	r2, [r3, #0]
 8006596:	2a39      	cmp	r2, #57	; 0x39
 8006598:	d067      	beq.n	800666a <_dtoa_r+0xb8e>
 800659a:	3201      	adds	r2, #1
 800659c:	701a      	strb	r2, [r3, #0]
 800659e:	e753      	b.n	8006448 <_dtoa_r+0x96c>
 80065a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80065a2:	2b00      	cmp	r3, #0
 80065a4:	dd03      	ble.n	80065ae <_dtoa_r+0xad2>
 80065a6:	2c39      	cmp	r4, #57	; 0x39
 80065a8:	d0ee      	beq.n	8006588 <_dtoa_r+0xaac>
 80065aa:	3401      	adds	r4, #1
 80065ac:	e7cf      	b.n	800654e <_dtoa_r+0xa72>
 80065ae:	9b08      	ldr	r3, [sp, #32]
 80065b0:	9a05      	ldr	r2, [sp, #20]
 80065b2:	701c      	strb	r4, [r3, #0]
 80065b4:	2301      	movs	r3, #1
 80065b6:	1a9b      	subs	r3, r3, r2
 80065b8:	9a08      	ldr	r2, [sp, #32]
 80065ba:	189b      	adds	r3, r3, r2
 80065bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80065be:	429a      	cmp	r2, r3
 80065c0:	d03e      	beq.n	8006640 <_dtoa_r+0xb64>
 80065c2:	2300      	movs	r3, #0
 80065c4:	220a      	movs	r2, #10
 80065c6:	9904      	ldr	r1, [sp, #16]
 80065c8:	9803      	ldr	r0, [sp, #12]
 80065ca:	f000 fdc7 	bl	800715c <__multadd>
 80065ce:	2300      	movs	r3, #0
 80065d0:	9004      	str	r0, [sp, #16]
 80065d2:	220a      	movs	r2, #10
 80065d4:	0029      	movs	r1, r5
 80065d6:	9803      	ldr	r0, [sp, #12]
 80065d8:	42bd      	cmp	r5, r7
 80065da:	d106      	bne.n	80065ea <_dtoa_r+0xb0e>
 80065dc:	f000 fdbe 	bl	800715c <__multadd>
 80065e0:	0005      	movs	r5, r0
 80065e2:	0007      	movs	r7, r0
 80065e4:	9b06      	ldr	r3, [sp, #24]
 80065e6:	9308      	str	r3, [sp, #32]
 80065e8:	e77d      	b.n	80064e6 <_dtoa_r+0xa0a>
 80065ea:	f000 fdb7 	bl	800715c <__multadd>
 80065ee:	0039      	movs	r1, r7
 80065f0:	0005      	movs	r5, r0
 80065f2:	2300      	movs	r3, #0
 80065f4:	220a      	movs	r2, #10
 80065f6:	9803      	ldr	r0, [sp, #12]
 80065f8:	f000 fdb0 	bl	800715c <__multadd>
 80065fc:	0007      	movs	r7, r0
 80065fe:	e7f1      	b.n	80065e4 <_dtoa_r+0xb08>
 8006600:	9b08      	ldr	r3, [sp, #32]
 8006602:	930c      	str	r3, [sp, #48]	; 0x30
 8006604:	2500      	movs	r5, #0
 8006606:	0031      	movs	r1, r6
 8006608:	9804      	ldr	r0, [sp, #16]
 800660a:	f7ff f9db 	bl	80059c4 <quorem>
 800660e:	9b05      	ldr	r3, [sp, #20]
 8006610:	3030      	adds	r0, #48	; 0x30
 8006612:	5558      	strb	r0, [r3, r5]
 8006614:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006616:	3501      	adds	r5, #1
 8006618:	0004      	movs	r4, r0
 800661a:	42ab      	cmp	r3, r5
 800661c:	dd07      	ble.n	800662e <_dtoa_r+0xb52>
 800661e:	2300      	movs	r3, #0
 8006620:	220a      	movs	r2, #10
 8006622:	9904      	ldr	r1, [sp, #16]
 8006624:	9803      	ldr	r0, [sp, #12]
 8006626:	f000 fd99 	bl	800715c <__multadd>
 800662a:	9004      	str	r0, [sp, #16]
 800662c:	e7eb      	b.n	8006606 <_dtoa_r+0xb2a>
 800662e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006630:	2001      	movs	r0, #1
 8006632:	2b00      	cmp	r3, #0
 8006634:	dd00      	ble.n	8006638 <_dtoa_r+0xb5c>
 8006636:	0018      	movs	r0, r3
 8006638:	2500      	movs	r5, #0
 800663a:	9b05      	ldr	r3, [sp, #20]
 800663c:	181b      	adds	r3, r3, r0
 800663e:	9306      	str	r3, [sp, #24]
 8006640:	9904      	ldr	r1, [sp, #16]
 8006642:	2201      	movs	r2, #1
 8006644:	9803      	ldr	r0, [sp, #12]
 8006646:	f000 ff1d 	bl	8007484 <__lshift>
 800664a:	0031      	movs	r1, r6
 800664c:	9004      	str	r0, [sp, #16]
 800664e:	f000 ff89 	bl	8007564 <__mcmp>
 8006652:	2800      	cmp	r0, #0
 8006654:	dc9b      	bgt.n	800658e <_dtoa_r+0xab2>
 8006656:	d101      	bne.n	800665c <_dtoa_r+0xb80>
 8006658:	07e3      	lsls	r3, r4, #31
 800665a:	d498      	bmi.n	800658e <_dtoa_r+0xab2>
 800665c:	9b06      	ldr	r3, [sp, #24]
 800665e:	9306      	str	r3, [sp, #24]
 8006660:	3b01      	subs	r3, #1
 8006662:	781a      	ldrb	r2, [r3, #0]
 8006664:	2a30      	cmp	r2, #48	; 0x30
 8006666:	d0fa      	beq.n	800665e <_dtoa_r+0xb82>
 8006668:	e6ee      	b.n	8006448 <_dtoa_r+0x96c>
 800666a:	9a05      	ldr	r2, [sp, #20]
 800666c:	429a      	cmp	r2, r3
 800666e:	d18f      	bne.n	8006590 <_dtoa_r+0xab4>
 8006670:	9b02      	ldr	r3, [sp, #8]
 8006672:	3301      	adds	r3, #1
 8006674:	9302      	str	r3, [sp, #8]
 8006676:	2331      	movs	r3, #49	; 0x31
 8006678:	7013      	strb	r3, [r2, #0]
 800667a:	e6e5      	b.n	8006448 <_dtoa_r+0x96c>
 800667c:	4b08      	ldr	r3, [pc, #32]	; (80066a0 <_dtoa_r+0xbc4>)
 800667e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006680:	9305      	str	r3, [sp, #20]
 8006682:	4b08      	ldr	r3, [pc, #32]	; (80066a4 <_dtoa_r+0xbc8>)
 8006684:	2a00      	cmp	r2, #0
 8006686:	d001      	beq.n	800668c <_dtoa_r+0xbb0>
 8006688:	f7ff fa5a 	bl	8005b40 <_dtoa_r+0x64>
 800668c:	f7ff fa5a 	bl	8005b44 <_dtoa_r+0x68>
 8006690:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006692:	2b00      	cmp	r3, #0
 8006694:	dcb6      	bgt.n	8006604 <_dtoa_r+0xb28>
 8006696:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006698:	2b02      	cmp	r3, #2
 800669a:	dd00      	ble.n	800669e <_dtoa_r+0xbc2>
 800669c:	e6be      	b.n	800641c <_dtoa_r+0x940>
 800669e:	e7b1      	b.n	8006604 <_dtoa_r+0xb28>
 80066a0:	08009128 	.word	0x08009128
 80066a4:	08009130 	.word	0x08009130

080066a8 <__sflush_r>:
 80066a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066aa:	230c      	movs	r3, #12
 80066ac:	5eca      	ldrsh	r2, [r1, r3]
 80066ae:	000c      	movs	r4, r1
 80066b0:	0005      	movs	r5, r0
 80066b2:	b291      	uxth	r1, r2
 80066b4:	0713      	lsls	r3, r2, #28
 80066b6:	d467      	bmi.n	8006788 <__sflush_r+0xe0>
 80066b8:	2380      	movs	r3, #128	; 0x80
 80066ba:	011b      	lsls	r3, r3, #4
 80066bc:	4313      	orrs	r3, r2
 80066be:	6862      	ldr	r2, [r4, #4]
 80066c0:	81a3      	strh	r3, [r4, #12]
 80066c2:	2a00      	cmp	r2, #0
 80066c4:	dc04      	bgt.n	80066d0 <__sflush_r+0x28>
 80066c6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80066c8:	2a00      	cmp	r2, #0
 80066ca:	dc01      	bgt.n	80066d0 <__sflush_r+0x28>
 80066cc:	2000      	movs	r0, #0
 80066ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80066d0:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 80066d2:	2f00      	cmp	r7, #0
 80066d4:	d0fa      	beq.n	80066cc <__sflush_r+0x24>
 80066d6:	2200      	movs	r2, #0
 80066d8:	2180      	movs	r1, #128	; 0x80
 80066da:	682e      	ldr	r6, [r5, #0]
 80066dc:	602a      	str	r2, [r5, #0]
 80066de:	001a      	movs	r2, r3
 80066e0:	0149      	lsls	r1, r1, #5
 80066e2:	400a      	ands	r2, r1
 80066e4:	420b      	tst	r3, r1
 80066e6:	d038      	beq.n	800675a <__sflush_r+0xb2>
 80066e8:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80066ea:	89a3      	ldrh	r3, [r4, #12]
 80066ec:	075b      	lsls	r3, r3, #29
 80066ee:	d506      	bpl.n	80066fe <__sflush_r+0x56>
 80066f0:	6863      	ldr	r3, [r4, #4]
 80066f2:	1ac0      	subs	r0, r0, r3
 80066f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	d001      	beq.n	80066fe <__sflush_r+0x56>
 80066fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80066fc:	1ac0      	subs	r0, r0, r3
 80066fe:	0002      	movs	r2, r0
 8006700:	69e1      	ldr	r1, [r4, #28]
 8006702:	2300      	movs	r3, #0
 8006704:	0028      	movs	r0, r5
 8006706:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8006708:	47b8      	blx	r7
 800670a:	89a1      	ldrh	r1, [r4, #12]
 800670c:	1c43      	adds	r3, r0, #1
 800670e:	d106      	bne.n	800671e <__sflush_r+0x76>
 8006710:	682b      	ldr	r3, [r5, #0]
 8006712:	2b1d      	cmp	r3, #29
 8006714:	d835      	bhi.n	8006782 <__sflush_r+0xda>
 8006716:	4a2e      	ldr	r2, [pc, #184]	; (80067d0 <__sflush_r+0x128>)
 8006718:	40da      	lsrs	r2, r3
 800671a:	07d3      	lsls	r3, r2, #31
 800671c:	d531      	bpl.n	8006782 <__sflush_r+0xda>
 800671e:	2200      	movs	r2, #0
 8006720:	4b2c      	ldr	r3, [pc, #176]	; (80067d4 <__sflush_r+0x12c>)
 8006722:	6062      	str	r2, [r4, #4]
 8006724:	400b      	ands	r3, r1
 8006726:	6922      	ldr	r2, [r4, #16]
 8006728:	b21b      	sxth	r3, r3
 800672a:	81a3      	strh	r3, [r4, #12]
 800672c:	6022      	str	r2, [r4, #0]
 800672e:	04db      	lsls	r3, r3, #19
 8006730:	d505      	bpl.n	800673e <__sflush_r+0x96>
 8006732:	1c43      	adds	r3, r0, #1
 8006734:	d102      	bne.n	800673c <__sflush_r+0x94>
 8006736:	682b      	ldr	r3, [r5, #0]
 8006738:	2b00      	cmp	r3, #0
 800673a:	d100      	bne.n	800673e <__sflush_r+0x96>
 800673c:	6520      	str	r0, [r4, #80]	; 0x50
 800673e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006740:	602e      	str	r6, [r5, #0]
 8006742:	2900      	cmp	r1, #0
 8006744:	d0c2      	beq.n	80066cc <__sflush_r+0x24>
 8006746:	0023      	movs	r3, r4
 8006748:	3340      	adds	r3, #64	; 0x40
 800674a:	4299      	cmp	r1, r3
 800674c:	d002      	beq.n	8006754 <__sflush_r+0xac>
 800674e:	0028      	movs	r0, r5
 8006750:	f000 f94a 	bl	80069e8 <_free_r>
 8006754:	2000      	movs	r0, #0
 8006756:	6320      	str	r0, [r4, #48]	; 0x30
 8006758:	e7b9      	b.n	80066ce <__sflush_r+0x26>
 800675a:	2301      	movs	r3, #1
 800675c:	0028      	movs	r0, r5
 800675e:	69e1      	ldr	r1, [r4, #28]
 8006760:	47b8      	blx	r7
 8006762:	1c43      	adds	r3, r0, #1
 8006764:	d1c1      	bne.n	80066ea <__sflush_r+0x42>
 8006766:	682b      	ldr	r3, [r5, #0]
 8006768:	2b00      	cmp	r3, #0
 800676a:	d0be      	beq.n	80066ea <__sflush_r+0x42>
 800676c:	2b1d      	cmp	r3, #29
 800676e:	d001      	beq.n	8006774 <__sflush_r+0xcc>
 8006770:	2b16      	cmp	r3, #22
 8006772:	d101      	bne.n	8006778 <__sflush_r+0xd0>
 8006774:	602e      	str	r6, [r5, #0]
 8006776:	e7a9      	b.n	80066cc <__sflush_r+0x24>
 8006778:	2340      	movs	r3, #64	; 0x40
 800677a:	89a2      	ldrh	r2, [r4, #12]
 800677c:	4313      	orrs	r3, r2
 800677e:	81a3      	strh	r3, [r4, #12]
 8006780:	e7a5      	b.n	80066ce <__sflush_r+0x26>
 8006782:	2340      	movs	r3, #64	; 0x40
 8006784:	430b      	orrs	r3, r1
 8006786:	e7fa      	b.n	800677e <__sflush_r+0xd6>
 8006788:	6927      	ldr	r7, [r4, #16]
 800678a:	2f00      	cmp	r7, #0
 800678c:	d09e      	beq.n	80066cc <__sflush_r+0x24>
 800678e:	6823      	ldr	r3, [r4, #0]
 8006790:	6027      	str	r7, [r4, #0]
 8006792:	1bdb      	subs	r3, r3, r7
 8006794:	9301      	str	r3, [sp, #4]
 8006796:	2300      	movs	r3, #0
 8006798:	078a      	lsls	r2, r1, #30
 800679a:	d100      	bne.n	800679e <__sflush_r+0xf6>
 800679c:	6963      	ldr	r3, [r4, #20]
 800679e:	60a3      	str	r3, [r4, #8]
 80067a0:	9b01      	ldr	r3, [sp, #4]
 80067a2:	2b00      	cmp	r3, #0
 80067a4:	dc00      	bgt.n	80067a8 <__sflush_r+0x100>
 80067a6:	e791      	b.n	80066cc <__sflush_r+0x24>
 80067a8:	003a      	movs	r2, r7
 80067aa:	0028      	movs	r0, r5
 80067ac:	9b01      	ldr	r3, [sp, #4]
 80067ae:	69e1      	ldr	r1, [r4, #28]
 80067b0:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80067b2:	47b0      	blx	r6
 80067b4:	2800      	cmp	r0, #0
 80067b6:	dc06      	bgt.n	80067c6 <__sflush_r+0x11e>
 80067b8:	2340      	movs	r3, #64	; 0x40
 80067ba:	2001      	movs	r0, #1
 80067bc:	89a2      	ldrh	r2, [r4, #12]
 80067be:	4240      	negs	r0, r0
 80067c0:	4313      	orrs	r3, r2
 80067c2:	81a3      	strh	r3, [r4, #12]
 80067c4:	e783      	b.n	80066ce <__sflush_r+0x26>
 80067c6:	9b01      	ldr	r3, [sp, #4]
 80067c8:	183f      	adds	r7, r7, r0
 80067ca:	1a1b      	subs	r3, r3, r0
 80067cc:	9301      	str	r3, [sp, #4]
 80067ce:	e7e7      	b.n	80067a0 <__sflush_r+0xf8>
 80067d0:	20400001 	.word	0x20400001
 80067d4:	fffff7ff 	.word	0xfffff7ff

080067d8 <_fflush_r>:
 80067d8:	b570      	push	{r4, r5, r6, lr}
 80067da:	0005      	movs	r5, r0
 80067dc:	000c      	movs	r4, r1
 80067de:	2800      	cmp	r0, #0
 80067e0:	d004      	beq.n	80067ec <_fflush_r+0x14>
 80067e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d101      	bne.n	80067ec <_fflush_r+0x14>
 80067e8:	f000 f86c 	bl	80068c4 <__sinit>
 80067ec:	220c      	movs	r2, #12
 80067ee:	5ea3      	ldrsh	r3, [r4, r2]
 80067f0:	1e1e      	subs	r6, r3, #0
 80067f2:	d015      	beq.n	8006820 <_fflush_r+0x48>
 80067f4:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80067f6:	07d2      	lsls	r2, r2, #31
 80067f8:	d404      	bmi.n	8006804 <_fflush_r+0x2c>
 80067fa:	059b      	lsls	r3, r3, #22
 80067fc:	d402      	bmi.n	8006804 <_fflush_r+0x2c>
 80067fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006800:	f000 f9cc 	bl	8006b9c <__retarget_lock_acquire_recursive>
 8006804:	0021      	movs	r1, r4
 8006806:	0028      	movs	r0, r5
 8006808:	f7ff ff4e 	bl	80066a8 <__sflush_r>
 800680c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800680e:	0006      	movs	r6, r0
 8006810:	07db      	lsls	r3, r3, #31
 8006812:	d405      	bmi.n	8006820 <_fflush_r+0x48>
 8006814:	89a3      	ldrh	r3, [r4, #12]
 8006816:	059b      	lsls	r3, r3, #22
 8006818:	d402      	bmi.n	8006820 <_fflush_r+0x48>
 800681a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800681c:	f000 f9bf 	bl	8006b9e <__retarget_lock_release_recursive>
 8006820:	0030      	movs	r0, r6
 8006822:	bd70      	pop	{r4, r5, r6, pc}

08006824 <std>:
 8006824:	2300      	movs	r3, #0
 8006826:	b510      	push	{r4, lr}
 8006828:	0004      	movs	r4, r0
 800682a:	6003      	str	r3, [r0, #0]
 800682c:	6043      	str	r3, [r0, #4]
 800682e:	6083      	str	r3, [r0, #8]
 8006830:	8181      	strh	r1, [r0, #12]
 8006832:	6643      	str	r3, [r0, #100]	; 0x64
 8006834:	0019      	movs	r1, r3
 8006836:	81c2      	strh	r2, [r0, #14]
 8006838:	6103      	str	r3, [r0, #16]
 800683a:	2208      	movs	r2, #8
 800683c:	6143      	str	r3, [r0, #20]
 800683e:	6183      	str	r3, [r0, #24]
 8006840:	305c      	adds	r0, #92	; 0x5c
 8006842:	f7fd fcc7 	bl	80041d4 <memset>
 8006846:	0020      	movs	r0, r4
 8006848:	4b06      	ldr	r3, [pc, #24]	; (8006864 <std+0x40>)
 800684a:	61e4      	str	r4, [r4, #28]
 800684c:	6223      	str	r3, [r4, #32]
 800684e:	4b06      	ldr	r3, [pc, #24]	; (8006868 <std+0x44>)
 8006850:	3058      	adds	r0, #88	; 0x58
 8006852:	6263      	str	r3, [r4, #36]	; 0x24
 8006854:	4b05      	ldr	r3, [pc, #20]	; (800686c <std+0x48>)
 8006856:	62a3      	str	r3, [r4, #40]	; 0x28
 8006858:	4b05      	ldr	r3, [pc, #20]	; (8006870 <std+0x4c>)
 800685a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800685c:	f000 f99c 	bl	8006b98 <__retarget_lock_init_recursive>
 8006860:	bd10      	pop	{r4, pc}
 8006862:	46c0      	nop			; (mov r8, r8)
 8006864:	0800781d 	.word	0x0800781d
 8006868:	08007845 	.word	0x08007845
 800686c:	0800787d 	.word	0x0800787d
 8006870:	080078a9 	.word	0x080078a9

08006874 <_cleanup_r>:
 8006874:	b510      	push	{r4, lr}
 8006876:	4902      	ldr	r1, [pc, #8]	; (8006880 <_cleanup_r+0xc>)
 8006878:	f000 f968 	bl	8006b4c <_fwalk_reent>
 800687c:	bd10      	pop	{r4, pc}
 800687e:	46c0      	nop			; (mov r8, r8)
 8006880:	08008545 	.word	0x08008545

08006884 <__sfp_lock_acquire>:
 8006884:	b510      	push	{r4, lr}
 8006886:	4802      	ldr	r0, [pc, #8]	; (8006890 <__sfp_lock_acquire+0xc>)
 8006888:	f000 f988 	bl	8006b9c <__retarget_lock_acquire_recursive>
 800688c:	bd10      	pop	{r4, pc}
 800688e:	46c0      	nop			; (mov r8, r8)
 8006890:	20000ae2 	.word	0x20000ae2

08006894 <__sfp_lock_release>:
 8006894:	b510      	push	{r4, lr}
 8006896:	4802      	ldr	r0, [pc, #8]	; (80068a0 <__sfp_lock_release+0xc>)
 8006898:	f000 f981 	bl	8006b9e <__retarget_lock_release_recursive>
 800689c:	bd10      	pop	{r4, pc}
 800689e:	46c0      	nop			; (mov r8, r8)
 80068a0:	20000ae2 	.word	0x20000ae2

080068a4 <__sinit_lock_acquire>:
 80068a4:	b510      	push	{r4, lr}
 80068a6:	4802      	ldr	r0, [pc, #8]	; (80068b0 <__sinit_lock_acquire+0xc>)
 80068a8:	f000 f978 	bl	8006b9c <__retarget_lock_acquire_recursive>
 80068ac:	bd10      	pop	{r4, pc}
 80068ae:	46c0      	nop			; (mov r8, r8)
 80068b0:	20000add 	.word	0x20000add

080068b4 <__sinit_lock_release>:
 80068b4:	b510      	push	{r4, lr}
 80068b6:	4802      	ldr	r0, [pc, #8]	; (80068c0 <__sinit_lock_release+0xc>)
 80068b8:	f000 f971 	bl	8006b9e <__retarget_lock_release_recursive>
 80068bc:	bd10      	pop	{r4, pc}
 80068be:	46c0      	nop			; (mov r8, r8)
 80068c0:	20000add 	.word	0x20000add

080068c4 <__sinit>:
 80068c4:	b510      	push	{r4, lr}
 80068c6:	0004      	movs	r4, r0
 80068c8:	f7ff ffec 	bl	80068a4 <__sinit_lock_acquire>
 80068cc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80068ce:	2a00      	cmp	r2, #0
 80068d0:	d002      	beq.n	80068d8 <__sinit+0x14>
 80068d2:	f7ff ffef 	bl	80068b4 <__sinit_lock_release>
 80068d6:	bd10      	pop	{r4, pc}
 80068d8:	4b0e      	ldr	r3, [pc, #56]	; (8006914 <__sinit+0x50>)
 80068da:	2103      	movs	r1, #3
 80068dc:	63e3      	str	r3, [r4, #60]	; 0x3c
 80068de:	23b8      	movs	r3, #184	; 0xb8
 80068e0:	009b      	lsls	r3, r3, #2
 80068e2:	50e2      	str	r2, [r4, r3]
 80068e4:	3304      	adds	r3, #4
 80068e6:	50e1      	str	r1, [r4, r3]
 80068e8:	3308      	adds	r3, #8
 80068ea:	18e1      	adds	r1, r4, r3
 80068ec:	3b04      	subs	r3, #4
 80068ee:	50e1      	str	r1, [r4, r3]
 80068f0:	6860      	ldr	r0, [r4, #4]
 80068f2:	2104      	movs	r1, #4
 80068f4:	f7ff ff96 	bl	8006824 <std>
 80068f8:	2201      	movs	r2, #1
 80068fa:	2109      	movs	r1, #9
 80068fc:	68a0      	ldr	r0, [r4, #8]
 80068fe:	f7ff ff91 	bl	8006824 <std>
 8006902:	2202      	movs	r2, #2
 8006904:	2112      	movs	r1, #18
 8006906:	68e0      	ldr	r0, [r4, #12]
 8006908:	f7ff ff8c 	bl	8006824 <std>
 800690c:	2301      	movs	r3, #1
 800690e:	63a3      	str	r3, [r4, #56]	; 0x38
 8006910:	e7df      	b.n	80068d2 <__sinit+0xe>
 8006912:	46c0      	nop			; (mov r8, r8)
 8006914:	08006875 	.word	0x08006875

08006918 <__libc_fini_array>:
 8006918:	b570      	push	{r4, r5, r6, lr}
 800691a:	4d07      	ldr	r5, [pc, #28]	; (8006938 <__libc_fini_array+0x20>)
 800691c:	4c07      	ldr	r4, [pc, #28]	; (800693c <__libc_fini_array+0x24>)
 800691e:	1b64      	subs	r4, r4, r5
 8006920:	10a4      	asrs	r4, r4, #2
 8006922:	2c00      	cmp	r4, #0
 8006924:	d102      	bne.n	800692c <__libc_fini_array+0x14>
 8006926:	f002 fb3b 	bl	8008fa0 <_fini>
 800692a:	bd70      	pop	{r4, r5, r6, pc}
 800692c:	3c01      	subs	r4, #1
 800692e:	00a3      	lsls	r3, r4, #2
 8006930:	58eb      	ldr	r3, [r5, r3]
 8006932:	4798      	blx	r3
 8006934:	e7f5      	b.n	8006922 <__libc_fini_array+0xa>
 8006936:	46c0      	nop			; (mov r8, r8)
 8006938:	0800947c 	.word	0x0800947c
 800693c:	08009480 	.word	0x08009480

08006940 <_malloc_trim_r>:
 8006940:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006942:	0004      	movs	r4, r0
 8006944:	2008      	movs	r0, #8
 8006946:	000d      	movs	r5, r1
 8006948:	f000 ffc8 	bl	80078dc <sysconf>
 800694c:	0006      	movs	r6, r0
 800694e:	0020      	movs	r0, r4
 8006950:	f000 fbc2 	bl	80070d8 <__malloc_lock>
 8006954:	2203      	movs	r2, #3
 8006956:	4f21      	ldr	r7, [pc, #132]	; (80069dc <_malloc_trim_r+0x9c>)
 8006958:	0031      	movs	r1, r6
 800695a:	68bb      	ldr	r3, [r7, #8]
 800695c:	685b      	ldr	r3, [r3, #4]
 800695e:	4393      	bics	r3, r2
 8006960:	1b58      	subs	r0, r3, r5
 8006962:	3811      	subs	r0, #17
 8006964:	1980      	adds	r0, r0, r6
 8006966:	9301      	str	r3, [sp, #4]
 8006968:	f7f9 fbe6 	bl	8000138 <__udivsi3>
 800696c:	1e45      	subs	r5, r0, #1
 800696e:	4375      	muls	r5, r6
 8006970:	42ae      	cmp	r6, r5
 8006972:	dd04      	ble.n	800697e <_malloc_trim_r+0x3e>
 8006974:	0020      	movs	r0, r4
 8006976:	f000 fbb7 	bl	80070e8 <__malloc_unlock>
 800697a:	2000      	movs	r0, #0
 800697c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800697e:	2100      	movs	r1, #0
 8006980:	0020      	movs	r0, r4
 8006982:	f000 ff39 	bl	80077f8 <_sbrk_r>
 8006986:	68bb      	ldr	r3, [r7, #8]
 8006988:	9a01      	ldr	r2, [sp, #4]
 800698a:	189b      	adds	r3, r3, r2
 800698c:	4298      	cmp	r0, r3
 800698e:	d1f1      	bne.n	8006974 <_malloc_trim_r+0x34>
 8006990:	0020      	movs	r0, r4
 8006992:	4269      	negs	r1, r5
 8006994:	f000 ff30 	bl	80077f8 <_sbrk_r>
 8006998:	1c43      	adds	r3, r0, #1
 800699a:	d110      	bne.n	80069be <_malloc_trim_r+0x7e>
 800699c:	2100      	movs	r1, #0
 800699e:	0020      	movs	r0, r4
 80069a0:	f000 ff2a 	bl	80077f8 <_sbrk_r>
 80069a4:	68ba      	ldr	r2, [r7, #8]
 80069a6:	1a81      	subs	r1, r0, r2
 80069a8:	290f      	cmp	r1, #15
 80069aa:	dde3      	ble.n	8006974 <_malloc_trim_r+0x34>
 80069ac:	4b0c      	ldr	r3, [pc, #48]	; (80069e0 <_malloc_trim_r+0xa0>)
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	1ac0      	subs	r0, r0, r3
 80069b2:	4b0c      	ldr	r3, [pc, #48]	; (80069e4 <_malloc_trim_r+0xa4>)
 80069b4:	6018      	str	r0, [r3, #0]
 80069b6:	2301      	movs	r3, #1
 80069b8:	430b      	orrs	r3, r1
 80069ba:	6053      	str	r3, [r2, #4]
 80069bc:	e7da      	b.n	8006974 <_malloc_trim_r+0x34>
 80069be:	2601      	movs	r6, #1
 80069c0:	9b01      	ldr	r3, [sp, #4]
 80069c2:	68ba      	ldr	r2, [r7, #8]
 80069c4:	1b5b      	subs	r3, r3, r5
 80069c6:	4333      	orrs	r3, r6
 80069c8:	6053      	str	r3, [r2, #4]
 80069ca:	4b06      	ldr	r3, [pc, #24]	; (80069e4 <_malloc_trim_r+0xa4>)
 80069cc:	0020      	movs	r0, r4
 80069ce:	681a      	ldr	r2, [r3, #0]
 80069d0:	1b55      	subs	r5, r2, r5
 80069d2:	601d      	str	r5, [r3, #0]
 80069d4:	f000 fb88 	bl	80070e8 <__malloc_unlock>
 80069d8:	0030      	movs	r0, r6
 80069da:	e7cf      	b.n	800697c <_malloc_trim_r+0x3c>
 80069dc:	2000043c 	.word	0x2000043c
 80069e0:	20000844 	.word	0x20000844
 80069e4:	200009dc 	.word	0x200009dc

080069e8 <_free_r>:
 80069e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80069ea:	1e0d      	subs	r5, r1, #0
 80069ec:	9001      	str	r0, [sp, #4]
 80069ee:	d02d      	beq.n	8006a4c <_free_r+0x64>
 80069f0:	f000 fb72 	bl	80070d8 <__malloc_lock>
 80069f4:	2301      	movs	r3, #1
 80069f6:	0029      	movs	r1, r5
 80069f8:	469c      	mov	ip, r3
 80069fa:	3908      	subs	r1, #8
 80069fc:	684f      	ldr	r7, [r1, #4]
 80069fe:	4662      	mov	r2, ip
 8006a00:	003b      	movs	r3, r7
 8006a02:	4666      	mov	r6, ip
 8006a04:	4393      	bics	r3, r2
 8006a06:	18c8      	adds	r0, r1, r3
 8006a08:	6845      	ldr	r5, [r0, #4]
 8006a0a:	3202      	adds	r2, #2
 8006a0c:	4395      	bics	r5, r2
 8006a0e:	4a4a      	ldr	r2, [pc, #296]	; (8006b38 <_free_r+0x150>)
 8006a10:	4037      	ands	r7, r6
 8006a12:	6896      	ldr	r6, [r2, #8]
 8006a14:	4286      	cmp	r6, r0
 8006a16:	d11a      	bne.n	8006a4e <_free_r+0x66>
 8006a18:	195b      	adds	r3, r3, r5
 8006a1a:	2f00      	cmp	r7, #0
 8006a1c:	d106      	bne.n	8006a2c <_free_r+0x44>
 8006a1e:	6808      	ldr	r0, [r1, #0]
 8006a20:	1a09      	subs	r1, r1, r0
 8006a22:	688d      	ldr	r5, [r1, #8]
 8006a24:	181b      	adds	r3, r3, r0
 8006a26:	68c8      	ldr	r0, [r1, #12]
 8006a28:	60e8      	str	r0, [r5, #12]
 8006a2a:	6085      	str	r5, [r0, #8]
 8006a2c:	2001      	movs	r0, #1
 8006a2e:	4318      	orrs	r0, r3
 8006a30:	6048      	str	r0, [r1, #4]
 8006a32:	6091      	str	r1, [r2, #8]
 8006a34:	4a41      	ldr	r2, [pc, #260]	; (8006b3c <_free_r+0x154>)
 8006a36:	6812      	ldr	r2, [r2, #0]
 8006a38:	429a      	cmp	r2, r3
 8006a3a:	d804      	bhi.n	8006a46 <_free_r+0x5e>
 8006a3c:	4b40      	ldr	r3, [pc, #256]	; (8006b40 <_free_r+0x158>)
 8006a3e:	9801      	ldr	r0, [sp, #4]
 8006a40:	6819      	ldr	r1, [r3, #0]
 8006a42:	f7ff ff7d 	bl	8006940 <_malloc_trim_r>
 8006a46:	9801      	ldr	r0, [sp, #4]
 8006a48:	f000 fb4e 	bl	80070e8 <__malloc_unlock>
 8006a4c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006a4e:	2600      	movs	r6, #0
 8006a50:	6045      	str	r5, [r0, #4]
 8006a52:	42b7      	cmp	r7, r6
 8006a54:	d109      	bne.n	8006a6a <_free_r+0x82>
 8006a56:	680f      	ldr	r7, [r1, #0]
 8006a58:	4c3a      	ldr	r4, [pc, #232]	; (8006b44 <_free_r+0x15c>)
 8006a5a:	1bc9      	subs	r1, r1, r7
 8006a5c:	19db      	adds	r3, r3, r7
 8006a5e:	688f      	ldr	r7, [r1, #8]
 8006a60:	42a7      	cmp	r7, r4
 8006a62:	d02c      	beq.n	8006abe <_free_r+0xd6>
 8006a64:	68cc      	ldr	r4, [r1, #12]
 8006a66:	60fc      	str	r4, [r7, #12]
 8006a68:	60a7      	str	r7, [r4, #8]
 8006a6a:	1947      	adds	r7, r0, r5
 8006a6c:	687c      	ldr	r4, [r7, #4]
 8006a6e:	2701      	movs	r7, #1
 8006a70:	423c      	tst	r4, r7
 8006a72:	d10b      	bne.n	8006a8c <_free_r+0xa4>
 8006a74:	195b      	adds	r3, r3, r5
 8006a76:	6885      	ldr	r5, [r0, #8]
 8006a78:	2e00      	cmp	r6, #0
 8006a7a:	d122      	bne.n	8006ac2 <_free_r+0xda>
 8006a7c:	4c31      	ldr	r4, [pc, #196]	; (8006b44 <_free_r+0x15c>)
 8006a7e:	42a5      	cmp	r5, r4
 8006a80:	d11f      	bne.n	8006ac2 <_free_r+0xda>
 8006a82:	003e      	movs	r6, r7
 8006a84:	6151      	str	r1, [r2, #20]
 8006a86:	6111      	str	r1, [r2, #16]
 8006a88:	60cd      	str	r5, [r1, #12]
 8006a8a:	608d      	str	r5, [r1, #8]
 8006a8c:	2501      	movs	r5, #1
 8006a8e:	0028      	movs	r0, r5
 8006a90:	4318      	orrs	r0, r3
 8006a92:	6048      	str	r0, [r1, #4]
 8006a94:	50cb      	str	r3, [r1, r3]
 8006a96:	2e00      	cmp	r6, #0
 8006a98:	d1d5      	bne.n	8006a46 <_free_r+0x5e>
 8006a9a:	2080      	movs	r0, #128	; 0x80
 8006a9c:	0080      	lsls	r0, r0, #2
 8006a9e:	4283      	cmp	r3, r0
 8006aa0:	d213      	bcs.n	8006aca <_free_r+0xe2>
 8006aa2:	08d8      	lsrs	r0, r3, #3
 8006aa4:	095b      	lsrs	r3, r3, #5
 8006aa6:	409d      	lsls	r5, r3
 8006aa8:	6853      	ldr	r3, [r2, #4]
 8006aaa:	00c0      	lsls	r0, r0, #3
 8006aac:	431d      	orrs	r5, r3
 8006aae:	6055      	str	r5, [r2, #4]
 8006ab0:	1882      	adds	r2, r0, r2
 8006ab2:	6893      	ldr	r3, [r2, #8]
 8006ab4:	60ca      	str	r2, [r1, #12]
 8006ab6:	608b      	str	r3, [r1, #8]
 8006ab8:	6091      	str	r1, [r2, #8]
 8006aba:	60d9      	str	r1, [r3, #12]
 8006abc:	e7c3      	b.n	8006a46 <_free_r+0x5e>
 8006abe:	4666      	mov	r6, ip
 8006ac0:	e7d3      	b.n	8006a6a <_free_r+0x82>
 8006ac2:	68c0      	ldr	r0, [r0, #12]
 8006ac4:	60e8      	str	r0, [r5, #12]
 8006ac6:	6085      	str	r5, [r0, #8]
 8006ac8:	e7e0      	b.n	8006a8c <_free_r+0xa4>
 8006aca:	0a5d      	lsrs	r5, r3, #9
 8006acc:	2d04      	cmp	r5, #4
 8006ace:	d812      	bhi.n	8006af6 <_free_r+0x10e>
 8006ad0:	0998      	lsrs	r0, r3, #6
 8006ad2:	3038      	adds	r0, #56	; 0x38
 8006ad4:	00c6      	lsls	r6, r0, #3
 8006ad6:	18b6      	adds	r6, r6, r2
 8006ad8:	68b5      	ldr	r5, [r6, #8]
 8006ada:	2703      	movs	r7, #3
 8006adc:	42ae      	cmp	r6, r5
 8006ade:	d125      	bne.n	8006b2c <_free_r+0x144>
 8006ae0:	2301      	movs	r3, #1
 8006ae2:	1080      	asrs	r0, r0, #2
 8006ae4:	4083      	lsls	r3, r0
 8006ae6:	6850      	ldr	r0, [r2, #4]
 8006ae8:	4303      	orrs	r3, r0
 8006aea:	6053      	str	r3, [r2, #4]
 8006aec:	60ce      	str	r6, [r1, #12]
 8006aee:	608d      	str	r5, [r1, #8]
 8006af0:	60b1      	str	r1, [r6, #8]
 8006af2:	60e9      	str	r1, [r5, #12]
 8006af4:	e7a7      	b.n	8006a46 <_free_r+0x5e>
 8006af6:	2d14      	cmp	r5, #20
 8006af8:	d802      	bhi.n	8006b00 <_free_r+0x118>
 8006afa:	0028      	movs	r0, r5
 8006afc:	305b      	adds	r0, #91	; 0x5b
 8006afe:	e7e9      	b.n	8006ad4 <_free_r+0xec>
 8006b00:	2d54      	cmp	r5, #84	; 0x54
 8006b02:	d802      	bhi.n	8006b0a <_free_r+0x122>
 8006b04:	0b18      	lsrs	r0, r3, #12
 8006b06:	306e      	adds	r0, #110	; 0x6e
 8006b08:	e7e4      	b.n	8006ad4 <_free_r+0xec>
 8006b0a:	20aa      	movs	r0, #170	; 0xaa
 8006b0c:	0040      	lsls	r0, r0, #1
 8006b0e:	4285      	cmp	r5, r0
 8006b10:	d802      	bhi.n	8006b18 <_free_r+0x130>
 8006b12:	0bd8      	lsrs	r0, r3, #15
 8006b14:	3077      	adds	r0, #119	; 0x77
 8006b16:	e7dd      	b.n	8006ad4 <_free_r+0xec>
 8006b18:	4e0b      	ldr	r6, [pc, #44]	; (8006b48 <_free_r+0x160>)
 8006b1a:	207e      	movs	r0, #126	; 0x7e
 8006b1c:	42b5      	cmp	r5, r6
 8006b1e:	d8d9      	bhi.n	8006ad4 <_free_r+0xec>
 8006b20:	0c98      	lsrs	r0, r3, #18
 8006b22:	307c      	adds	r0, #124	; 0x7c
 8006b24:	e7d6      	b.n	8006ad4 <_free_r+0xec>
 8006b26:	68ad      	ldr	r5, [r5, #8]
 8006b28:	42ae      	cmp	r6, r5
 8006b2a:	d003      	beq.n	8006b34 <_free_r+0x14c>
 8006b2c:	686a      	ldr	r2, [r5, #4]
 8006b2e:	43ba      	bics	r2, r7
 8006b30:	429a      	cmp	r2, r3
 8006b32:	d8f8      	bhi.n	8006b26 <_free_r+0x13e>
 8006b34:	68ee      	ldr	r6, [r5, #12]
 8006b36:	e7d9      	b.n	8006aec <_free_r+0x104>
 8006b38:	2000043c 	.word	0x2000043c
 8006b3c:	20000848 	.word	0x20000848
 8006b40:	20000a0c 	.word	0x20000a0c
 8006b44:	20000444 	.word	0x20000444
 8006b48:	00000554 	.word	0x00000554

08006b4c <_fwalk_reent>:
 8006b4c:	23b8      	movs	r3, #184	; 0xb8
 8006b4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b50:	0006      	movs	r6, r0
 8006b52:	2700      	movs	r7, #0
 8006b54:	009b      	lsls	r3, r3, #2
 8006b56:	9101      	str	r1, [sp, #4]
 8006b58:	18c4      	adds	r4, r0, r3
 8006b5a:	6863      	ldr	r3, [r4, #4]
 8006b5c:	68a5      	ldr	r5, [r4, #8]
 8006b5e:	9300      	str	r3, [sp, #0]
 8006b60:	9b00      	ldr	r3, [sp, #0]
 8006b62:	3b01      	subs	r3, #1
 8006b64:	9300      	str	r3, [sp, #0]
 8006b66:	d504      	bpl.n	8006b72 <_fwalk_reent+0x26>
 8006b68:	6824      	ldr	r4, [r4, #0]
 8006b6a:	2c00      	cmp	r4, #0
 8006b6c:	d1f5      	bne.n	8006b5a <_fwalk_reent+0xe>
 8006b6e:	0038      	movs	r0, r7
 8006b70:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b72:	89ab      	ldrh	r3, [r5, #12]
 8006b74:	2b01      	cmp	r3, #1
 8006b76:	d908      	bls.n	8006b8a <_fwalk_reent+0x3e>
 8006b78:	220e      	movs	r2, #14
 8006b7a:	5eab      	ldrsh	r3, [r5, r2]
 8006b7c:	3301      	adds	r3, #1
 8006b7e:	d004      	beq.n	8006b8a <_fwalk_reent+0x3e>
 8006b80:	0029      	movs	r1, r5
 8006b82:	0030      	movs	r0, r6
 8006b84:	9b01      	ldr	r3, [sp, #4]
 8006b86:	4798      	blx	r3
 8006b88:	4307      	orrs	r7, r0
 8006b8a:	3568      	adds	r5, #104	; 0x68
 8006b8c:	e7e8      	b.n	8006b60 <_fwalk_reent+0x14>
	...

08006b90 <_localeconv_r>:
 8006b90:	4800      	ldr	r0, [pc, #0]	; (8006b94 <_localeconv_r+0x4>)
 8006b92:	4770      	bx	lr
 8006b94:	2000093c 	.word	0x2000093c

08006b98 <__retarget_lock_init_recursive>:
 8006b98:	4770      	bx	lr

08006b9a <__retarget_lock_close_recursive>:
 8006b9a:	4770      	bx	lr

08006b9c <__retarget_lock_acquire_recursive>:
 8006b9c:	4770      	bx	lr

08006b9e <__retarget_lock_release_recursive>:
 8006b9e:	4770      	bx	lr

08006ba0 <__swhatbuf_r>:
 8006ba0:	b570      	push	{r4, r5, r6, lr}
 8006ba2:	000e      	movs	r6, r1
 8006ba4:	001d      	movs	r5, r3
 8006ba6:	230e      	movs	r3, #14
 8006ba8:	5ec9      	ldrsh	r1, [r1, r3]
 8006baa:	0014      	movs	r4, r2
 8006bac:	b096      	sub	sp, #88	; 0x58
 8006bae:	2900      	cmp	r1, #0
 8006bb0:	da0b      	bge.n	8006bca <__swhatbuf_r+0x2a>
 8006bb2:	2300      	movs	r3, #0
 8006bb4:	602b      	str	r3, [r5, #0]
 8006bb6:	89b1      	ldrh	r1, [r6, #12]
 8006bb8:	2280      	movs	r2, #128	; 0x80
 8006bba:	0008      	movs	r0, r1
 8006bbc:	4010      	ands	r0, r2
 8006bbe:	4211      	tst	r1, r2
 8006bc0:	d117      	bne.n	8006bf2 <__swhatbuf_r+0x52>
 8006bc2:	2380      	movs	r3, #128	; 0x80
 8006bc4:	00db      	lsls	r3, r3, #3
 8006bc6:	6023      	str	r3, [r4, #0]
 8006bc8:	e016      	b.n	8006bf8 <__swhatbuf_r+0x58>
 8006bca:	466a      	mov	r2, sp
 8006bcc:	f001 fd92 	bl	80086f4 <_fstat_r>
 8006bd0:	2800      	cmp	r0, #0
 8006bd2:	dbee      	blt.n	8006bb2 <__swhatbuf_r+0x12>
 8006bd4:	23f0      	movs	r3, #240	; 0xf0
 8006bd6:	9901      	ldr	r1, [sp, #4]
 8006bd8:	021b      	lsls	r3, r3, #8
 8006bda:	4019      	ands	r1, r3
 8006bdc:	4b07      	ldr	r3, [pc, #28]	; (8006bfc <__swhatbuf_r+0x5c>)
 8006bde:	2080      	movs	r0, #128	; 0x80
 8006be0:	18c9      	adds	r1, r1, r3
 8006be2:	424b      	negs	r3, r1
 8006be4:	4159      	adcs	r1, r3
 8006be6:	2380      	movs	r3, #128	; 0x80
 8006be8:	00db      	lsls	r3, r3, #3
 8006bea:	6029      	str	r1, [r5, #0]
 8006bec:	0100      	lsls	r0, r0, #4
 8006bee:	6023      	str	r3, [r4, #0]
 8006bf0:	e002      	b.n	8006bf8 <__swhatbuf_r+0x58>
 8006bf2:	2240      	movs	r2, #64	; 0x40
 8006bf4:	0018      	movs	r0, r3
 8006bf6:	6022      	str	r2, [r4, #0]
 8006bf8:	b016      	add	sp, #88	; 0x58
 8006bfa:	bd70      	pop	{r4, r5, r6, pc}
 8006bfc:	ffffe000 	.word	0xffffe000

08006c00 <__smakebuf_r>:
 8006c00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c02:	2602      	movs	r6, #2
 8006c04:	898b      	ldrh	r3, [r1, #12]
 8006c06:	0005      	movs	r5, r0
 8006c08:	000c      	movs	r4, r1
 8006c0a:	4233      	tst	r3, r6
 8006c0c:	d006      	beq.n	8006c1c <__smakebuf_r+0x1c>
 8006c0e:	0023      	movs	r3, r4
 8006c10:	3343      	adds	r3, #67	; 0x43
 8006c12:	6023      	str	r3, [r4, #0]
 8006c14:	6123      	str	r3, [r4, #16]
 8006c16:	2301      	movs	r3, #1
 8006c18:	6163      	str	r3, [r4, #20]
 8006c1a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006c1c:	466a      	mov	r2, sp
 8006c1e:	ab01      	add	r3, sp, #4
 8006c20:	f7ff ffbe 	bl	8006ba0 <__swhatbuf_r>
 8006c24:	9900      	ldr	r1, [sp, #0]
 8006c26:	0007      	movs	r7, r0
 8006c28:	0028      	movs	r0, r5
 8006c2a:	f000 f82d 	bl	8006c88 <_malloc_r>
 8006c2e:	2800      	cmp	r0, #0
 8006c30:	d108      	bne.n	8006c44 <__smakebuf_r+0x44>
 8006c32:	220c      	movs	r2, #12
 8006c34:	5ea3      	ldrsh	r3, [r4, r2]
 8006c36:	059a      	lsls	r2, r3, #22
 8006c38:	d4ef      	bmi.n	8006c1a <__smakebuf_r+0x1a>
 8006c3a:	2203      	movs	r2, #3
 8006c3c:	4393      	bics	r3, r2
 8006c3e:	431e      	orrs	r6, r3
 8006c40:	81a6      	strh	r6, [r4, #12]
 8006c42:	e7e4      	b.n	8006c0e <__smakebuf_r+0xe>
 8006c44:	4b0f      	ldr	r3, [pc, #60]	; (8006c84 <__smakebuf_r+0x84>)
 8006c46:	63eb      	str	r3, [r5, #60]	; 0x3c
 8006c48:	2380      	movs	r3, #128	; 0x80
 8006c4a:	89a2      	ldrh	r2, [r4, #12]
 8006c4c:	6020      	str	r0, [r4, #0]
 8006c4e:	4313      	orrs	r3, r2
 8006c50:	81a3      	strh	r3, [r4, #12]
 8006c52:	9b00      	ldr	r3, [sp, #0]
 8006c54:	6120      	str	r0, [r4, #16]
 8006c56:	6163      	str	r3, [r4, #20]
 8006c58:	9b01      	ldr	r3, [sp, #4]
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	d00d      	beq.n	8006c7a <__smakebuf_r+0x7a>
 8006c5e:	0028      	movs	r0, r5
 8006c60:	230e      	movs	r3, #14
 8006c62:	5ee1      	ldrsh	r1, [r4, r3]
 8006c64:	f001 febe 	bl	80089e4 <_isatty_r>
 8006c68:	2800      	cmp	r0, #0
 8006c6a:	d006      	beq.n	8006c7a <__smakebuf_r+0x7a>
 8006c6c:	2203      	movs	r2, #3
 8006c6e:	89a3      	ldrh	r3, [r4, #12]
 8006c70:	4393      	bics	r3, r2
 8006c72:	001a      	movs	r2, r3
 8006c74:	2301      	movs	r3, #1
 8006c76:	4313      	orrs	r3, r2
 8006c78:	81a3      	strh	r3, [r4, #12]
 8006c7a:	89a0      	ldrh	r0, [r4, #12]
 8006c7c:	4307      	orrs	r7, r0
 8006c7e:	81a7      	strh	r7, [r4, #12]
 8006c80:	e7cb      	b.n	8006c1a <__smakebuf_r+0x1a>
 8006c82:	46c0      	nop			; (mov r8, r8)
 8006c84:	08006875 	.word	0x08006875

08006c88 <_malloc_r>:
 8006c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c8a:	000d      	movs	r5, r1
 8006c8c:	b087      	sub	sp, #28
 8006c8e:	350b      	adds	r5, #11
 8006c90:	9001      	str	r0, [sp, #4]
 8006c92:	2d16      	cmp	r5, #22
 8006c94:	d908      	bls.n	8006ca8 <_malloc_r+0x20>
 8006c96:	2207      	movs	r2, #7
 8006c98:	4395      	bics	r5, r2
 8006c9a:	d506      	bpl.n	8006caa <_malloc_r+0x22>
 8006c9c:	230c      	movs	r3, #12
 8006c9e:	9a01      	ldr	r2, [sp, #4]
 8006ca0:	6013      	str	r3, [r2, #0]
 8006ca2:	2000      	movs	r0, #0
 8006ca4:	b007      	add	sp, #28
 8006ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ca8:	2510      	movs	r5, #16
 8006caa:	42a9      	cmp	r1, r5
 8006cac:	d8f6      	bhi.n	8006c9c <_malloc_r+0x14>
 8006cae:	9801      	ldr	r0, [sp, #4]
 8006cb0:	f000 fa12 	bl	80070d8 <__malloc_lock>
 8006cb4:	23fc      	movs	r3, #252	; 0xfc
 8006cb6:	48bd      	ldr	r0, [pc, #756]	; (8006fac <_malloc_r+0x324>)
 8006cb8:	005b      	lsls	r3, r3, #1
 8006cba:	429d      	cmp	r5, r3
 8006cbc:	d21a      	bcs.n	8006cf4 <_malloc_r+0x6c>
 8006cbe:	002a      	movs	r2, r5
 8006cc0:	3208      	adds	r2, #8
 8006cc2:	1882      	adds	r2, r0, r2
 8006cc4:	0011      	movs	r1, r2
 8006cc6:	6854      	ldr	r4, [r2, #4]
 8006cc8:	3908      	subs	r1, #8
 8006cca:	08eb      	lsrs	r3, r5, #3
 8006ccc:	428c      	cmp	r4, r1
 8006cce:	d103      	bne.n	8006cd8 <_malloc_r+0x50>
 8006cd0:	68d4      	ldr	r4, [r2, #12]
 8006cd2:	3302      	adds	r3, #2
 8006cd4:	42a2      	cmp	r2, r4
 8006cd6:	d023      	beq.n	8006d20 <_malloc_r+0x98>
 8006cd8:	2303      	movs	r3, #3
 8006cda:	6862      	ldr	r2, [r4, #4]
 8006cdc:	68a1      	ldr	r1, [r4, #8]
 8006cde:	439a      	bics	r2, r3
 8006ce0:	0013      	movs	r3, r2
 8006ce2:	68e2      	ldr	r2, [r4, #12]
 8006ce4:	18e3      	adds	r3, r4, r3
 8006ce6:	60ca      	str	r2, [r1, #12]
 8006ce8:	6091      	str	r1, [r2, #8]
 8006cea:	2201      	movs	r2, #1
 8006cec:	6859      	ldr	r1, [r3, #4]
 8006cee:	430a      	orrs	r2, r1
 8006cf0:	605a      	str	r2, [r3, #4]
 8006cf2:	e02b      	b.n	8006d4c <_malloc_r+0xc4>
 8006cf4:	233f      	movs	r3, #63	; 0x3f
 8006cf6:	0a6a      	lsrs	r2, r5, #9
 8006cf8:	d003      	beq.n	8006d02 <_malloc_r+0x7a>
 8006cfa:	2a04      	cmp	r2, #4
 8006cfc:	d82c      	bhi.n	8006d58 <_malloc_r+0xd0>
 8006cfe:	09ab      	lsrs	r3, r5, #6
 8006d00:	3338      	adds	r3, #56	; 0x38
 8006d02:	2203      	movs	r2, #3
 8006d04:	4694      	mov	ip, r2
 8006d06:	00d9      	lsls	r1, r3, #3
 8006d08:	1809      	adds	r1, r1, r0
 8006d0a:	68cc      	ldr	r4, [r1, #12]
 8006d0c:	428c      	cmp	r4, r1
 8006d0e:	d006      	beq.n	8006d1e <_malloc_r+0x96>
 8006d10:	4666      	mov	r6, ip
 8006d12:	6862      	ldr	r2, [r4, #4]
 8006d14:	43b2      	bics	r2, r6
 8006d16:	1b57      	subs	r7, r2, r5
 8006d18:	2f0f      	cmp	r7, #15
 8006d1a:	dd35      	ble.n	8006d88 <_malloc_r+0x100>
 8006d1c:	3b01      	subs	r3, #1
 8006d1e:	3301      	adds	r3, #1
 8006d20:	6904      	ldr	r4, [r0, #16]
 8006d22:	49a3      	ldr	r1, [pc, #652]	; (8006fb0 <_malloc_r+0x328>)
 8006d24:	428c      	cmp	r4, r1
 8006d26:	d056      	beq.n	8006dd6 <_malloc_r+0x14e>
 8006d28:	2203      	movs	r2, #3
 8006d2a:	6866      	ldr	r6, [r4, #4]
 8006d2c:	4396      	bics	r6, r2
 8006d2e:	0032      	movs	r2, r6
 8006d30:	1b76      	subs	r6, r6, r5
 8006d32:	2e0f      	cmp	r6, #15
 8006d34:	dd36      	ble.n	8006da4 <_malloc_r+0x11c>
 8006d36:	2701      	movs	r7, #1
 8006d38:	1963      	adds	r3, r4, r5
 8006d3a:	433d      	orrs	r5, r7
 8006d3c:	4337      	orrs	r7, r6
 8006d3e:	6065      	str	r5, [r4, #4]
 8006d40:	6143      	str	r3, [r0, #20]
 8006d42:	6103      	str	r3, [r0, #16]
 8006d44:	60d9      	str	r1, [r3, #12]
 8006d46:	6099      	str	r1, [r3, #8]
 8006d48:	605f      	str	r7, [r3, #4]
 8006d4a:	50a6      	str	r6, [r4, r2]
 8006d4c:	9801      	ldr	r0, [sp, #4]
 8006d4e:	f000 f9cb 	bl	80070e8 <__malloc_unlock>
 8006d52:	0020      	movs	r0, r4
 8006d54:	3008      	adds	r0, #8
 8006d56:	e7a5      	b.n	8006ca4 <_malloc_r+0x1c>
 8006d58:	2a14      	cmp	r2, #20
 8006d5a:	d802      	bhi.n	8006d62 <_malloc_r+0xda>
 8006d5c:	0013      	movs	r3, r2
 8006d5e:	335b      	adds	r3, #91	; 0x5b
 8006d60:	e7cf      	b.n	8006d02 <_malloc_r+0x7a>
 8006d62:	2a54      	cmp	r2, #84	; 0x54
 8006d64:	d802      	bhi.n	8006d6c <_malloc_r+0xe4>
 8006d66:	0b2b      	lsrs	r3, r5, #12
 8006d68:	336e      	adds	r3, #110	; 0x6e
 8006d6a:	e7ca      	b.n	8006d02 <_malloc_r+0x7a>
 8006d6c:	23aa      	movs	r3, #170	; 0xaa
 8006d6e:	005b      	lsls	r3, r3, #1
 8006d70:	429a      	cmp	r2, r3
 8006d72:	d802      	bhi.n	8006d7a <_malloc_r+0xf2>
 8006d74:	0beb      	lsrs	r3, r5, #15
 8006d76:	3377      	adds	r3, #119	; 0x77
 8006d78:	e7c3      	b.n	8006d02 <_malloc_r+0x7a>
 8006d7a:	498e      	ldr	r1, [pc, #568]	; (8006fb4 <_malloc_r+0x32c>)
 8006d7c:	237e      	movs	r3, #126	; 0x7e
 8006d7e:	428a      	cmp	r2, r1
 8006d80:	d8bf      	bhi.n	8006d02 <_malloc_r+0x7a>
 8006d82:	0cab      	lsrs	r3, r5, #18
 8006d84:	337c      	adds	r3, #124	; 0x7c
 8006d86:	e7bc      	b.n	8006d02 <_malloc_r+0x7a>
 8006d88:	68e6      	ldr	r6, [r4, #12]
 8006d8a:	2f00      	cmp	r7, #0
 8006d8c:	db08      	blt.n	8006da0 <_malloc_r+0x118>
 8006d8e:	68a3      	ldr	r3, [r4, #8]
 8006d90:	60de      	str	r6, [r3, #12]
 8006d92:	60b3      	str	r3, [r6, #8]
 8006d94:	2301      	movs	r3, #1
 8006d96:	18a2      	adds	r2, r4, r2
 8006d98:	6851      	ldr	r1, [r2, #4]
 8006d9a:	430b      	orrs	r3, r1
 8006d9c:	6053      	str	r3, [r2, #4]
 8006d9e:	e7d5      	b.n	8006d4c <_malloc_r+0xc4>
 8006da0:	0034      	movs	r4, r6
 8006da2:	e7b3      	b.n	8006d0c <_malloc_r+0x84>
 8006da4:	6141      	str	r1, [r0, #20]
 8006da6:	6101      	str	r1, [r0, #16]
 8006da8:	2e00      	cmp	r6, #0
 8006daa:	daf3      	bge.n	8006d94 <_malloc_r+0x10c>
 8006dac:	6841      	ldr	r1, [r0, #4]
 8006dae:	468c      	mov	ip, r1
 8006db0:	2180      	movs	r1, #128	; 0x80
 8006db2:	0089      	lsls	r1, r1, #2
 8006db4:	428a      	cmp	r2, r1
 8006db6:	d300      	bcc.n	8006dba <_malloc_r+0x132>
 8006db8:	e089      	b.n	8006ece <_malloc_r+0x246>
 8006dba:	0956      	lsrs	r6, r2, #5
 8006dbc:	08d1      	lsrs	r1, r2, #3
 8006dbe:	2201      	movs	r2, #1
 8006dc0:	40b2      	lsls	r2, r6
 8006dc2:	4666      	mov	r6, ip
 8006dc4:	00c9      	lsls	r1, r1, #3
 8006dc6:	4332      	orrs	r2, r6
 8006dc8:	6042      	str	r2, [r0, #4]
 8006dca:	1808      	adds	r0, r1, r0
 8006dcc:	6882      	ldr	r2, [r0, #8]
 8006dce:	60e0      	str	r0, [r4, #12]
 8006dd0:	60a2      	str	r2, [r4, #8]
 8006dd2:	6084      	str	r4, [r0, #8]
 8006dd4:	60d4      	str	r4, [r2, #12]
 8006dd6:	2201      	movs	r2, #1
 8006dd8:	4874      	ldr	r0, [pc, #464]	; (8006fac <_malloc_r+0x324>)
 8006dda:	1099      	asrs	r1, r3, #2
 8006ddc:	408a      	lsls	r2, r1
 8006dde:	6841      	ldr	r1, [r0, #4]
 8006de0:	4291      	cmp	r1, r2
 8006de2:	d325      	bcc.n	8006e30 <_malloc_r+0x1a8>
 8006de4:	420a      	tst	r2, r1
 8006de6:	d105      	bne.n	8006df4 <_malloc_r+0x16c>
 8006de8:	2403      	movs	r4, #3
 8006dea:	43a3      	bics	r3, r4
 8006dec:	0052      	lsls	r2, r2, #1
 8006dee:	3304      	adds	r3, #4
 8006df0:	420a      	tst	r2, r1
 8006df2:	d0fb      	beq.n	8006dec <_malloc_r+0x164>
 8006df4:	00d9      	lsls	r1, r3, #3
 8006df6:	1841      	adds	r1, r0, r1
 8006df8:	468c      	mov	ip, r1
 8006dfa:	9302      	str	r3, [sp, #8]
 8006dfc:	68cc      	ldr	r4, [r1, #12]
 8006dfe:	428c      	cmp	r4, r1
 8006e00:	d000      	beq.n	8006e04 <_malloc_r+0x17c>
 8006e02:	e09b      	b.n	8006f3c <_malloc_r+0x2b4>
 8006e04:	2603      	movs	r6, #3
 8006e06:	9c02      	ldr	r4, [sp, #8]
 8006e08:	3108      	adds	r1, #8
 8006e0a:	3401      	adds	r4, #1
 8006e0c:	9402      	str	r4, [sp, #8]
 8006e0e:	4234      	tst	r4, r6
 8006e10:	d1f4      	bne.n	8006dfc <_malloc_r+0x174>
 8006e12:	2103      	movs	r1, #3
 8006e14:	420b      	tst	r3, r1
 8006e16:	d000      	beq.n	8006e1a <_malloc_r+0x192>
 8006e18:	e0b7      	b.n	8006f8a <_malloc_r+0x302>
 8006e1a:	6843      	ldr	r3, [r0, #4]
 8006e1c:	4393      	bics	r3, r2
 8006e1e:	6043      	str	r3, [r0, #4]
 8006e20:	4b62      	ldr	r3, [pc, #392]	; (8006fac <_malloc_r+0x324>)
 8006e22:	0052      	lsls	r2, r2, #1
 8006e24:	6859      	ldr	r1, [r3, #4]
 8006e26:	4291      	cmp	r1, r2
 8006e28:	d302      	bcc.n	8006e30 <_malloc_r+0x1a8>
 8006e2a:	2a00      	cmp	r2, #0
 8006e2c:	d000      	beq.n	8006e30 <_malloc_r+0x1a8>
 8006e2e:	e0bb      	b.n	8006fa8 <_malloc_r+0x320>
 8006e30:	2303      	movs	r3, #3
 8006e32:	6886      	ldr	r6, [r0, #8]
 8006e34:	6872      	ldr	r2, [r6, #4]
 8006e36:	439a      	bics	r2, r3
 8006e38:	9202      	str	r2, [sp, #8]
 8006e3a:	42aa      	cmp	r2, r5
 8006e3c:	d303      	bcc.n	8006e46 <_malloc_r+0x1be>
 8006e3e:	1b51      	subs	r1, r2, r5
 8006e40:	290f      	cmp	r1, #15
 8006e42:	dd00      	ble.n	8006e46 <_malloc_r+0x1be>
 8006e44:	e125      	b.n	8007092 <_malloc_r+0x40a>
 8006e46:	9b02      	ldr	r3, [sp, #8]
 8006e48:	2008      	movs	r0, #8
 8006e4a:	18f3      	adds	r3, r6, r3
 8006e4c:	9303      	str	r3, [sp, #12]
 8006e4e:	4b5a      	ldr	r3, [pc, #360]	; (8006fb8 <_malloc_r+0x330>)
 8006e50:	681f      	ldr	r7, [r3, #0]
 8006e52:	f000 fd43 	bl	80078dc <sysconf>
 8006e56:	4b59      	ldr	r3, [pc, #356]	; (8006fbc <_malloc_r+0x334>)
 8006e58:	3710      	adds	r7, #16
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	197f      	adds	r7, r7, r5
 8006e5e:	9004      	str	r0, [sp, #16]
 8006e60:	3301      	adds	r3, #1
 8006e62:	d003      	beq.n	8006e6c <_malloc_r+0x1e4>
 8006e64:	3f01      	subs	r7, #1
 8006e66:	183f      	adds	r7, r7, r0
 8006e68:	4243      	negs	r3, r0
 8006e6a:	401f      	ands	r7, r3
 8006e6c:	0039      	movs	r1, r7
 8006e6e:	9801      	ldr	r0, [sp, #4]
 8006e70:	f000 fcc2 	bl	80077f8 <_sbrk_r>
 8006e74:	0004      	movs	r4, r0
 8006e76:	1c43      	adds	r3, r0, #1
 8006e78:	d100      	bne.n	8006e7c <_malloc_r+0x1f4>
 8006e7a:	e0de      	b.n	800703a <_malloc_r+0x3b2>
 8006e7c:	9b03      	ldr	r3, [sp, #12]
 8006e7e:	4283      	cmp	r3, r0
 8006e80:	d903      	bls.n	8006e8a <_malloc_r+0x202>
 8006e82:	4b4a      	ldr	r3, [pc, #296]	; (8006fac <_malloc_r+0x324>)
 8006e84:	429e      	cmp	r6, r3
 8006e86:	d000      	beq.n	8006e8a <_malloc_r+0x202>
 8006e88:	e0d7      	b.n	800703a <_malloc_r+0x3b2>
 8006e8a:	4b4d      	ldr	r3, [pc, #308]	; (8006fc0 <_malloc_r+0x338>)
 8006e8c:	9903      	ldr	r1, [sp, #12]
 8006e8e:	681a      	ldr	r2, [r3, #0]
 8006e90:	18ba      	adds	r2, r7, r2
 8006e92:	601a      	str	r2, [r3, #0]
 8006e94:	9b04      	ldr	r3, [sp, #16]
 8006e96:	3b01      	subs	r3, #1
 8006e98:	42a1      	cmp	r1, r4
 8006e9a:	d000      	beq.n	8006e9e <_malloc_r+0x216>
 8006e9c:	e096      	b.n	8006fcc <_malloc_r+0x344>
 8006e9e:	4219      	tst	r1, r3
 8006ea0:	d000      	beq.n	8006ea4 <_malloc_r+0x21c>
 8006ea2:	e093      	b.n	8006fcc <_malloc_r+0x344>
 8006ea4:	2601      	movs	r6, #1
 8006ea6:	4b41      	ldr	r3, [pc, #260]	; (8006fac <_malloc_r+0x324>)
 8006ea8:	9a02      	ldr	r2, [sp, #8]
 8006eaa:	689b      	ldr	r3, [r3, #8]
 8006eac:	19d7      	adds	r7, r2, r7
 8006eae:	433e      	orrs	r6, r7
 8006eb0:	605e      	str	r6, [r3, #4]
 8006eb2:	4b43      	ldr	r3, [pc, #268]	; (8006fc0 <_malloc_r+0x338>)
 8006eb4:	4a43      	ldr	r2, [pc, #268]	; (8006fc4 <_malloc_r+0x33c>)
 8006eb6:	681b      	ldr	r3, [r3, #0]
 8006eb8:	6811      	ldr	r1, [r2, #0]
 8006eba:	428b      	cmp	r3, r1
 8006ebc:	d900      	bls.n	8006ec0 <_malloc_r+0x238>
 8006ebe:	6013      	str	r3, [r2, #0]
 8006ec0:	4a41      	ldr	r2, [pc, #260]	; (8006fc8 <_malloc_r+0x340>)
 8006ec2:	6811      	ldr	r1, [r2, #0]
 8006ec4:	428b      	cmp	r3, r1
 8006ec6:	d800      	bhi.n	8006eca <_malloc_r+0x242>
 8006ec8:	e0b7      	b.n	800703a <_malloc_r+0x3b2>
 8006eca:	6013      	str	r3, [r2, #0]
 8006ecc:	e0b5      	b.n	800703a <_malloc_r+0x3b2>
 8006ece:	0a56      	lsrs	r6, r2, #9
 8006ed0:	2e04      	cmp	r6, #4
 8006ed2:	d811      	bhi.n	8006ef8 <_malloc_r+0x270>
 8006ed4:	0991      	lsrs	r1, r2, #6
 8006ed6:	3138      	adds	r1, #56	; 0x38
 8006ed8:	00cf      	lsls	r7, r1, #3
 8006eda:	183f      	adds	r7, r7, r0
 8006edc:	68be      	ldr	r6, [r7, #8]
 8006ede:	42b7      	cmp	r7, r6
 8006ee0:	d125      	bne.n	8006f2e <_malloc_r+0x2a6>
 8006ee2:	2201      	movs	r2, #1
 8006ee4:	1089      	asrs	r1, r1, #2
 8006ee6:	408a      	lsls	r2, r1
 8006ee8:	4661      	mov	r1, ip
 8006eea:	430a      	orrs	r2, r1
 8006eec:	6042      	str	r2, [r0, #4]
 8006eee:	60e7      	str	r7, [r4, #12]
 8006ef0:	60a6      	str	r6, [r4, #8]
 8006ef2:	60bc      	str	r4, [r7, #8]
 8006ef4:	60f4      	str	r4, [r6, #12]
 8006ef6:	e76e      	b.n	8006dd6 <_malloc_r+0x14e>
 8006ef8:	2e14      	cmp	r6, #20
 8006efa:	d802      	bhi.n	8006f02 <_malloc_r+0x27a>
 8006efc:	0031      	movs	r1, r6
 8006efe:	315b      	adds	r1, #91	; 0x5b
 8006f00:	e7ea      	b.n	8006ed8 <_malloc_r+0x250>
 8006f02:	2e54      	cmp	r6, #84	; 0x54
 8006f04:	d802      	bhi.n	8006f0c <_malloc_r+0x284>
 8006f06:	0b11      	lsrs	r1, r2, #12
 8006f08:	316e      	adds	r1, #110	; 0x6e
 8006f0a:	e7e5      	b.n	8006ed8 <_malloc_r+0x250>
 8006f0c:	21aa      	movs	r1, #170	; 0xaa
 8006f0e:	0049      	lsls	r1, r1, #1
 8006f10:	428e      	cmp	r6, r1
 8006f12:	d802      	bhi.n	8006f1a <_malloc_r+0x292>
 8006f14:	0bd1      	lsrs	r1, r2, #15
 8006f16:	3177      	adds	r1, #119	; 0x77
 8006f18:	e7de      	b.n	8006ed8 <_malloc_r+0x250>
 8006f1a:	4f26      	ldr	r7, [pc, #152]	; (8006fb4 <_malloc_r+0x32c>)
 8006f1c:	217e      	movs	r1, #126	; 0x7e
 8006f1e:	42be      	cmp	r6, r7
 8006f20:	d8da      	bhi.n	8006ed8 <_malloc_r+0x250>
 8006f22:	0c91      	lsrs	r1, r2, #18
 8006f24:	317c      	adds	r1, #124	; 0x7c
 8006f26:	e7d7      	b.n	8006ed8 <_malloc_r+0x250>
 8006f28:	68b6      	ldr	r6, [r6, #8]
 8006f2a:	42b7      	cmp	r7, r6
 8006f2c:	d004      	beq.n	8006f38 <_malloc_r+0x2b0>
 8006f2e:	2003      	movs	r0, #3
 8006f30:	6871      	ldr	r1, [r6, #4]
 8006f32:	4381      	bics	r1, r0
 8006f34:	4291      	cmp	r1, r2
 8006f36:	d8f7      	bhi.n	8006f28 <_malloc_r+0x2a0>
 8006f38:	68f7      	ldr	r7, [r6, #12]
 8006f3a:	e7d8      	b.n	8006eee <_malloc_r+0x266>
 8006f3c:	2703      	movs	r7, #3
 8006f3e:	6866      	ldr	r6, [r4, #4]
 8006f40:	43be      	bics	r6, r7
 8006f42:	9603      	str	r6, [sp, #12]
 8006f44:	1b77      	subs	r7, r6, r5
 8006f46:	68e6      	ldr	r6, [r4, #12]
 8006f48:	2f0f      	cmp	r7, #15
 8006f4a:	dd10      	ble.n	8006f6e <_malloc_r+0x2e6>
 8006f4c:	2201      	movs	r2, #1
 8006f4e:	68a1      	ldr	r1, [r4, #8]
 8006f50:	1963      	adds	r3, r4, r5
 8006f52:	4315      	orrs	r5, r2
 8006f54:	6065      	str	r5, [r4, #4]
 8006f56:	60ce      	str	r6, [r1, #12]
 8006f58:	60b1      	str	r1, [r6, #8]
 8006f5a:	6143      	str	r3, [r0, #20]
 8006f5c:	6103      	str	r3, [r0, #16]
 8006f5e:	4814      	ldr	r0, [pc, #80]	; (8006fb0 <_malloc_r+0x328>)
 8006f60:	433a      	orrs	r2, r7
 8006f62:	60d8      	str	r0, [r3, #12]
 8006f64:	6098      	str	r0, [r3, #8]
 8006f66:	605a      	str	r2, [r3, #4]
 8006f68:	9b03      	ldr	r3, [sp, #12]
 8006f6a:	50e7      	str	r7, [r4, r3]
 8006f6c:	e6ee      	b.n	8006d4c <_malloc_r+0xc4>
 8006f6e:	2f00      	cmp	r7, #0
 8006f70:	db09      	blt.n	8006f86 <_malloc_r+0x2fe>
 8006f72:	9b03      	ldr	r3, [sp, #12]
 8006f74:	18e1      	adds	r1, r4, r3
 8006f76:	2301      	movs	r3, #1
 8006f78:	684a      	ldr	r2, [r1, #4]
 8006f7a:	4313      	orrs	r3, r2
 8006f7c:	604b      	str	r3, [r1, #4]
 8006f7e:	68a3      	ldr	r3, [r4, #8]
 8006f80:	60de      	str	r6, [r3, #12]
 8006f82:	60b3      	str	r3, [r6, #8]
 8006f84:	e6e2      	b.n	8006d4c <_malloc_r+0xc4>
 8006f86:	0034      	movs	r4, r6
 8006f88:	e739      	b.n	8006dfe <_malloc_r+0x176>
 8006f8a:	2108      	movs	r1, #8
 8006f8c:	4249      	negs	r1, r1
 8006f8e:	448c      	add	ip, r1
 8006f90:	4661      	mov	r1, ip
 8006f92:	6889      	ldr	r1, [r1, #8]
 8006f94:	3b01      	subs	r3, #1
 8006f96:	4561      	cmp	r1, ip
 8006f98:	d100      	bne.n	8006f9c <_malloc_r+0x314>
 8006f9a:	e73a      	b.n	8006e12 <_malloc_r+0x18a>
 8006f9c:	e740      	b.n	8006e20 <_malloc_r+0x198>
 8006f9e:	3304      	adds	r3, #4
 8006fa0:	0052      	lsls	r2, r2, #1
 8006fa2:	420a      	tst	r2, r1
 8006fa4:	d0fb      	beq.n	8006f9e <_malloc_r+0x316>
 8006fa6:	e725      	b.n	8006df4 <_malloc_r+0x16c>
 8006fa8:	9b02      	ldr	r3, [sp, #8]
 8006faa:	e7fa      	b.n	8006fa2 <_malloc_r+0x31a>
 8006fac:	2000043c 	.word	0x2000043c
 8006fb0:	20000444 	.word	0x20000444
 8006fb4:	00000554 	.word	0x00000554
 8006fb8:	20000a0c 	.word	0x20000a0c
 8006fbc:	20000844 	.word	0x20000844
 8006fc0:	200009dc 	.word	0x200009dc
 8006fc4:	20000a04 	.word	0x20000a04
 8006fc8:	20000a08 	.word	0x20000a08
 8006fcc:	4935      	ldr	r1, [pc, #212]	; (80070a4 <_malloc_r+0x41c>)
 8006fce:	6808      	ldr	r0, [r1, #0]
 8006fd0:	3001      	adds	r0, #1
 8006fd2:	d140      	bne.n	8007056 <_malloc_r+0x3ce>
 8006fd4:	600c      	str	r4, [r1, #0]
 8006fd6:	2207      	movs	r2, #7
 8006fd8:	0021      	movs	r1, r4
 8006fda:	4011      	ands	r1, r2
 8006fdc:	2000      	movs	r0, #0
 8006fde:	9103      	str	r1, [sp, #12]
 8006fe0:	4214      	tst	r4, r2
 8006fe2:	d002      	beq.n	8006fea <_malloc_r+0x362>
 8006fe4:	3008      	adds	r0, #8
 8006fe6:	1a40      	subs	r0, r0, r1
 8006fe8:	1824      	adds	r4, r4, r0
 8006fea:	19e2      	adds	r2, r4, r7
 8006fec:	9205      	str	r2, [sp, #20]
 8006fee:	9f05      	ldr	r7, [sp, #20]
 8006ff0:	9a04      	ldr	r2, [sp, #16]
 8006ff2:	401f      	ands	r7, r3
 8006ff4:	1810      	adds	r0, r2, r0
 8006ff6:	1bc7      	subs	r7, r0, r7
 8006ff8:	401f      	ands	r7, r3
 8006ffa:	0039      	movs	r1, r7
 8006ffc:	9801      	ldr	r0, [sp, #4]
 8006ffe:	f000 fbfb 	bl	80077f8 <_sbrk_r>
 8007002:	1c43      	adds	r3, r0, #1
 8007004:	d107      	bne.n	8007016 <_malloc_r+0x38e>
 8007006:	9b03      	ldr	r3, [sp, #12]
 8007008:	2b00      	cmp	r3, #0
 800700a:	d02a      	beq.n	8007062 <_malloc_r+0x3da>
 800700c:	0018      	movs	r0, r3
 800700e:	2700      	movs	r7, #0
 8007010:	9b05      	ldr	r3, [sp, #20]
 8007012:	3808      	subs	r0, #8
 8007014:	1818      	adds	r0, r3, r0
 8007016:	4a24      	ldr	r2, [pc, #144]	; (80070a8 <_malloc_r+0x420>)
 8007018:	1b00      	subs	r0, r0, r4
 800701a:	6813      	ldr	r3, [r2, #0]
 800701c:	19db      	adds	r3, r3, r7
 800701e:	6013      	str	r3, [r2, #0]
 8007020:	2201      	movs	r2, #1
 8007022:	4b22      	ldr	r3, [pc, #136]	; (80070ac <_malloc_r+0x424>)
 8007024:	19c7      	adds	r7, r0, r7
 8007026:	4317      	orrs	r7, r2
 8007028:	609c      	str	r4, [r3, #8]
 800702a:	6067      	str	r7, [r4, #4]
 800702c:	429e      	cmp	r6, r3
 800702e:	d100      	bne.n	8007032 <_malloc_r+0x3aa>
 8007030:	e73f      	b.n	8006eb2 <_malloc_r+0x22a>
 8007032:	9b02      	ldr	r3, [sp, #8]
 8007034:	2b0f      	cmp	r3, #15
 8007036:	d817      	bhi.n	8007068 <_malloc_r+0x3e0>
 8007038:	6062      	str	r2, [r4, #4]
 800703a:	2203      	movs	r2, #3
 800703c:	4b1b      	ldr	r3, [pc, #108]	; (80070ac <_malloc_r+0x424>)
 800703e:	689b      	ldr	r3, [r3, #8]
 8007040:	685b      	ldr	r3, [r3, #4]
 8007042:	4393      	bics	r3, r2
 8007044:	1b59      	subs	r1, r3, r5
 8007046:	42ab      	cmp	r3, r5
 8007048:	d301      	bcc.n	800704e <_malloc_r+0x3c6>
 800704a:	290f      	cmp	r1, #15
 800704c:	dc21      	bgt.n	8007092 <_malloc_r+0x40a>
 800704e:	9801      	ldr	r0, [sp, #4]
 8007050:	f000 f84a 	bl	80070e8 <__malloc_unlock>
 8007054:	e625      	b.n	8006ca2 <_malloc_r+0x1a>
 8007056:	9903      	ldr	r1, [sp, #12]
 8007058:	1a61      	subs	r1, r4, r1
 800705a:	1889      	adds	r1, r1, r2
 800705c:	4a12      	ldr	r2, [pc, #72]	; (80070a8 <_malloc_r+0x420>)
 800705e:	6011      	str	r1, [r2, #0]
 8007060:	e7b9      	b.n	8006fd6 <_malloc_r+0x34e>
 8007062:	9805      	ldr	r0, [sp, #20]
 8007064:	9f03      	ldr	r7, [sp, #12]
 8007066:	e7d6      	b.n	8007016 <_malloc_r+0x38e>
 8007068:	2307      	movs	r3, #7
 800706a:	9f02      	ldr	r7, [sp, #8]
 800706c:	3f0c      	subs	r7, #12
 800706e:	439f      	bics	r7, r3
 8007070:	6873      	ldr	r3, [r6, #4]
 8007072:	401a      	ands	r2, r3
 8007074:	433a      	orrs	r2, r7
 8007076:	6072      	str	r2, [r6, #4]
 8007078:	2205      	movs	r2, #5
 800707a:	19f3      	adds	r3, r6, r7
 800707c:	605a      	str	r2, [r3, #4]
 800707e:	609a      	str	r2, [r3, #8]
 8007080:	2f0f      	cmp	r7, #15
 8007082:	d800      	bhi.n	8007086 <_malloc_r+0x3fe>
 8007084:	e715      	b.n	8006eb2 <_malloc_r+0x22a>
 8007086:	0031      	movs	r1, r6
 8007088:	9801      	ldr	r0, [sp, #4]
 800708a:	3108      	adds	r1, #8
 800708c:	f7ff fcac 	bl	80069e8 <_free_r>
 8007090:	e70f      	b.n	8006eb2 <_malloc_r+0x22a>
 8007092:	2201      	movs	r2, #1
 8007094:	0013      	movs	r3, r2
 8007096:	4805      	ldr	r0, [pc, #20]	; (80070ac <_malloc_r+0x424>)
 8007098:	432b      	orrs	r3, r5
 800709a:	6884      	ldr	r4, [r0, #8]
 800709c:	6063      	str	r3, [r4, #4]
 800709e:	1963      	adds	r3, r4, r5
 80070a0:	6083      	str	r3, [r0, #8]
 80070a2:	e624      	b.n	8006cee <_malloc_r+0x66>
 80070a4:	20000844 	.word	0x20000844
 80070a8:	200009dc 	.word	0x200009dc
 80070ac:	2000043c 	.word	0x2000043c

080070b0 <memchr>:
 80070b0:	b2c9      	uxtb	r1, r1
 80070b2:	1882      	adds	r2, r0, r2
 80070b4:	4290      	cmp	r0, r2
 80070b6:	d101      	bne.n	80070bc <memchr+0xc>
 80070b8:	2000      	movs	r0, #0
 80070ba:	4770      	bx	lr
 80070bc:	7803      	ldrb	r3, [r0, #0]
 80070be:	428b      	cmp	r3, r1
 80070c0:	d0fb      	beq.n	80070ba <memchr+0xa>
 80070c2:	3001      	adds	r0, #1
 80070c4:	e7f6      	b.n	80070b4 <memchr+0x4>

080070c6 <memcpy>:
 80070c6:	2300      	movs	r3, #0
 80070c8:	b510      	push	{r4, lr}
 80070ca:	429a      	cmp	r2, r3
 80070cc:	d100      	bne.n	80070d0 <memcpy+0xa>
 80070ce:	bd10      	pop	{r4, pc}
 80070d0:	5ccc      	ldrb	r4, [r1, r3]
 80070d2:	54c4      	strb	r4, [r0, r3]
 80070d4:	3301      	adds	r3, #1
 80070d6:	e7f8      	b.n	80070ca <memcpy+0x4>

080070d8 <__malloc_lock>:
 80070d8:	b510      	push	{r4, lr}
 80070da:	4802      	ldr	r0, [pc, #8]	; (80070e4 <__malloc_lock+0xc>)
 80070dc:	f7ff fd5e 	bl	8006b9c <__retarget_lock_acquire_recursive>
 80070e0:	bd10      	pop	{r4, pc}
 80070e2:	46c0      	nop			; (mov r8, r8)
 80070e4:	20000ade 	.word	0x20000ade

080070e8 <__malloc_unlock>:
 80070e8:	b510      	push	{r4, lr}
 80070ea:	4802      	ldr	r0, [pc, #8]	; (80070f4 <__malloc_unlock+0xc>)
 80070ec:	f7ff fd57 	bl	8006b9e <__retarget_lock_release_recursive>
 80070f0:	bd10      	pop	{r4, pc}
 80070f2:	46c0      	nop			; (mov r8, r8)
 80070f4:	20000ade 	.word	0x20000ade

080070f8 <_Balloc>:
 80070f8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80070fa:	b570      	push	{r4, r5, r6, lr}
 80070fc:	0006      	movs	r6, r0
 80070fe:	000c      	movs	r4, r1
 8007100:	2b00      	cmp	r3, #0
 8007102:	d012      	beq.n	800712a <_Balloc+0x32>
 8007104:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
 8007106:	00a3      	lsls	r3, r4, #2
 8007108:	18d3      	adds	r3, r2, r3
 800710a:	6818      	ldr	r0, [r3, #0]
 800710c:	2800      	cmp	r0, #0
 800710e:	d115      	bne.n	800713c <_Balloc+0x44>
 8007110:	2101      	movs	r1, #1
 8007112:	000d      	movs	r5, r1
 8007114:	40a5      	lsls	r5, r4
 8007116:	1d6a      	adds	r2, r5, #5
 8007118:	0030      	movs	r0, r6
 800711a:	0092      	lsls	r2, r2, #2
 800711c:	f001 f9d4 	bl	80084c8 <_calloc_r>
 8007120:	2800      	cmp	r0, #0
 8007122:	d009      	beq.n	8007138 <_Balloc+0x40>
 8007124:	6044      	str	r4, [r0, #4]
 8007126:	6085      	str	r5, [r0, #8]
 8007128:	e00a      	b.n	8007140 <_Balloc+0x48>
 800712a:	2221      	movs	r2, #33	; 0x21
 800712c:	2104      	movs	r1, #4
 800712e:	f001 f9cb 	bl	80084c8 <_calloc_r>
 8007132:	64f0      	str	r0, [r6, #76]	; 0x4c
 8007134:	2800      	cmp	r0, #0
 8007136:	d1e5      	bne.n	8007104 <_Balloc+0xc>
 8007138:	2000      	movs	r0, #0
 800713a:	bd70      	pop	{r4, r5, r6, pc}
 800713c:	6802      	ldr	r2, [r0, #0]
 800713e:	601a      	str	r2, [r3, #0]
 8007140:	2300      	movs	r3, #0
 8007142:	6103      	str	r3, [r0, #16]
 8007144:	60c3      	str	r3, [r0, #12]
 8007146:	e7f8      	b.n	800713a <_Balloc+0x42>

08007148 <_Bfree>:
 8007148:	2900      	cmp	r1, #0
 800714a:	d006      	beq.n	800715a <_Bfree+0x12>
 800714c:	684b      	ldr	r3, [r1, #4]
 800714e:	009a      	lsls	r2, r3, #2
 8007150:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007152:	189b      	adds	r3, r3, r2
 8007154:	681a      	ldr	r2, [r3, #0]
 8007156:	600a      	str	r2, [r1, #0]
 8007158:	6019      	str	r1, [r3, #0]
 800715a:	4770      	bx	lr

0800715c <__multadd>:
 800715c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800715e:	000e      	movs	r6, r1
 8007160:	9001      	str	r0, [sp, #4]
 8007162:	000c      	movs	r4, r1
 8007164:	001d      	movs	r5, r3
 8007166:	2000      	movs	r0, #0
 8007168:	690f      	ldr	r7, [r1, #16]
 800716a:	3614      	adds	r6, #20
 800716c:	6833      	ldr	r3, [r6, #0]
 800716e:	3001      	adds	r0, #1
 8007170:	b299      	uxth	r1, r3
 8007172:	4351      	muls	r1, r2
 8007174:	0c1b      	lsrs	r3, r3, #16
 8007176:	4353      	muls	r3, r2
 8007178:	1949      	adds	r1, r1, r5
 800717a:	0c0d      	lsrs	r5, r1, #16
 800717c:	195b      	adds	r3, r3, r5
 800717e:	0c1d      	lsrs	r5, r3, #16
 8007180:	b289      	uxth	r1, r1
 8007182:	041b      	lsls	r3, r3, #16
 8007184:	185b      	adds	r3, r3, r1
 8007186:	c608      	stmia	r6!, {r3}
 8007188:	4287      	cmp	r7, r0
 800718a:	dcef      	bgt.n	800716c <__multadd+0x10>
 800718c:	2d00      	cmp	r5, #0
 800718e:	d022      	beq.n	80071d6 <__multadd+0x7a>
 8007190:	68a3      	ldr	r3, [r4, #8]
 8007192:	42bb      	cmp	r3, r7
 8007194:	dc19      	bgt.n	80071ca <__multadd+0x6e>
 8007196:	6863      	ldr	r3, [r4, #4]
 8007198:	9801      	ldr	r0, [sp, #4]
 800719a:	1c59      	adds	r1, r3, #1
 800719c:	f7ff ffac 	bl	80070f8 <_Balloc>
 80071a0:	1e06      	subs	r6, r0, #0
 80071a2:	d105      	bne.n	80071b0 <__multadd+0x54>
 80071a4:	0002      	movs	r2, r0
 80071a6:	21b5      	movs	r1, #181	; 0xb5
 80071a8:	4b0c      	ldr	r3, [pc, #48]	; (80071dc <__multadd+0x80>)
 80071aa:	480d      	ldr	r0, [pc, #52]	; (80071e0 <__multadd+0x84>)
 80071ac:	f001 f96e 	bl	800848c <__assert_func>
 80071b0:	0021      	movs	r1, r4
 80071b2:	6923      	ldr	r3, [r4, #16]
 80071b4:	310c      	adds	r1, #12
 80071b6:	1c9a      	adds	r2, r3, #2
 80071b8:	0092      	lsls	r2, r2, #2
 80071ba:	300c      	adds	r0, #12
 80071bc:	f7ff ff83 	bl	80070c6 <memcpy>
 80071c0:	0021      	movs	r1, r4
 80071c2:	9801      	ldr	r0, [sp, #4]
 80071c4:	f7ff ffc0 	bl	8007148 <_Bfree>
 80071c8:	0034      	movs	r4, r6
 80071ca:	1d3b      	adds	r3, r7, #4
 80071cc:	009b      	lsls	r3, r3, #2
 80071ce:	18e3      	adds	r3, r4, r3
 80071d0:	605d      	str	r5, [r3, #4]
 80071d2:	1c7b      	adds	r3, r7, #1
 80071d4:	6123      	str	r3, [r4, #16]
 80071d6:	0020      	movs	r0, r4
 80071d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80071da:	46c0      	nop			; (mov r8, r8)
 80071dc:	08009131 	.word	0x08009131
 80071e0:	080091a1 	.word	0x080091a1

080071e4 <__hi0bits>:
 80071e4:	0003      	movs	r3, r0
 80071e6:	0c02      	lsrs	r2, r0, #16
 80071e8:	2000      	movs	r0, #0
 80071ea:	4282      	cmp	r2, r0
 80071ec:	d101      	bne.n	80071f2 <__hi0bits+0xe>
 80071ee:	041b      	lsls	r3, r3, #16
 80071f0:	3010      	adds	r0, #16
 80071f2:	0e1a      	lsrs	r2, r3, #24
 80071f4:	d101      	bne.n	80071fa <__hi0bits+0x16>
 80071f6:	3008      	adds	r0, #8
 80071f8:	021b      	lsls	r3, r3, #8
 80071fa:	0f1a      	lsrs	r2, r3, #28
 80071fc:	d101      	bne.n	8007202 <__hi0bits+0x1e>
 80071fe:	3004      	adds	r0, #4
 8007200:	011b      	lsls	r3, r3, #4
 8007202:	0f9a      	lsrs	r2, r3, #30
 8007204:	d101      	bne.n	800720a <__hi0bits+0x26>
 8007206:	3002      	adds	r0, #2
 8007208:	009b      	lsls	r3, r3, #2
 800720a:	2b00      	cmp	r3, #0
 800720c:	db03      	blt.n	8007216 <__hi0bits+0x32>
 800720e:	3001      	adds	r0, #1
 8007210:	005b      	lsls	r3, r3, #1
 8007212:	d400      	bmi.n	8007216 <__hi0bits+0x32>
 8007214:	2020      	movs	r0, #32
 8007216:	4770      	bx	lr

08007218 <__lo0bits>:
 8007218:	6803      	ldr	r3, [r0, #0]
 800721a:	0002      	movs	r2, r0
 800721c:	2107      	movs	r1, #7
 800721e:	0018      	movs	r0, r3
 8007220:	4008      	ands	r0, r1
 8007222:	420b      	tst	r3, r1
 8007224:	d00d      	beq.n	8007242 <__lo0bits+0x2a>
 8007226:	3906      	subs	r1, #6
 8007228:	2000      	movs	r0, #0
 800722a:	420b      	tst	r3, r1
 800722c:	d105      	bne.n	800723a <__lo0bits+0x22>
 800722e:	3002      	adds	r0, #2
 8007230:	4203      	tst	r3, r0
 8007232:	d003      	beq.n	800723c <__lo0bits+0x24>
 8007234:	40cb      	lsrs	r3, r1
 8007236:	0008      	movs	r0, r1
 8007238:	6013      	str	r3, [r2, #0]
 800723a:	4770      	bx	lr
 800723c:	089b      	lsrs	r3, r3, #2
 800723e:	6013      	str	r3, [r2, #0]
 8007240:	e7fb      	b.n	800723a <__lo0bits+0x22>
 8007242:	b299      	uxth	r1, r3
 8007244:	2900      	cmp	r1, #0
 8007246:	d101      	bne.n	800724c <__lo0bits+0x34>
 8007248:	2010      	movs	r0, #16
 800724a:	0c1b      	lsrs	r3, r3, #16
 800724c:	b2d9      	uxtb	r1, r3
 800724e:	2900      	cmp	r1, #0
 8007250:	d101      	bne.n	8007256 <__lo0bits+0x3e>
 8007252:	3008      	adds	r0, #8
 8007254:	0a1b      	lsrs	r3, r3, #8
 8007256:	0719      	lsls	r1, r3, #28
 8007258:	d101      	bne.n	800725e <__lo0bits+0x46>
 800725a:	3004      	adds	r0, #4
 800725c:	091b      	lsrs	r3, r3, #4
 800725e:	0799      	lsls	r1, r3, #30
 8007260:	d101      	bne.n	8007266 <__lo0bits+0x4e>
 8007262:	3002      	adds	r0, #2
 8007264:	089b      	lsrs	r3, r3, #2
 8007266:	07d9      	lsls	r1, r3, #31
 8007268:	d4e9      	bmi.n	800723e <__lo0bits+0x26>
 800726a:	3001      	adds	r0, #1
 800726c:	085b      	lsrs	r3, r3, #1
 800726e:	d1e6      	bne.n	800723e <__lo0bits+0x26>
 8007270:	2020      	movs	r0, #32
 8007272:	e7e2      	b.n	800723a <__lo0bits+0x22>

08007274 <__i2b>:
 8007274:	b510      	push	{r4, lr}
 8007276:	000c      	movs	r4, r1
 8007278:	2101      	movs	r1, #1
 800727a:	f7ff ff3d 	bl	80070f8 <_Balloc>
 800727e:	2800      	cmp	r0, #0
 8007280:	d106      	bne.n	8007290 <__i2b+0x1c>
 8007282:	21a0      	movs	r1, #160	; 0xa0
 8007284:	0002      	movs	r2, r0
 8007286:	4b04      	ldr	r3, [pc, #16]	; (8007298 <__i2b+0x24>)
 8007288:	4804      	ldr	r0, [pc, #16]	; (800729c <__i2b+0x28>)
 800728a:	0049      	lsls	r1, r1, #1
 800728c:	f001 f8fe 	bl	800848c <__assert_func>
 8007290:	2301      	movs	r3, #1
 8007292:	6144      	str	r4, [r0, #20]
 8007294:	6103      	str	r3, [r0, #16]
 8007296:	bd10      	pop	{r4, pc}
 8007298:	08009131 	.word	0x08009131
 800729c:	080091a1 	.word	0x080091a1

080072a0 <__multiply>:
 80072a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072a2:	690b      	ldr	r3, [r1, #16]
 80072a4:	0014      	movs	r4, r2
 80072a6:	6912      	ldr	r2, [r2, #16]
 80072a8:	000d      	movs	r5, r1
 80072aa:	b089      	sub	sp, #36	; 0x24
 80072ac:	4293      	cmp	r3, r2
 80072ae:	da01      	bge.n	80072b4 <__multiply+0x14>
 80072b0:	0025      	movs	r5, r4
 80072b2:	000c      	movs	r4, r1
 80072b4:	692f      	ldr	r7, [r5, #16]
 80072b6:	6926      	ldr	r6, [r4, #16]
 80072b8:	6869      	ldr	r1, [r5, #4]
 80072ba:	19bb      	adds	r3, r7, r6
 80072bc:	9302      	str	r3, [sp, #8]
 80072be:	68ab      	ldr	r3, [r5, #8]
 80072c0:	19ba      	adds	r2, r7, r6
 80072c2:	4293      	cmp	r3, r2
 80072c4:	da00      	bge.n	80072c8 <__multiply+0x28>
 80072c6:	3101      	adds	r1, #1
 80072c8:	f7ff ff16 	bl	80070f8 <_Balloc>
 80072cc:	9001      	str	r0, [sp, #4]
 80072ce:	2800      	cmp	r0, #0
 80072d0:	d106      	bne.n	80072e0 <__multiply+0x40>
 80072d2:	215e      	movs	r1, #94	; 0x5e
 80072d4:	0002      	movs	r2, r0
 80072d6:	4b48      	ldr	r3, [pc, #288]	; (80073f8 <__multiply+0x158>)
 80072d8:	4848      	ldr	r0, [pc, #288]	; (80073fc <__multiply+0x15c>)
 80072da:	31ff      	adds	r1, #255	; 0xff
 80072dc:	f001 f8d6 	bl	800848c <__assert_func>
 80072e0:	9b01      	ldr	r3, [sp, #4]
 80072e2:	2200      	movs	r2, #0
 80072e4:	3314      	adds	r3, #20
 80072e6:	469c      	mov	ip, r3
 80072e8:	19bb      	adds	r3, r7, r6
 80072ea:	009b      	lsls	r3, r3, #2
 80072ec:	4463      	add	r3, ip
 80072ee:	9303      	str	r3, [sp, #12]
 80072f0:	4663      	mov	r3, ip
 80072f2:	9903      	ldr	r1, [sp, #12]
 80072f4:	428b      	cmp	r3, r1
 80072f6:	d32c      	bcc.n	8007352 <__multiply+0xb2>
 80072f8:	002b      	movs	r3, r5
 80072fa:	0022      	movs	r2, r4
 80072fc:	3314      	adds	r3, #20
 80072fe:	00bf      	lsls	r7, r7, #2
 8007300:	3214      	adds	r2, #20
 8007302:	9306      	str	r3, [sp, #24]
 8007304:	00b6      	lsls	r6, r6, #2
 8007306:	19db      	adds	r3, r3, r7
 8007308:	9304      	str	r3, [sp, #16]
 800730a:	1993      	adds	r3, r2, r6
 800730c:	9307      	str	r3, [sp, #28]
 800730e:	2304      	movs	r3, #4
 8007310:	9305      	str	r3, [sp, #20]
 8007312:	002b      	movs	r3, r5
 8007314:	9904      	ldr	r1, [sp, #16]
 8007316:	3315      	adds	r3, #21
 8007318:	9200      	str	r2, [sp, #0]
 800731a:	4299      	cmp	r1, r3
 800731c:	d305      	bcc.n	800732a <__multiply+0x8a>
 800731e:	1b4b      	subs	r3, r1, r5
 8007320:	3b15      	subs	r3, #21
 8007322:	089b      	lsrs	r3, r3, #2
 8007324:	3301      	adds	r3, #1
 8007326:	009b      	lsls	r3, r3, #2
 8007328:	9305      	str	r3, [sp, #20]
 800732a:	9b07      	ldr	r3, [sp, #28]
 800732c:	9a00      	ldr	r2, [sp, #0]
 800732e:	429a      	cmp	r2, r3
 8007330:	d311      	bcc.n	8007356 <__multiply+0xb6>
 8007332:	9b02      	ldr	r3, [sp, #8]
 8007334:	2b00      	cmp	r3, #0
 8007336:	dd06      	ble.n	8007346 <__multiply+0xa6>
 8007338:	9b03      	ldr	r3, [sp, #12]
 800733a:	3b04      	subs	r3, #4
 800733c:	9303      	str	r3, [sp, #12]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	9300      	str	r3, [sp, #0]
 8007342:	2b00      	cmp	r3, #0
 8007344:	d054      	beq.n	80073f0 <__multiply+0x150>
 8007346:	9b01      	ldr	r3, [sp, #4]
 8007348:	9a02      	ldr	r2, [sp, #8]
 800734a:	0018      	movs	r0, r3
 800734c:	611a      	str	r2, [r3, #16]
 800734e:	b009      	add	sp, #36	; 0x24
 8007350:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007352:	c304      	stmia	r3!, {r2}
 8007354:	e7cd      	b.n	80072f2 <__multiply+0x52>
 8007356:	9b00      	ldr	r3, [sp, #0]
 8007358:	681b      	ldr	r3, [r3, #0]
 800735a:	b298      	uxth	r0, r3
 800735c:	2800      	cmp	r0, #0
 800735e:	d01c      	beq.n	800739a <__multiply+0xfa>
 8007360:	4667      	mov	r7, ip
 8007362:	2400      	movs	r4, #0
 8007364:	9e06      	ldr	r6, [sp, #24]
 8007366:	ce02      	ldmia	r6!, {r1}
 8007368:	683a      	ldr	r2, [r7, #0]
 800736a:	b28b      	uxth	r3, r1
 800736c:	4343      	muls	r3, r0
 800736e:	0c09      	lsrs	r1, r1, #16
 8007370:	4341      	muls	r1, r0
 8007372:	b292      	uxth	r2, r2
 8007374:	189b      	adds	r3, r3, r2
 8007376:	191b      	adds	r3, r3, r4
 8007378:	000c      	movs	r4, r1
 800737a:	683a      	ldr	r2, [r7, #0]
 800737c:	0c11      	lsrs	r1, r2, #16
 800737e:	1861      	adds	r1, r4, r1
 8007380:	0c1c      	lsrs	r4, r3, #16
 8007382:	1909      	adds	r1, r1, r4
 8007384:	0c0c      	lsrs	r4, r1, #16
 8007386:	b29b      	uxth	r3, r3
 8007388:	0409      	lsls	r1, r1, #16
 800738a:	430b      	orrs	r3, r1
 800738c:	c708      	stmia	r7!, {r3}
 800738e:	9b04      	ldr	r3, [sp, #16]
 8007390:	42b3      	cmp	r3, r6
 8007392:	d8e8      	bhi.n	8007366 <__multiply+0xc6>
 8007394:	4663      	mov	r3, ip
 8007396:	9a05      	ldr	r2, [sp, #20]
 8007398:	509c      	str	r4, [r3, r2]
 800739a:	9b00      	ldr	r3, [sp, #0]
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	0c1e      	lsrs	r6, r3, #16
 80073a0:	d020      	beq.n	80073e4 <__multiply+0x144>
 80073a2:	4663      	mov	r3, ip
 80073a4:	002c      	movs	r4, r5
 80073a6:	4660      	mov	r0, ip
 80073a8:	2700      	movs	r7, #0
 80073aa:	681b      	ldr	r3, [r3, #0]
 80073ac:	3414      	adds	r4, #20
 80073ae:	6822      	ldr	r2, [r4, #0]
 80073b0:	b29b      	uxth	r3, r3
 80073b2:	b291      	uxth	r1, r2
 80073b4:	4371      	muls	r1, r6
 80073b6:	6802      	ldr	r2, [r0, #0]
 80073b8:	0c12      	lsrs	r2, r2, #16
 80073ba:	1889      	adds	r1, r1, r2
 80073bc:	19cf      	adds	r7, r1, r7
 80073be:	0439      	lsls	r1, r7, #16
 80073c0:	430b      	orrs	r3, r1
 80073c2:	6003      	str	r3, [r0, #0]
 80073c4:	cc02      	ldmia	r4!, {r1}
 80073c6:	6843      	ldr	r3, [r0, #4]
 80073c8:	0c09      	lsrs	r1, r1, #16
 80073ca:	4371      	muls	r1, r6
 80073cc:	b29b      	uxth	r3, r3
 80073ce:	0c3f      	lsrs	r7, r7, #16
 80073d0:	18cb      	adds	r3, r1, r3
 80073d2:	9a04      	ldr	r2, [sp, #16]
 80073d4:	19db      	adds	r3, r3, r7
 80073d6:	0c1f      	lsrs	r7, r3, #16
 80073d8:	3004      	adds	r0, #4
 80073da:	42a2      	cmp	r2, r4
 80073dc:	d8e7      	bhi.n	80073ae <__multiply+0x10e>
 80073de:	4662      	mov	r2, ip
 80073e0:	9905      	ldr	r1, [sp, #20]
 80073e2:	5053      	str	r3, [r2, r1]
 80073e4:	9b00      	ldr	r3, [sp, #0]
 80073e6:	3304      	adds	r3, #4
 80073e8:	9300      	str	r3, [sp, #0]
 80073ea:	2304      	movs	r3, #4
 80073ec:	449c      	add	ip, r3
 80073ee:	e79c      	b.n	800732a <__multiply+0x8a>
 80073f0:	9b02      	ldr	r3, [sp, #8]
 80073f2:	3b01      	subs	r3, #1
 80073f4:	9302      	str	r3, [sp, #8]
 80073f6:	e79c      	b.n	8007332 <__multiply+0x92>
 80073f8:	08009131 	.word	0x08009131
 80073fc:	080091a1 	.word	0x080091a1

08007400 <__pow5mult>:
 8007400:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007402:	2303      	movs	r3, #3
 8007404:	0015      	movs	r5, r2
 8007406:	0007      	movs	r7, r0
 8007408:	000e      	movs	r6, r1
 800740a:	401a      	ands	r2, r3
 800740c:	421d      	tst	r5, r3
 800740e:	d008      	beq.n	8007422 <__pow5mult+0x22>
 8007410:	491a      	ldr	r1, [pc, #104]	; (800747c <__pow5mult+0x7c>)
 8007412:	3a01      	subs	r2, #1
 8007414:	0092      	lsls	r2, r2, #2
 8007416:	5852      	ldr	r2, [r2, r1]
 8007418:	2300      	movs	r3, #0
 800741a:	0031      	movs	r1, r6
 800741c:	f7ff fe9e 	bl	800715c <__multadd>
 8007420:	0006      	movs	r6, r0
 8007422:	10ad      	asrs	r5, r5, #2
 8007424:	d027      	beq.n	8007476 <__pow5mult+0x76>
 8007426:	6cbc      	ldr	r4, [r7, #72]	; 0x48
 8007428:	2c00      	cmp	r4, #0
 800742a:	d107      	bne.n	800743c <__pow5mult+0x3c>
 800742c:	0038      	movs	r0, r7
 800742e:	4914      	ldr	r1, [pc, #80]	; (8007480 <__pow5mult+0x80>)
 8007430:	f7ff ff20 	bl	8007274 <__i2b>
 8007434:	2300      	movs	r3, #0
 8007436:	0004      	movs	r4, r0
 8007438:	64b8      	str	r0, [r7, #72]	; 0x48
 800743a:	6003      	str	r3, [r0, #0]
 800743c:	2301      	movs	r3, #1
 800743e:	421d      	tst	r5, r3
 8007440:	d00a      	beq.n	8007458 <__pow5mult+0x58>
 8007442:	0031      	movs	r1, r6
 8007444:	0022      	movs	r2, r4
 8007446:	0038      	movs	r0, r7
 8007448:	f7ff ff2a 	bl	80072a0 <__multiply>
 800744c:	0031      	movs	r1, r6
 800744e:	9001      	str	r0, [sp, #4]
 8007450:	0038      	movs	r0, r7
 8007452:	f7ff fe79 	bl	8007148 <_Bfree>
 8007456:	9e01      	ldr	r6, [sp, #4]
 8007458:	106d      	asrs	r5, r5, #1
 800745a:	d00c      	beq.n	8007476 <__pow5mult+0x76>
 800745c:	6820      	ldr	r0, [r4, #0]
 800745e:	2800      	cmp	r0, #0
 8007460:	d107      	bne.n	8007472 <__pow5mult+0x72>
 8007462:	0022      	movs	r2, r4
 8007464:	0021      	movs	r1, r4
 8007466:	0038      	movs	r0, r7
 8007468:	f7ff ff1a 	bl	80072a0 <__multiply>
 800746c:	2300      	movs	r3, #0
 800746e:	6020      	str	r0, [r4, #0]
 8007470:	6003      	str	r3, [r0, #0]
 8007472:	0004      	movs	r4, r0
 8007474:	e7e2      	b.n	800743c <__pow5mult+0x3c>
 8007476:	0030      	movs	r0, r6
 8007478:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800747a:	46c0      	nop			; (mov r8, r8)
 800747c:	080092f8 	.word	0x080092f8
 8007480:	00000271 	.word	0x00000271

08007484 <__lshift>:
 8007484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007486:	000c      	movs	r4, r1
 8007488:	0017      	movs	r7, r2
 800748a:	6923      	ldr	r3, [r4, #16]
 800748c:	1155      	asrs	r5, r2, #5
 800748e:	b087      	sub	sp, #28
 8007490:	18eb      	adds	r3, r5, r3
 8007492:	9302      	str	r3, [sp, #8]
 8007494:	3301      	adds	r3, #1
 8007496:	9301      	str	r3, [sp, #4]
 8007498:	6849      	ldr	r1, [r1, #4]
 800749a:	68a3      	ldr	r3, [r4, #8]
 800749c:	9004      	str	r0, [sp, #16]
 800749e:	9a01      	ldr	r2, [sp, #4]
 80074a0:	4293      	cmp	r3, r2
 80074a2:	db11      	blt.n	80074c8 <__lshift+0x44>
 80074a4:	9804      	ldr	r0, [sp, #16]
 80074a6:	f7ff fe27 	bl	80070f8 <_Balloc>
 80074aa:	0002      	movs	r2, r0
 80074ac:	2300      	movs	r3, #0
 80074ae:	3214      	adds	r2, #20
 80074b0:	0006      	movs	r6, r0
 80074b2:	0011      	movs	r1, r2
 80074b4:	9203      	str	r2, [sp, #12]
 80074b6:	4298      	cmp	r0, r3
 80074b8:	d10d      	bne.n	80074d6 <__lshift+0x52>
 80074ba:	21da      	movs	r1, #218	; 0xda
 80074bc:	0002      	movs	r2, r0
 80074be:	4b27      	ldr	r3, [pc, #156]	; (800755c <__lshift+0xd8>)
 80074c0:	4827      	ldr	r0, [pc, #156]	; (8007560 <__lshift+0xdc>)
 80074c2:	31ff      	adds	r1, #255	; 0xff
 80074c4:	f000 ffe2 	bl	800848c <__assert_func>
 80074c8:	3101      	adds	r1, #1
 80074ca:	005b      	lsls	r3, r3, #1
 80074cc:	e7e7      	b.n	800749e <__lshift+0x1a>
 80074ce:	2200      	movs	r2, #0
 80074d0:	0098      	lsls	r0, r3, #2
 80074d2:	500a      	str	r2, [r1, r0]
 80074d4:	3301      	adds	r3, #1
 80074d6:	42ab      	cmp	r3, r5
 80074d8:	dbf9      	blt.n	80074ce <__lshift+0x4a>
 80074da:	43eb      	mvns	r3, r5
 80074dc:	17db      	asrs	r3, r3, #31
 80074de:	401d      	ands	r5, r3
 80074e0:	9b03      	ldr	r3, [sp, #12]
 80074e2:	00ad      	lsls	r5, r5, #2
 80074e4:	211f      	movs	r1, #31
 80074e6:	0038      	movs	r0, r7
 80074e8:	195d      	adds	r5, r3, r5
 80074ea:	0023      	movs	r3, r4
 80074ec:	6922      	ldr	r2, [r4, #16]
 80074ee:	3314      	adds	r3, #20
 80074f0:	0092      	lsls	r2, r2, #2
 80074f2:	4008      	ands	r0, r1
 80074f4:	4684      	mov	ip, r0
 80074f6:	189a      	adds	r2, r3, r2
 80074f8:	420f      	tst	r7, r1
 80074fa:	d02a      	beq.n	8007552 <__lshift+0xce>
 80074fc:	3101      	adds	r1, #1
 80074fe:	1a09      	subs	r1, r1, r0
 8007500:	9105      	str	r1, [sp, #20]
 8007502:	2100      	movs	r1, #0
 8007504:	9503      	str	r5, [sp, #12]
 8007506:	4667      	mov	r7, ip
 8007508:	6818      	ldr	r0, [r3, #0]
 800750a:	40b8      	lsls	r0, r7
 800750c:	4301      	orrs	r1, r0
 800750e:	9803      	ldr	r0, [sp, #12]
 8007510:	c002      	stmia	r0!, {r1}
 8007512:	cb02      	ldmia	r3!, {r1}
 8007514:	9003      	str	r0, [sp, #12]
 8007516:	9805      	ldr	r0, [sp, #20]
 8007518:	40c1      	lsrs	r1, r0
 800751a:	429a      	cmp	r2, r3
 800751c:	d8f3      	bhi.n	8007506 <__lshift+0x82>
 800751e:	0020      	movs	r0, r4
 8007520:	3015      	adds	r0, #21
 8007522:	2304      	movs	r3, #4
 8007524:	4282      	cmp	r2, r0
 8007526:	d304      	bcc.n	8007532 <__lshift+0xae>
 8007528:	1b13      	subs	r3, r2, r4
 800752a:	3b15      	subs	r3, #21
 800752c:	089b      	lsrs	r3, r3, #2
 800752e:	3301      	adds	r3, #1
 8007530:	009b      	lsls	r3, r3, #2
 8007532:	50e9      	str	r1, [r5, r3]
 8007534:	2900      	cmp	r1, #0
 8007536:	d002      	beq.n	800753e <__lshift+0xba>
 8007538:	9b02      	ldr	r3, [sp, #8]
 800753a:	3302      	adds	r3, #2
 800753c:	9301      	str	r3, [sp, #4]
 800753e:	9b01      	ldr	r3, [sp, #4]
 8007540:	9804      	ldr	r0, [sp, #16]
 8007542:	3b01      	subs	r3, #1
 8007544:	0021      	movs	r1, r4
 8007546:	6133      	str	r3, [r6, #16]
 8007548:	f7ff fdfe 	bl	8007148 <_Bfree>
 800754c:	0030      	movs	r0, r6
 800754e:	b007      	add	sp, #28
 8007550:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007552:	cb02      	ldmia	r3!, {r1}
 8007554:	c502      	stmia	r5!, {r1}
 8007556:	429a      	cmp	r2, r3
 8007558:	d8fb      	bhi.n	8007552 <__lshift+0xce>
 800755a:	e7f0      	b.n	800753e <__lshift+0xba>
 800755c:	08009131 	.word	0x08009131
 8007560:	080091a1 	.word	0x080091a1

08007564 <__mcmp>:
 8007564:	6902      	ldr	r2, [r0, #16]
 8007566:	690b      	ldr	r3, [r1, #16]
 8007568:	b530      	push	{r4, r5, lr}
 800756a:	0004      	movs	r4, r0
 800756c:	1ad0      	subs	r0, r2, r3
 800756e:	429a      	cmp	r2, r3
 8007570:	d10d      	bne.n	800758e <__mcmp+0x2a>
 8007572:	009b      	lsls	r3, r3, #2
 8007574:	3414      	adds	r4, #20
 8007576:	3114      	adds	r1, #20
 8007578:	18e2      	adds	r2, r4, r3
 800757a:	18c9      	adds	r1, r1, r3
 800757c:	3a04      	subs	r2, #4
 800757e:	3904      	subs	r1, #4
 8007580:	6815      	ldr	r5, [r2, #0]
 8007582:	680b      	ldr	r3, [r1, #0]
 8007584:	429d      	cmp	r5, r3
 8007586:	d003      	beq.n	8007590 <__mcmp+0x2c>
 8007588:	2001      	movs	r0, #1
 800758a:	429d      	cmp	r5, r3
 800758c:	d303      	bcc.n	8007596 <__mcmp+0x32>
 800758e:	bd30      	pop	{r4, r5, pc}
 8007590:	4294      	cmp	r4, r2
 8007592:	d3f3      	bcc.n	800757c <__mcmp+0x18>
 8007594:	e7fb      	b.n	800758e <__mcmp+0x2a>
 8007596:	4240      	negs	r0, r0
 8007598:	e7f9      	b.n	800758e <__mcmp+0x2a>
	...

0800759c <__mdiff>:
 800759c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800759e:	000e      	movs	r6, r1
 80075a0:	0007      	movs	r7, r0
 80075a2:	0011      	movs	r1, r2
 80075a4:	0030      	movs	r0, r6
 80075a6:	b087      	sub	sp, #28
 80075a8:	0014      	movs	r4, r2
 80075aa:	f7ff ffdb 	bl	8007564 <__mcmp>
 80075ae:	1e05      	subs	r5, r0, #0
 80075b0:	d110      	bne.n	80075d4 <__mdiff+0x38>
 80075b2:	0001      	movs	r1, r0
 80075b4:	0038      	movs	r0, r7
 80075b6:	f7ff fd9f 	bl	80070f8 <_Balloc>
 80075ba:	1e02      	subs	r2, r0, #0
 80075bc:	d104      	bne.n	80075c8 <__mdiff+0x2c>
 80075be:	4b40      	ldr	r3, [pc, #256]	; (80076c0 <__mdiff+0x124>)
 80075c0:	4940      	ldr	r1, [pc, #256]	; (80076c4 <__mdiff+0x128>)
 80075c2:	4841      	ldr	r0, [pc, #260]	; (80076c8 <__mdiff+0x12c>)
 80075c4:	f000 ff62 	bl	800848c <__assert_func>
 80075c8:	2301      	movs	r3, #1
 80075ca:	6145      	str	r5, [r0, #20]
 80075cc:	6103      	str	r3, [r0, #16]
 80075ce:	0010      	movs	r0, r2
 80075d0:	b007      	add	sp, #28
 80075d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80075d4:	2301      	movs	r3, #1
 80075d6:	9301      	str	r3, [sp, #4]
 80075d8:	2800      	cmp	r0, #0
 80075da:	db04      	blt.n	80075e6 <__mdiff+0x4a>
 80075dc:	0023      	movs	r3, r4
 80075de:	0034      	movs	r4, r6
 80075e0:	001e      	movs	r6, r3
 80075e2:	2300      	movs	r3, #0
 80075e4:	9301      	str	r3, [sp, #4]
 80075e6:	0038      	movs	r0, r7
 80075e8:	6861      	ldr	r1, [r4, #4]
 80075ea:	f7ff fd85 	bl	80070f8 <_Balloc>
 80075ee:	1e02      	subs	r2, r0, #0
 80075f0:	d103      	bne.n	80075fa <__mdiff+0x5e>
 80075f2:	2190      	movs	r1, #144	; 0x90
 80075f4:	4b32      	ldr	r3, [pc, #200]	; (80076c0 <__mdiff+0x124>)
 80075f6:	0089      	lsls	r1, r1, #2
 80075f8:	e7e3      	b.n	80075c2 <__mdiff+0x26>
 80075fa:	9b01      	ldr	r3, [sp, #4]
 80075fc:	2700      	movs	r7, #0
 80075fe:	60c3      	str	r3, [r0, #12]
 8007600:	6920      	ldr	r0, [r4, #16]
 8007602:	3414      	adds	r4, #20
 8007604:	9401      	str	r4, [sp, #4]
 8007606:	9b01      	ldr	r3, [sp, #4]
 8007608:	0084      	lsls	r4, r0, #2
 800760a:	191b      	adds	r3, r3, r4
 800760c:	0034      	movs	r4, r6
 800760e:	9302      	str	r3, [sp, #8]
 8007610:	6933      	ldr	r3, [r6, #16]
 8007612:	3414      	adds	r4, #20
 8007614:	0099      	lsls	r1, r3, #2
 8007616:	1863      	adds	r3, r4, r1
 8007618:	9303      	str	r3, [sp, #12]
 800761a:	0013      	movs	r3, r2
 800761c:	3314      	adds	r3, #20
 800761e:	469c      	mov	ip, r3
 8007620:	9305      	str	r3, [sp, #20]
 8007622:	9b01      	ldr	r3, [sp, #4]
 8007624:	9304      	str	r3, [sp, #16]
 8007626:	9b04      	ldr	r3, [sp, #16]
 8007628:	cc02      	ldmia	r4!, {r1}
 800762a:	cb20      	ldmia	r3!, {r5}
 800762c:	9304      	str	r3, [sp, #16]
 800762e:	b2ab      	uxth	r3, r5
 8007630:	19df      	adds	r7, r3, r7
 8007632:	b28b      	uxth	r3, r1
 8007634:	1afb      	subs	r3, r7, r3
 8007636:	0c2d      	lsrs	r5, r5, #16
 8007638:	0c09      	lsrs	r1, r1, #16
 800763a:	1a69      	subs	r1, r5, r1
 800763c:	141d      	asrs	r5, r3, #16
 800763e:	1949      	adds	r1, r1, r5
 8007640:	140f      	asrs	r7, r1, #16
 8007642:	b29b      	uxth	r3, r3
 8007644:	0409      	lsls	r1, r1, #16
 8007646:	430b      	orrs	r3, r1
 8007648:	4661      	mov	r1, ip
 800764a:	c108      	stmia	r1!, {r3}
 800764c:	9b03      	ldr	r3, [sp, #12]
 800764e:	468c      	mov	ip, r1
 8007650:	42a3      	cmp	r3, r4
 8007652:	d8e8      	bhi.n	8007626 <__mdiff+0x8a>
 8007654:	0031      	movs	r1, r6
 8007656:	9c03      	ldr	r4, [sp, #12]
 8007658:	3115      	adds	r1, #21
 800765a:	2304      	movs	r3, #4
 800765c:	428c      	cmp	r4, r1
 800765e:	d304      	bcc.n	800766a <__mdiff+0xce>
 8007660:	1ba3      	subs	r3, r4, r6
 8007662:	3b15      	subs	r3, #21
 8007664:	089b      	lsrs	r3, r3, #2
 8007666:	3301      	adds	r3, #1
 8007668:	009b      	lsls	r3, r3, #2
 800766a:	9901      	ldr	r1, [sp, #4]
 800766c:	18cc      	adds	r4, r1, r3
 800766e:	9905      	ldr	r1, [sp, #20]
 8007670:	0026      	movs	r6, r4
 8007672:	18cb      	adds	r3, r1, r3
 8007674:	469c      	mov	ip, r3
 8007676:	9902      	ldr	r1, [sp, #8]
 8007678:	428e      	cmp	r6, r1
 800767a:	d310      	bcc.n	800769e <__mdiff+0x102>
 800767c:	9e02      	ldr	r6, [sp, #8]
 800767e:	1ee5      	subs	r5, r4, #3
 8007680:	2100      	movs	r1, #0
 8007682:	42ae      	cmp	r6, r5
 8007684:	d304      	bcc.n	8007690 <__mdiff+0xf4>
 8007686:	0031      	movs	r1, r6
 8007688:	3103      	adds	r1, #3
 800768a:	1b09      	subs	r1, r1, r4
 800768c:	0889      	lsrs	r1, r1, #2
 800768e:	0089      	lsls	r1, r1, #2
 8007690:	185b      	adds	r3, r3, r1
 8007692:	3b04      	subs	r3, #4
 8007694:	6819      	ldr	r1, [r3, #0]
 8007696:	2900      	cmp	r1, #0
 8007698:	d00f      	beq.n	80076ba <__mdiff+0x11e>
 800769a:	6110      	str	r0, [r2, #16]
 800769c:	e797      	b.n	80075ce <__mdiff+0x32>
 800769e:	ce02      	ldmia	r6!, {r1}
 80076a0:	b28d      	uxth	r5, r1
 80076a2:	19ed      	adds	r5, r5, r7
 80076a4:	0c0f      	lsrs	r7, r1, #16
 80076a6:	1429      	asrs	r1, r5, #16
 80076a8:	1879      	adds	r1, r7, r1
 80076aa:	140f      	asrs	r7, r1, #16
 80076ac:	b2ad      	uxth	r5, r5
 80076ae:	0409      	lsls	r1, r1, #16
 80076b0:	430d      	orrs	r5, r1
 80076b2:	4661      	mov	r1, ip
 80076b4:	c120      	stmia	r1!, {r5}
 80076b6:	468c      	mov	ip, r1
 80076b8:	e7dd      	b.n	8007676 <__mdiff+0xda>
 80076ba:	3801      	subs	r0, #1
 80076bc:	e7e9      	b.n	8007692 <__mdiff+0xf6>
 80076be:	46c0      	nop			; (mov r8, r8)
 80076c0:	08009131 	.word	0x08009131
 80076c4:	00000232 	.word	0x00000232
 80076c8:	080091a1 	.word	0x080091a1

080076cc <__d2b>:
 80076cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80076ce:	2101      	movs	r1, #1
 80076d0:	0014      	movs	r4, r2
 80076d2:	001e      	movs	r6, r3
 80076d4:	9f08      	ldr	r7, [sp, #32]
 80076d6:	f7ff fd0f 	bl	80070f8 <_Balloc>
 80076da:	1e05      	subs	r5, r0, #0
 80076dc:	d105      	bne.n	80076ea <__d2b+0x1e>
 80076de:	0002      	movs	r2, r0
 80076e0:	4b26      	ldr	r3, [pc, #152]	; (800777c <__d2b+0xb0>)
 80076e2:	4927      	ldr	r1, [pc, #156]	; (8007780 <__d2b+0xb4>)
 80076e4:	4827      	ldr	r0, [pc, #156]	; (8007784 <__d2b+0xb8>)
 80076e6:	f000 fed1 	bl	800848c <__assert_func>
 80076ea:	0333      	lsls	r3, r6, #12
 80076ec:	0076      	lsls	r6, r6, #1
 80076ee:	0b1b      	lsrs	r3, r3, #12
 80076f0:	0d76      	lsrs	r6, r6, #21
 80076f2:	d124      	bne.n	800773e <__d2b+0x72>
 80076f4:	9301      	str	r3, [sp, #4]
 80076f6:	2c00      	cmp	r4, #0
 80076f8:	d027      	beq.n	800774a <__d2b+0x7e>
 80076fa:	4668      	mov	r0, sp
 80076fc:	9400      	str	r4, [sp, #0]
 80076fe:	f7ff fd8b 	bl	8007218 <__lo0bits>
 8007702:	9c00      	ldr	r4, [sp, #0]
 8007704:	2800      	cmp	r0, #0
 8007706:	d01e      	beq.n	8007746 <__d2b+0x7a>
 8007708:	9b01      	ldr	r3, [sp, #4]
 800770a:	2120      	movs	r1, #32
 800770c:	001a      	movs	r2, r3
 800770e:	1a09      	subs	r1, r1, r0
 8007710:	408a      	lsls	r2, r1
 8007712:	40c3      	lsrs	r3, r0
 8007714:	4322      	orrs	r2, r4
 8007716:	616a      	str	r2, [r5, #20]
 8007718:	9301      	str	r3, [sp, #4]
 800771a:	9c01      	ldr	r4, [sp, #4]
 800771c:	61ac      	str	r4, [r5, #24]
 800771e:	1e63      	subs	r3, r4, #1
 8007720:	419c      	sbcs	r4, r3
 8007722:	3401      	adds	r4, #1
 8007724:	612c      	str	r4, [r5, #16]
 8007726:	2e00      	cmp	r6, #0
 8007728:	d018      	beq.n	800775c <__d2b+0x90>
 800772a:	4b17      	ldr	r3, [pc, #92]	; (8007788 <__d2b+0xbc>)
 800772c:	18f6      	adds	r6, r6, r3
 800772e:	2335      	movs	r3, #53	; 0x35
 8007730:	1836      	adds	r6, r6, r0
 8007732:	1a18      	subs	r0, r3, r0
 8007734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007736:	603e      	str	r6, [r7, #0]
 8007738:	6018      	str	r0, [r3, #0]
 800773a:	0028      	movs	r0, r5
 800773c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800773e:	2280      	movs	r2, #128	; 0x80
 8007740:	0352      	lsls	r2, r2, #13
 8007742:	4313      	orrs	r3, r2
 8007744:	e7d6      	b.n	80076f4 <__d2b+0x28>
 8007746:	616c      	str	r4, [r5, #20]
 8007748:	e7e7      	b.n	800771a <__d2b+0x4e>
 800774a:	a801      	add	r0, sp, #4
 800774c:	f7ff fd64 	bl	8007218 <__lo0bits>
 8007750:	2401      	movs	r4, #1
 8007752:	9b01      	ldr	r3, [sp, #4]
 8007754:	612c      	str	r4, [r5, #16]
 8007756:	616b      	str	r3, [r5, #20]
 8007758:	3020      	adds	r0, #32
 800775a:	e7e4      	b.n	8007726 <__d2b+0x5a>
 800775c:	4b0b      	ldr	r3, [pc, #44]	; (800778c <__d2b+0xc0>)
 800775e:	18c0      	adds	r0, r0, r3
 8007760:	4b0b      	ldr	r3, [pc, #44]	; (8007790 <__d2b+0xc4>)
 8007762:	6038      	str	r0, [r7, #0]
 8007764:	18e3      	adds	r3, r4, r3
 8007766:	009b      	lsls	r3, r3, #2
 8007768:	18eb      	adds	r3, r5, r3
 800776a:	6958      	ldr	r0, [r3, #20]
 800776c:	f7ff fd3a 	bl	80071e4 <__hi0bits>
 8007770:	0164      	lsls	r4, r4, #5
 8007772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007774:	1a24      	subs	r4, r4, r0
 8007776:	601c      	str	r4, [r3, #0]
 8007778:	e7df      	b.n	800773a <__d2b+0x6e>
 800777a:	46c0      	nop			; (mov r8, r8)
 800777c:	08009131 	.word	0x08009131
 8007780:	0000030a 	.word	0x0000030a
 8007784:	080091a1 	.word	0x080091a1
 8007788:	fffffbcd 	.word	0xfffffbcd
 800778c:	fffffbce 	.word	0xfffffbce
 8007790:	3fffffff 	.word	0x3fffffff

08007794 <frexp>:
 8007794:	b570      	push	{r4, r5, r6, lr}
 8007796:	0014      	movs	r4, r2
 8007798:	2500      	movs	r5, #0
 800779a:	6025      	str	r5, [r4, #0]
 800779c:	4d10      	ldr	r5, [pc, #64]	; (80077e0 <frexp+0x4c>)
 800779e:	004b      	lsls	r3, r1, #1
 80077a0:	000a      	movs	r2, r1
 80077a2:	085b      	lsrs	r3, r3, #1
 80077a4:	42ab      	cmp	r3, r5
 80077a6:	dc1a      	bgt.n	80077de <frexp+0x4a>
 80077a8:	001d      	movs	r5, r3
 80077aa:	4305      	orrs	r5, r0
 80077ac:	d017      	beq.n	80077de <frexp+0x4a>
 80077ae:	4d0d      	ldr	r5, [pc, #52]	; (80077e4 <frexp+0x50>)
 80077b0:	4229      	tst	r1, r5
 80077b2:	d109      	bne.n	80077c8 <frexp+0x34>
 80077b4:	2200      	movs	r2, #0
 80077b6:	4b0c      	ldr	r3, [pc, #48]	; (80077e8 <frexp+0x54>)
 80077b8:	f7f9 fece 	bl	8001558 <__aeabi_dmul>
 80077bc:	2536      	movs	r5, #54	; 0x36
 80077be:	000a      	movs	r2, r1
 80077c0:	004b      	lsls	r3, r1, #1
 80077c2:	426d      	negs	r5, r5
 80077c4:	085b      	lsrs	r3, r3, #1
 80077c6:	6025      	str	r5, [r4, #0]
 80077c8:	4d08      	ldr	r5, [pc, #32]	; (80077ec <frexp+0x58>)
 80077ca:	151b      	asrs	r3, r3, #20
 80077cc:	195b      	adds	r3, r3, r5
 80077ce:	6825      	ldr	r5, [r4, #0]
 80077d0:	18eb      	adds	r3, r5, r3
 80077d2:	6023      	str	r3, [r4, #0]
 80077d4:	4b06      	ldr	r3, [pc, #24]	; (80077f0 <frexp+0x5c>)
 80077d6:	401a      	ands	r2, r3
 80077d8:	4b06      	ldr	r3, [pc, #24]	; (80077f4 <frexp+0x60>)
 80077da:	4313      	orrs	r3, r2
 80077dc:	0019      	movs	r1, r3
 80077de:	bd70      	pop	{r4, r5, r6, pc}
 80077e0:	7fefffff 	.word	0x7fefffff
 80077e4:	7ff00000 	.word	0x7ff00000
 80077e8:	43500000 	.word	0x43500000
 80077ec:	fffffc02 	.word	0xfffffc02
 80077f0:	800fffff 	.word	0x800fffff
 80077f4:	3fe00000 	.word	0x3fe00000

080077f8 <_sbrk_r>:
 80077f8:	2300      	movs	r3, #0
 80077fa:	b570      	push	{r4, r5, r6, lr}
 80077fc:	4d06      	ldr	r5, [pc, #24]	; (8007818 <_sbrk_r+0x20>)
 80077fe:	0004      	movs	r4, r0
 8007800:	0008      	movs	r0, r1
 8007802:	602b      	str	r3, [r5, #0]
 8007804:	f7fa feb2 	bl	800256c <_sbrk>
 8007808:	1c43      	adds	r3, r0, #1
 800780a:	d103      	bne.n	8007814 <_sbrk_r+0x1c>
 800780c:	682b      	ldr	r3, [r5, #0]
 800780e:	2b00      	cmp	r3, #0
 8007810:	d000      	beq.n	8007814 <_sbrk_r+0x1c>
 8007812:	6023      	str	r3, [r4, #0]
 8007814:	bd70      	pop	{r4, r5, r6, pc}
 8007816:	46c0      	nop			; (mov r8, r8)
 8007818:	20000ae4 	.word	0x20000ae4

0800781c <__sread>:
 800781c:	b570      	push	{r4, r5, r6, lr}
 800781e:	000c      	movs	r4, r1
 8007820:	250e      	movs	r5, #14
 8007822:	5f49      	ldrsh	r1, [r1, r5]
 8007824:	f001 f932 	bl	8008a8c <_read_r>
 8007828:	2800      	cmp	r0, #0
 800782a:	db03      	blt.n	8007834 <__sread+0x18>
 800782c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800782e:	181b      	adds	r3, r3, r0
 8007830:	6523      	str	r3, [r4, #80]	; 0x50
 8007832:	bd70      	pop	{r4, r5, r6, pc}
 8007834:	89a3      	ldrh	r3, [r4, #12]
 8007836:	4a02      	ldr	r2, [pc, #8]	; (8007840 <__sread+0x24>)
 8007838:	4013      	ands	r3, r2
 800783a:	81a3      	strh	r3, [r4, #12]
 800783c:	e7f9      	b.n	8007832 <__sread+0x16>
 800783e:	46c0      	nop			; (mov r8, r8)
 8007840:	ffffefff 	.word	0xffffefff

08007844 <__swrite>:
 8007844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007846:	001f      	movs	r7, r3
 8007848:	898b      	ldrh	r3, [r1, #12]
 800784a:	0005      	movs	r5, r0
 800784c:	000c      	movs	r4, r1
 800784e:	0016      	movs	r6, r2
 8007850:	05db      	lsls	r3, r3, #23
 8007852:	d505      	bpl.n	8007860 <__swrite+0x1c>
 8007854:	230e      	movs	r3, #14
 8007856:	5ec9      	ldrsh	r1, [r1, r3]
 8007858:	2200      	movs	r2, #0
 800785a:	2302      	movs	r3, #2
 800785c:	f001 f8dc 	bl	8008a18 <_lseek_r>
 8007860:	89a3      	ldrh	r3, [r4, #12]
 8007862:	4a05      	ldr	r2, [pc, #20]	; (8007878 <__swrite+0x34>)
 8007864:	0028      	movs	r0, r5
 8007866:	4013      	ands	r3, r2
 8007868:	81a3      	strh	r3, [r4, #12]
 800786a:	0032      	movs	r2, r6
 800786c:	230e      	movs	r3, #14
 800786e:	5ee1      	ldrsh	r1, [r4, r3]
 8007870:	003b      	movs	r3, r7
 8007872:	f000 fdb5 	bl	80083e0 <_write_r>
 8007876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007878:	ffffefff 	.word	0xffffefff

0800787c <__sseek>:
 800787c:	b570      	push	{r4, r5, r6, lr}
 800787e:	000c      	movs	r4, r1
 8007880:	250e      	movs	r5, #14
 8007882:	5f49      	ldrsh	r1, [r1, r5]
 8007884:	f001 f8c8 	bl	8008a18 <_lseek_r>
 8007888:	89a3      	ldrh	r3, [r4, #12]
 800788a:	1c42      	adds	r2, r0, #1
 800788c:	d103      	bne.n	8007896 <__sseek+0x1a>
 800788e:	4a05      	ldr	r2, [pc, #20]	; (80078a4 <__sseek+0x28>)
 8007890:	4013      	ands	r3, r2
 8007892:	81a3      	strh	r3, [r4, #12]
 8007894:	bd70      	pop	{r4, r5, r6, pc}
 8007896:	2280      	movs	r2, #128	; 0x80
 8007898:	0152      	lsls	r2, r2, #5
 800789a:	4313      	orrs	r3, r2
 800789c:	81a3      	strh	r3, [r4, #12]
 800789e:	6520      	str	r0, [r4, #80]	; 0x50
 80078a0:	e7f8      	b.n	8007894 <__sseek+0x18>
 80078a2:	46c0      	nop			; (mov r8, r8)
 80078a4:	ffffefff 	.word	0xffffefff

080078a8 <__sclose>:
 80078a8:	b510      	push	{r4, lr}
 80078aa:	230e      	movs	r3, #14
 80078ac:	5ec9      	ldrsh	r1, [r1, r3]
 80078ae:	f000 fe37 	bl	8008520 <_close_r>
 80078b2:	bd10      	pop	{r4, pc}

080078b4 <strncpy>:
 80078b4:	0003      	movs	r3, r0
 80078b6:	b530      	push	{r4, r5, lr}
 80078b8:	001d      	movs	r5, r3
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	d006      	beq.n	80078cc <strncpy+0x18>
 80078be:	780c      	ldrb	r4, [r1, #0]
 80078c0:	3a01      	subs	r2, #1
 80078c2:	3301      	adds	r3, #1
 80078c4:	702c      	strb	r4, [r5, #0]
 80078c6:	3101      	adds	r1, #1
 80078c8:	2c00      	cmp	r4, #0
 80078ca:	d1f5      	bne.n	80078b8 <strncpy+0x4>
 80078cc:	2100      	movs	r1, #0
 80078ce:	189a      	adds	r2, r3, r2
 80078d0:	4293      	cmp	r3, r2
 80078d2:	d100      	bne.n	80078d6 <strncpy+0x22>
 80078d4:	bd30      	pop	{r4, r5, pc}
 80078d6:	7019      	strb	r1, [r3, #0]
 80078d8:	3301      	adds	r3, #1
 80078da:	e7f9      	b.n	80078d0 <strncpy+0x1c>

080078dc <sysconf>:
 80078dc:	2380      	movs	r3, #128	; 0x80
 80078de:	b510      	push	{r4, lr}
 80078e0:	015b      	lsls	r3, r3, #5
 80078e2:	2808      	cmp	r0, #8
 80078e4:	d004      	beq.n	80078f0 <sysconf+0x14>
 80078e6:	f7fc fc4b 	bl	8004180 <__errno>
 80078ea:	2316      	movs	r3, #22
 80078ec:	6003      	str	r3, [r0, #0]
 80078ee:	3b17      	subs	r3, #23
 80078f0:	0018      	movs	r0, r3
 80078f2:	bd10      	pop	{r4, pc}

080078f4 <__sprint_r>:
 80078f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80078f6:	b085      	sub	sp, #20
 80078f8:	9001      	str	r0, [sp, #4]
 80078fa:	6890      	ldr	r0, [r2, #8]
 80078fc:	000d      	movs	r5, r1
 80078fe:	0014      	movs	r4, r2
 8007900:	2800      	cmp	r0, #0
 8007902:	d102      	bne.n	800790a <__sprint_r+0x16>
 8007904:	6050      	str	r0, [r2, #4]
 8007906:	b005      	add	sp, #20
 8007908:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800790a:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800790c:	049b      	lsls	r3, r3, #18
 800790e:	d521      	bpl.n	8007954 <__sprint_r+0x60>
 8007910:	6817      	ldr	r7, [r2, #0]
 8007912:	2600      	movs	r6, #0
 8007914:	683b      	ldr	r3, [r7, #0]
 8007916:	9302      	str	r3, [sp, #8]
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	9300      	str	r3, [sp, #0]
 800791c:	089b      	lsrs	r3, r3, #2
 800791e:	9303      	str	r3, [sp, #12]
 8007920:	9b03      	ldr	r3, [sp, #12]
 8007922:	42b3      	cmp	r3, r6
 8007924:	dc0b      	bgt.n	800793e <__sprint_r+0x4a>
 8007926:	2303      	movs	r3, #3
 8007928:	9800      	ldr	r0, [sp, #0]
 800792a:	3708      	adds	r7, #8
 800792c:	4398      	bics	r0, r3
 800792e:	68a3      	ldr	r3, [r4, #8]
 8007930:	1a18      	subs	r0, r3, r0
 8007932:	60a0      	str	r0, [r4, #8]
 8007934:	d1ed      	bne.n	8007912 <__sprint_r+0x1e>
 8007936:	2300      	movs	r3, #0
 8007938:	60a3      	str	r3, [r4, #8]
 800793a:	6063      	str	r3, [r4, #4]
 800793c:	e7e3      	b.n	8007906 <__sprint_r+0x12>
 800793e:	9902      	ldr	r1, [sp, #8]
 8007940:	00b3      	lsls	r3, r6, #2
 8007942:	58c9      	ldr	r1, [r1, r3]
 8007944:	002a      	movs	r2, r5
 8007946:	9801      	ldr	r0, [sp, #4]
 8007948:	f000 feaa 	bl	80086a0 <_fputwc_r>
 800794c:	1c43      	adds	r3, r0, #1
 800794e:	d0f2      	beq.n	8007936 <__sprint_r+0x42>
 8007950:	3601      	adds	r6, #1
 8007952:	e7e5      	b.n	8007920 <__sprint_r+0x2c>
 8007954:	9801      	ldr	r0, [sp, #4]
 8007956:	f000 fedf 	bl	8008718 <__sfvwrite_r>
 800795a:	e7ec      	b.n	8007936 <__sprint_r+0x42>

0800795c <_vfiprintf_r>:
 800795c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800795e:	b0c3      	sub	sp, #268	; 0x10c
 8007960:	001c      	movs	r4, r3
 8007962:	001d      	movs	r5, r3
 8007964:	9006      	str	r0, [sp, #24]
 8007966:	9103      	str	r1, [sp, #12]
 8007968:	9207      	str	r2, [sp, #28]
 800796a:	2800      	cmp	r0, #0
 800796c:	d005      	beq.n	800797a <_vfiprintf_r+0x1e>
 800796e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8007970:	9304      	str	r3, [sp, #16]
 8007972:	2b00      	cmp	r3, #0
 8007974:	d101      	bne.n	800797a <_vfiprintf_r+0x1e>
 8007976:	f7fe ffa5 	bl	80068c4 <__sinit>
 800797a:	9b03      	ldr	r3, [sp, #12]
 800797c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800797e:	07db      	lsls	r3, r3, #31
 8007980:	d407      	bmi.n	8007992 <_vfiprintf_r+0x36>
 8007982:	9b03      	ldr	r3, [sp, #12]
 8007984:	899b      	ldrh	r3, [r3, #12]
 8007986:	059b      	lsls	r3, r3, #22
 8007988:	d403      	bmi.n	8007992 <_vfiprintf_r+0x36>
 800798a:	9b03      	ldr	r3, [sp, #12]
 800798c:	6d98      	ldr	r0, [r3, #88]	; 0x58
 800798e:	f7ff f905 	bl	8006b9c <__retarget_lock_acquire_recursive>
 8007992:	9b03      	ldr	r3, [sp, #12]
 8007994:	220c      	movs	r2, #12
 8007996:	5e9a      	ldrsh	r2, [r3, r2]
 8007998:	2380      	movs	r3, #128	; 0x80
 800799a:	019b      	lsls	r3, r3, #6
 800799c:	421a      	tst	r2, r3
 800799e:	d107      	bne.n	80079b0 <_vfiprintf_r+0x54>
 80079a0:	4313      	orrs	r3, r2
 80079a2:	9a03      	ldr	r2, [sp, #12]
 80079a4:	8193      	strh	r3, [r2, #12]
 80079a6:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80079a8:	4ba7      	ldr	r3, [pc, #668]	; (8007c48 <_vfiprintf_r+0x2ec>)
 80079aa:	4013      	ands	r3, r2
 80079ac:	9a03      	ldr	r2, [sp, #12]
 80079ae:	6653      	str	r3, [r2, #100]	; 0x64
 80079b0:	9b03      	ldr	r3, [sp, #12]
 80079b2:	899b      	ldrh	r3, [r3, #12]
 80079b4:	071b      	lsls	r3, r3, #28
 80079b6:	d503      	bpl.n	80079c0 <_vfiprintf_r+0x64>
 80079b8:	9b03      	ldr	r3, [sp, #12]
 80079ba:	691b      	ldr	r3, [r3, #16]
 80079bc:	2b00      	cmp	r3, #0
 80079be:	d118      	bne.n	80079f2 <_vfiprintf_r+0x96>
 80079c0:	9903      	ldr	r1, [sp, #12]
 80079c2:	9806      	ldr	r0, [sp, #24]
 80079c4:	f7fd ff86 	bl	80058d4 <__swsetup_r>
 80079c8:	2800      	cmp	r0, #0
 80079ca:	d012      	beq.n	80079f2 <_vfiprintf_r+0x96>
 80079cc:	9b03      	ldr	r3, [sp, #12]
 80079ce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80079d0:	07db      	lsls	r3, r3, #31
 80079d2:	d505      	bpl.n	80079e0 <_vfiprintf_r+0x84>
 80079d4:	2301      	movs	r3, #1
 80079d6:	425b      	negs	r3, r3
 80079d8:	9308      	str	r3, [sp, #32]
 80079da:	9808      	ldr	r0, [sp, #32]
 80079dc:	b043      	add	sp, #268	; 0x10c
 80079de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80079e0:	9b03      	ldr	r3, [sp, #12]
 80079e2:	899b      	ldrh	r3, [r3, #12]
 80079e4:	059b      	lsls	r3, r3, #22
 80079e6:	d4f5      	bmi.n	80079d4 <_vfiprintf_r+0x78>
 80079e8:	9b03      	ldr	r3, [sp, #12]
 80079ea:	6d98      	ldr	r0, [r3, #88]	; 0x58
 80079ec:	f7ff f8d7 	bl	8006b9e <__retarget_lock_release_recursive>
 80079f0:	e7f0      	b.n	80079d4 <_vfiprintf_r+0x78>
 80079f2:	9b03      	ldr	r3, [sp, #12]
 80079f4:	899a      	ldrh	r2, [r3, #12]
 80079f6:	231a      	movs	r3, #26
 80079f8:	4013      	ands	r3, r2
 80079fa:	2b0a      	cmp	r3, #10
 80079fc:	d116      	bne.n	8007a2c <_vfiprintf_r+0xd0>
 80079fe:	9b03      	ldr	r3, [sp, #12]
 8007a00:	210e      	movs	r1, #14
 8007a02:	5e5b      	ldrsh	r3, [r3, r1]
 8007a04:	2b00      	cmp	r3, #0
 8007a06:	db11      	blt.n	8007a2c <_vfiprintf_r+0xd0>
 8007a08:	9b03      	ldr	r3, [sp, #12]
 8007a0a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007a0c:	07db      	lsls	r3, r3, #31
 8007a0e:	d405      	bmi.n	8007a1c <_vfiprintf_r+0xc0>
 8007a10:	0593      	lsls	r3, r2, #22
 8007a12:	d403      	bmi.n	8007a1c <_vfiprintf_r+0xc0>
 8007a14:	9b03      	ldr	r3, [sp, #12]
 8007a16:	6d98      	ldr	r0, [r3, #88]	; 0x58
 8007a18:	f7ff f8c1 	bl	8006b9e <__retarget_lock_release_recursive>
 8007a1c:	0023      	movs	r3, r4
 8007a1e:	9a07      	ldr	r2, [sp, #28]
 8007a20:	9903      	ldr	r1, [sp, #12]
 8007a22:	9806      	ldr	r0, [sp, #24]
 8007a24:	f000 fc98 	bl	8008358 <__sbprintf>
 8007a28:	9008      	str	r0, [sp, #32]
 8007a2a:	e7d6      	b.n	80079da <_vfiprintf_r+0x7e>
 8007a2c:	2300      	movs	r3, #0
 8007a2e:	af19      	add	r7, sp, #100	; 0x64
 8007a30:	9716      	str	r7, [sp, #88]	; 0x58
 8007a32:	9318      	str	r3, [sp, #96]	; 0x60
 8007a34:	9317      	str	r3, [sp, #92]	; 0x5c
 8007a36:	930c      	str	r3, [sp, #48]	; 0x30
 8007a38:	930d      	str	r3, [sp, #52]	; 0x34
 8007a3a:	930e      	str	r3, [sp, #56]	; 0x38
 8007a3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8007a3e:	9308      	str	r3, [sp, #32]
 8007a40:	9c07      	ldr	r4, [sp, #28]
 8007a42:	7823      	ldrb	r3, [r4, #0]
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d002      	beq.n	8007a4e <_vfiprintf_r+0xf2>
 8007a48:	2b25      	cmp	r3, #37	; 0x25
 8007a4a:	d000      	beq.n	8007a4e <_vfiprintf_r+0xf2>
 8007a4c:	e093      	b.n	8007b76 <_vfiprintf_r+0x21a>
 8007a4e:	9b07      	ldr	r3, [sp, #28]
 8007a50:	1ae3      	subs	r3, r4, r3
 8007a52:	001e      	movs	r6, r3
 8007a54:	9b07      	ldr	r3, [sp, #28]
 8007a56:	429c      	cmp	r4, r3
 8007a58:	d01a      	beq.n	8007a90 <_vfiprintf_r+0x134>
 8007a5a:	46b4      	mov	ip, r6
 8007a5c:	603b      	str	r3, [r7, #0]
 8007a5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007a60:	607e      	str	r6, [r7, #4]
 8007a62:	4463      	add	r3, ip
 8007a64:	9318      	str	r3, [sp, #96]	; 0x60
 8007a66:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007a68:	3708      	adds	r7, #8
 8007a6a:	9304      	str	r3, [sp, #16]
 8007a6c:	3301      	adds	r3, #1
 8007a6e:	9317      	str	r3, [sp, #92]	; 0x5c
 8007a70:	2b07      	cmp	r3, #7
 8007a72:	dd09      	ble.n	8007a88 <_vfiprintf_r+0x12c>
 8007a74:	9903      	ldr	r1, [sp, #12]
 8007a76:	9806      	ldr	r0, [sp, #24]
 8007a78:	aa16      	add	r2, sp, #88	; 0x58
 8007a7a:	f7ff ff3b 	bl	80078f4 <__sprint_r>
 8007a7e:	2800      	cmp	r0, #0
 8007a80:	d001      	beq.n	8007a86 <_vfiprintf_r+0x12a>
 8007a82:	f000 fc00 	bl	8008286 <_vfiprintf_r+0x92a>
 8007a86:	af19      	add	r7, sp, #100	; 0x64
 8007a88:	46b4      	mov	ip, r6
 8007a8a:	9b08      	ldr	r3, [sp, #32]
 8007a8c:	4463      	add	r3, ip
 8007a8e:	9308      	str	r3, [sp, #32]
 8007a90:	7823      	ldrb	r3, [r4, #0]
 8007a92:	2b00      	cmp	r3, #0
 8007a94:	d101      	bne.n	8007a9a <_vfiprintf_r+0x13e>
 8007a96:	f000 fc1b 	bl	80082d0 <_vfiprintf_r+0x974>
 8007a9a:	2200      	movs	r2, #0
 8007a9c:	a914      	add	r1, sp, #80	; 0x50
 8007a9e:	70ca      	strb	r2, [r1, #3]
 8007aa0:	2101      	movs	r1, #1
 8007aa2:	1c63      	adds	r3, r4, #1
 8007aa4:	0014      	movs	r4, r2
 8007aa6:	4249      	negs	r1, r1
 8007aa8:	9105      	str	r1, [sp, #20]
 8007aaa:	9209      	str	r2, [sp, #36]	; 0x24
 8007aac:	1c5a      	adds	r2, r3, #1
 8007aae:	781b      	ldrb	r3, [r3, #0]
 8007ab0:	9207      	str	r2, [sp, #28]
 8007ab2:	0018      	movs	r0, r3
 8007ab4:	3820      	subs	r0, #32
 8007ab6:	285a      	cmp	r0, #90	; 0x5a
 8007ab8:	d900      	bls.n	8007abc <_vfiprintf_r+0x160>
 8007aba:	e37c      	b.n	80081b6 <_vfiprintf_r+0x85a>
 8007abc:	f7f8 fb32 	bl	8000124 <__gnu_thumb1_case_uhi>
 8007ac0:	037b0098 	.word	0x037b0098
 8007ac4:	00a1037b 	.word	0x00a1037b
 8007ac8:	037b037b 	.word	0x037b037b
 8007acc:	007d037b 	.word	0x007d037b
 8007ad0:	037b037b 	.word	0x037b037b
 8007ad4:	00ab00a3 	.word	0x00ab00a3
 8007ad8:	00a9037b 	.word	0x00a9037b
 8007adc:	037b00af 	.word	0x037b00af
 8007ae0:	00d500d3 	.word	0x00d500d3
 8007ae4:	00d500d5 	.word	0x00d500d5
 8007ae8:	00d500d5 	.word	0x00d500d5
 8007aec:	00d500d5 	.word	0x00d500d5
 8007af0:	00d500d5 	.word	0x00d500d5
 8007af4:	037b037b 	.word	0x037b037b
 8007af8:	037b037b 	.word	0x037b037b
 8007afc:	037b037b 	.word	0x037b037b
 8007b00:	037b037b 	.word	0x037b037b
 8007b04:	00fe037b 	.word	0x00fe037b
 8007b08:	037b01f9 	.word	0x037b01f9
 8007b0c:	037b037b 	.word	0x037b037b
 8007b10:	037b037b 	.word	0x037b037b
 8007b14:	037b037b 	.word	0x037b037b
 8007b18:	037b037b 	.word	0x037b037b
 8007b1c:	0252037b 	.word	0x0252037b
 8007b20:	037b037b 	.word	0x037b037b
 8007b24:	0295037b 	.word	0x0295037b
 8007b28:	02b1037b 	.word	0x02b1037b
 8007b2c:	037b037b 	.word	0x037b037b
 8007b30:	037b02ec 	.word	0x037b02ec
 8007b34:	037b037b 	.word	0x037b037b
 8007b38:	037b037b 	.word	0x037b037b
 8007b3c:	037b037b 	.word	0x037b037b
 8007b40:	037b037b 	.word	0x037b037b
 8007b44:	00fe037b 	.word	0x00fe037b
 8007b48:	037b01fb 	.word	0x037b01fb
 8007b4c:	037b037b 	.word	0x037b037b
 8007b50:	01fb00e7 	.word	0x01fb00e7
 8007b54:	037b00fa 	.word	0x037b00fa
 8007b58:	037b00f3 	.word	0x037b00f3
 8007b5c:	0254023b 	.word	0x0254023b
 8007b60:	00fa0287 	.word	0x00fa0287
 8007b64:	0295037b 	.word	0x0295037b
 8007b68:	02b3009f 	.word	0x02b3009f
 8007b6c:	037b037b 	.word	0x037b037b
 8007b70:	037b005d 	.word	0x037b005d
 8007b74:	009f      	.short	0x009f
 8007b76:	3401      	adds	r4, #1
 8007b78:	e763      	b.n	8007a42 <_vfiprintf_r+0xe6>
 8007b7a:	4a34      	ldr	r2, [pc, #208]	; (8007c4c <_vfiprintf_r+0x2f0>)
 8007b7c:	0020      	movs	r0, r4
 8007b7e:	920c      	str	r2, [sp, #48]	; 0x30
 8007b80:	2220      	movs	r2, #32
 8007b82:	4010      	ands	r0, r2
 8007b84:	4214      	tst	r4, r2
 8007b86:	d100      	bne.n	8007b8a <_vfiprintf_r+0x22e>
 8007b88:	e288      	b.n	800809c <_vfiprintf_r+0x740>
 8007b8a:	3a19      	subs	r2, #25
 8007b8c:	3507      	adds	r5, #7
 8007b8e:	4395      	bics	r5, r2
 8007b90:	0028      	movs	r0, r5
 8007b92:	c806      	ldmia	r0!, {r1, r2}
 8007b94:	9100      	str	r1, [sp, #0]
 8007b96:	9201      	str	r2, [sp, #4]
 8007b98:	9004      	str	r0, [sp, #16]
 8007b9a:	07e2      	lsls	r2, r4, #31
 8007b9c:	d509      	bpl.n	8007bb2 <_vfiprintf_r+0x256>
 8007b9e:	9a00      	ldr	r2, [sp, #0]
 8007ba0:	9901      	ldr	r1, [sp, #4]
 8007ba2:	430a      	orrs	r2, r1
 8007ba4:	d005      	beq.n	8007bb2 <_vfiprintf_r+0x256>
 8007ba6:	aa15      	add	r2, sp, #84	; 0x54
 8007ba8:	2130      	movs	r1, #48	; 0x30
 8007baa:	7053      	strb	r3, [r2, #1]
 8007bac:	2302      	movs	r3, #2
 8007bae:	7011      	strb	r1, [r2, #0]
 8007bb0:	431c      	orrs	r4, r3
 8007bb2:	4b27      	ldr	r3, [pc, #156]	; (8007c50 <_vfiprintf_r+0x2f4>)
 8007bb4:	401c      	ands	r4, r3
 8007bb6:	2302      	movs	r3, #2
 8007bb8:	e1e6      	b.n	8007f88 <_vfiprintf_r+0x62c>
 8007bba:	9806      	ldr	r0, [sp, #24]
 8007bbc:	f7fe ffe8 	bl	8006b90 <_localeconv_r>
 8007bc0:	6843      	ldr	r3, [r0, #4]
 8007bc2:	0018      	movs	r0, r3
 8007bc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8007bc6:	f7f8 fa9b 	bl	8000100 <strlen>
 8007bca:	900e      	str	r0, [sp, #56]	; 0x38
 8007bcc:	9806      	ldr	r0, [sp, #24]
 8007bce:	f7fe ffdf 	bl	8006b90 <_localeconv_r>
 8007bd2:	6883      	ldr	r3, [r0, #8]
 8007bd4:	930d      	str	r3, [sp, #52]	; 0x34
 8007bd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007bd8:	2b00      	cmp	r3, #0
 8007bda:	d010      	beq.n	8007bfe <_vfiprintf_r+0x2a2>
 8007bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d00d      	beq.n	8007bfe <_vfiprintf_r+0x2a2>
 8007be2:	781b      	ldrb	r3, [r3, #0]
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	d00a      	beq.n	8007bfe <_vfiprintf_r+0x2a2>
 8007be8:	2380      	movs	r3, #128	; 0x80
 8007bea:	00db      	lsls	r3, r3, #3
 8007bec:	431c      	orrs	r4, r3
 8007bee:	e006      	b.n	8007bfe <_vfiprintf_r+0x2a2>
 8007bf0:	ab14      	add	r3, sp, #80	; 0x50
 8007bf2:	78da      	ldrb	r2, [r3, #3]
 8007bf4:	3303      	adds	r3, #3
 8007bf6:	2a00      	cmp	r2, #0
 8007bf8:	d101      	bne.n	8007bfe <_vfiprintf_r+0x2a2>
 8007bfa:	3220      	adds	r2, #32
 8007bfc:	701a      	strb	r2, [r3, #0]
 8007bfe:	9b07      	ldr	r3, [sp, #28]
 8007c00:	e754      	b.n	8007aac <_vfiprintf_r+0x150>
 8007c02:	2301      	movs	r3, #1
 8007c04:	e7f2      	b.n	8007bec <_vfiprintf_r+0x290>
 8007c06:	cd08      	ldmia	r5!, {r3}
 8007c08:	9309      	str	r3, [sp, #36]	; 0x24
 8007c0a:	2b00      	cmp	r3, #0
 8007c0c:	daf7      	bge.n	8007bfe <_vfiprintf_r+0x2a2>
 8007c0e:	425b      	negs	r3, r3
 8007c10:	9309      	str	r3, [sp, #36]	; 0x24
 8007c12:	2304      	movs	r3, #4
 8007c14:	e7ea      	b.n	8007bec <_vfiprintf_r+0x290>
 8007c16:	222b      	movs	r2, #43	; 0x2b
 8007c18:	ab14      	add	r3, sp, #80	; 0x50
 8007c1a:	70da      	strb	r2, [r3, #3]
 8007c1c:	e7ef      	b.n	8007bfe <_vfiprintf_r+0x2a2>
 8007c1e:	9b07      	ldr	r3, [sp, #28]
 8007c20:	1c5a      	adds	r2, r3, #1
 8007c22:	781b      	ldrb	r3, [r3, #0]
 8007c24:	2b2a      	cmp	r3, #42	; 0x2a
 8007c26:	d015      	beq.n	8007c54 <_vfiprintf_r+0x2f8>
 8007c28:	2100      	movs	r1, #0
 8007c2a:	9105      	str	r1, [sp, #20]
 8007c2c:	0019      	movs	r1, r3
 8007c2e:	3930      	subs	r1, #48	; 0x30
 8007c30:	9207      	str	r2, [sp, #28]
 8007c32:	2909      	cmp	r1, #9
 8007c34:	d900      	bls.n	8007c38 <_vfiprintf_r+0x2dc>
 8007c36:	e73c      	b.n	8007ab2 <_vfiprintf_r+0x156>
 8007c38:	230a      	movs	r3, #10
 8007c3a:	9805      	ldr	r0, [sp, #20]
 8007c3c:	4358      	muls	r0, r3
 8007c3e:	1843      	adds	r3, r0, r1
 8007c40:	9305      	str	r3, [sp, #20]
 8007c42:	7813      	ldrb	r3, [r2, #0]
 8007c44:	3201      	adds	r2, #1
 8007c46:	e7f1      	b.n	8007c2c <_vfiprintf_r+0x2d0>
 8007c48:	ffffdfff 	.word	0xffffdfff
 8007c4c:	080090e0 	.word	0x080090e0
 8007c50:	fffffbff 	.word	0xfffffbff
 8007c54:	cd08      	ldmia	r5!, {r3}
 8007c56:	9305      	str	r3, [sp, #20]
 8007c58:	2b00      	cmp	r3, #0
 8007c5a:	da02      	bge.n	8007c62 <_vfiprintf_r+0x306>
 8007c5c:	2301      	movs	r3, #1
 8007c5e:	425b      	negs	r3, r3
 8007c60:	9305      	str	r3, [sp, #20]
 8007c62:	9207      	str	r2, [sp, #28]
 8007c64:	e7cb      	b.n	8007bfe <_vfiprintf_r+0x2a2>
 8007c66:	2380      	movs	r3, #128	; 0x80
 8007c68:	e7c0      	b.n	8007bec <_vfiprintf_r+0x290>
 8007c6a:	2100      	movs	r1, #0
 8007c6c:	9a07      	ldr	r2, [sp, #28]
 8007c6e:	9109      	str	r1, [sp, #36]	; 0x24
 8007c70:	200a      	movs	r0, #10
 8007c72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007c74:	3b30      	subs	r3, #48	; 0x30
 8007c76:	4341      	muls	r1, r0
 8007c78:	185b      	adds	r3, r3, r1
 8007c7a:	9309      	str	r3, [sp, #36]	; 0x24
 8007c7c:	0013      	movs	r3, r2
 8007c7e:	781b      	ldrb	r3, [r3, #0]
 8007c80:	3201      	adds	r2, #1
 8007c82:	0019      	movs	r1, r3
 8007c84:	3930      	subs	r1, #48	; 0x30
 8007c86:	9207      	str	r2, [sp, #28]
 8007c88:	2909      	cmp	r1, #9
 8007c8a:	d9f1      	bls.n	8007c70 <_vfiprintf_r+0x314>
 8007c8c:	e711      	b.n	8007ab2 <_vfiprintf_r+0x156>
 8007c8e:	9b07      	ldr	r3, [sp, #28]
 8007c90:	781b      	ldrb	r3, [r3, #0]
 8007c92:	2b68      	cmp	r3, #104	; 0x68
 8007c94:	d105      	bne.n	8007ca2 <_vfiprintf_r+0x346>
 8007c96:	9b07      	ldr	r3, [sp, #28]
 8007c98:	3301      	adds	r3, #1
 8007c9a:	9307      	str	r3, [sp, #28]
 8007c9c:	2380      	movs	r3, #128	; 0x80
 8007c9e:	009b      	lsls	r3, r3, #2
 8007ca0:	e7a4      	b.n	8007bec <_vfiprintf_r+0x290>
 8007ca2:	2340      	movs	r3, #64	; 0x40
 8007ca4:	e7a2      	b.n	8007bec <_vfiprintf_r+0x290>
 8007ca6:	9b07      	ldr	r3, [sp, #28]
 8007ca8:	781b      	ldrb	r3, [r3, #0]
 8007caa:	2b6c      	cmp	r3, #108	; 0x6c
 8007cac:	d104      	bne.n	8007cb8 <_vfiprintf_r+0x35c>
 8007cae:	9b07      	ldr	r3, [sp, #28]
 8007cb0:	3301      	adds	r3, #1
 8007cb2:	9307      	str	r3, [sp, #28]
 8007cb4:	2320      	movs	r3, #32
 8007cb6:	e799      	b.n	8007bec <_vfiprintf_r+0x290>
 8007cb8:	2310      	movs	r3, #16
 8007cba:	e797      	b.n	8007bec <_vfiprintf_r+0x290>
 8007cbc:	9504      	str	r5, [sp, #16]
 8007cbe:	9a04      	ldr	r2, [sp, #16]
 8007cc0:	ad29      	add	r5, sp, #164	; 0xa4
 8007cc2:	ca08      	ldmia	r2!, {r3}
 8007cc4:	9204      	str	r2, [sp, #16]
 8007cc6:	2200      	movs	r2, #0
 8007cc8:	702b      	strb	r3, [r5, #0]
 8007cca:	ab14      	add	r3, sp, #80	; 0x50
 8007ccc:	70da      	strb	r2, [r3, #3]
 8007cce:	2301      	movs	r3, #1
 8007cd0:	920b      	str	r2, [sp, #44]	; 0x2c
 8007cd2:	9305      	str	r3, [sp, #20]
 8007cd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007cd6:	9a05      	ldr	r2, [sp, #20]
 8007cd8:	930a      	str	r3, [sp, #40]	; 0x28
 8007cda:	4293      	cmp	r3, r2
 8007cdc:	da00      	bge.n	8007ce0 <_vfiprintf_r+0x384>
 8007cde:	920a      	str	r2, [sp, #40]	; 0x28
 8007ce0:	ab14      	add	r3, sp, #80	; 0x50
 8007ce2:	3303      	adds	r3, #3
 8007ce4:	781b      	ldrb	r3, [r3, #0]
 8007ce6:	1e5a      	subs	r2, r3, #1
 8007ce8:	4193      	sbcs	r3, r2
 8007cea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007cec:	18d3      	adds	r3, r2, r3
 8007cee:	930a      	str	r3, [sp, #40]	; 0x28
 8007cf0:	0022      	movs	r2, r4
 8007cf2:	2302      	movs	r3, #2
 8007cf4:	401a      	ands	r2, r3
 8007cf6:	9210      	str	r2, [sp, #64]	; 0x40
 8007cf8:	421c      	tst	r4, r3
 8007cfa:	d002      	beq.n	8007d02 <_vfiprintf_r+0x3a6>
 8007cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007cfe:	3302      	adds	r3, #2
 8007d00:	930a      	str	r3, [sp, #40]	; 0x28
 8007d02:	2384      	movs	r3, #132	; 0x84
 8007d04:	0022      	movs	r2, r4
 8007d06:	401a      	ands	r2, r3
 8007d08:	9211      	str	r2, [sp, #68]	; 0x44
 8007d0a:	421c      	tst	r4, r3
 8007d0c:	d11f      	bne.n	8007d4e <_vfiprintf_r+0x3f2>
 8007d0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007d10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007d12:	1a9b      	subs	r3, r3, r2
 8007d14:	1e1e      	subs	r6, r3, #0
 8007d16:	dd1a      	ble.n	8007d4e <_vfiprintf_r+0x3f2>
 8007d18:	0039      	movs	r1, r7
 8007d1a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007d1c:	48c9      	ldr	r0, [pc, #804]	; (8008044 <_vfiprintf_r+0x6e8>)
 8007d1e:	9312      	str	r3, [sp, #72]	; 0x48
 8007d20:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8007d22:	3301      	adds	r3, #1
 8007d24:	3108      	adds	r1, #8
 8007d26:	6038      	str	r0, [r7, #0]
 8007d28:	2e10      	cmp	r6, #16
 8007d2a:	dd00      	ble.n	8007d2e <_vfiprintf_r+0x3d2>
 8007d2c:	e251      	b.n	80081d2 <_vfiprintf_r+0x876>
 8007d2e:	18b2      	adds	r2, r6, r2
 8007d30:	607e      	str	r6, [r7, #4]
 8007d32:	9218      	str	r2, [sp, #96]	; 0x60
 8007d34:	000f      	movs	r7, r1
 8007d36:	9317      	str	r3, [sp, #92]	; 0x5c
 8007d38:	2b07      	cmp	r3, #7
 8007d3a:	dd08      	ble.n	8007d4e <_vfiprintf_r+0x3f2>
 8007d3c:	9903      	ldr	r1, [sp, #12]
 8007d3e:	9806      	ldr	r0, [sp, #24]
 8007d40:	aa16      	add	r2, sp, #88	; 0x58
 8007d42:	f7ff fdd7 	bl	80078f4 <__sprint_r>
 8007d46:	2800      	cmp	r0, #0
 8007d48:	d000      	beq.n	8007d4c <_vfiprintf_r+0x3f0>
 8007d4a:	e29c      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007d4c:	af19      	add	r7, sp, #100	; 0x64
 8007d4e:	ab14      	add	r3, sp, #80	; 0x50
 8007d50:	1cda      	adds	r2, r3, #3
 8007d52:	78db      	ldrb	r3, [r3, #3]
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	d017      	beq.n	8007d88 <_vfiprintf_r+0x42c>
 8007d58:	603a      	str	r2, [r7, #0]
 8007d5a:	2201      	movs	r2, #1
 8007d5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007d5e:	607a      	str	r2, [r7, #4]
 8007d60:	9312      	str	r3, [sp, #72]	; 0x48
 8007d62:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007d64:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007d66:	3201      	adds	r2, #1
 8007d68:	9313      	str	r3, [sp, #76]	; 0x4c
 8007d6a:	3301      	adds	r3, #1
 8007d6c:	9218      	str	r2, [sp, #96]	; 0x60
 8007d6e:	9317      	str	r3, [sp, #92]	; 0x5c
 8007d70:	3708      	adds	r7, #8
 8007d72:	2b07      	cmp	r3, #7
 8007d74:	dd08      	ble.n	8007d88 <_vfiprintf_r+0x42c>
 8007d76:	9903      	ldr	r1, [sp, #12]
 8007d78:	9806      	ldr	r0, [sp, #24]
 8007d7a:	aa16      	add	r2, sp, #88	; 0x58
 8007d7c:	f7ff fdba 	bl	80078f4 <__sprint_r>
 8007d80:	2800      	cmp	r0, #0
 8007d82:	d000      	beq.n	8007d86 <_vfiprintf_r+0x42a>
 8007d84:	e27f      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007d86:	af19      	add	r7, sp, #100	; 0x64
 8007d88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	d018      	beq.n	8007dc0 <_vfiprintf_r+0x464>
 8007d8e:	aa15      	add	r2, sp, #84	; 0x54
 8007d90:	603a      	str	r2, [r7, #0]
 8007d92:	2202      	movs	r2, #2
 8007d94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007d96:	607a      	str	r2, [r7, #4]
 8007d98:	9310      	str	r3, [sp, #64]	; 0x40
 8007d9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8007d9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007d9e:	3202      	adds	r2, #2
 8007da0:	9312      	str	r3, [sp, #72]	; 0x48
 8007da2:	3301      	adds	r3, #1
 8007da4:	9218      	str	r2, [sp, #96]	; 0x60
 8007da6:	9317      	str	r3, [sp, #92]	; 0x5c
 8007da8:	3708      	adds	r7, #8
 8007daa:	2b07      	cmp	r3, #7
 8007dac:	dd08      	ble.n	8007dc0 <_vfiprintf_r+0x464>
 8007dae:	9903      	ldr	r1, [sp, #12]
 8007db0:	9806      	ldr	r0, [sp, #24]
 8007db2:	aa16      	add	r2, sp, #88	; 0x58
 8007db4:	f7ff fd9e 	bl	80078f4 <__sprint_r>
 8007db8:	2800      	cmp	r0, #0
 8007dba:	d000      	beq.n	8007dbe <_vfiprintf_r+0x462>
 8007dbc:	e263      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007dbe:	af19      	add	r7, sp, #100	; 0x64
 8007dc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007dc2:	2b80      	cmp	r3, #128	; 0x80
 8007dc4:	d11f      	bne.n	8007e06 <_vfiprintf_r+0x4aa>
 8007dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007dc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007dca:	1a9b      	subs	r3, r3, r2
 8007dcc:	1e1e      	subs	r6, r3, #0
 8007dce:	dd1a      	ble.n	8007e06 <_vfiprintf_r+0x4aa>
 8007dd0:	0039      	movs	r1, r7
 8007dd2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007dd4:	489c      	ldr	r0, [pc, #624]	; (8008048 <_vfiprintf_r+0x6ec>)
 8007dd6:	9310      	str	r3, [sp, #64]	; 0x40
 8007dd8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8007dda:	3301      	adds	r3, #1
 8007ddc:	3108      	adds	r1, #8
 8007dde:	6038      	str	r0, [r7, #0]
 8007de0:	2e10      	cmp	r6, #16
 8007de2:	dd00      	ble.n	8007de6 <_vfiprintf_r+0x48a>
 8007de4:	e209      	b.n	80081fa <_vfiprintf_r+0x89e>
 8007de6:	18b2      	adds	r2, r6, r2
 8007de8:	607e      	str	r6, [r7, #4]
 8007dea:	9218      	str	r2, [sp, #96]	; 0x60
 8007dec:	000f      	movs	r7, r1
 8007dee:	9317      	str	r3, [sp, #92]	; 0x5c
 8007df0:	2b07      	cmp	r3, #7
 8007df2:	dd08      	ble.n	8007e06 <_vfiprintf_r+0x4aa>
 8007df4:	9903      	ldr	r1, [sp, #12]
 8007df6:	9806      	ldr	r0, [sp, #24]
 8007df8:	aa16      	add	r2, sp, #88	; 0x58
 8007dfa:	f7ff fd7b 	bl	80078f4 <__sprint_r>
 8007dfe:	2800      	cmp	r0, #0
 8007e00:	d000      	beq.n	8007e04 <_vfiprintf_r+0x4a8>
 8007e02:	e240      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007e04:	af19      	add	r7, sp, #100	; 0x64
 8007e06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007e08:	9a05      	ldr	r2, [sp, #20]
 8007e0a:	1a9b      	subs	r3, r3, r2
 8007e0c:	1e1e      	subs	r6, r3, #0
 8007e0e:	dd1a      	ble.n	8007e46 <_vfiprintf_r+0x4ea>
 8007e10:	0039      	movs	r1, r7
 8007e12:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007e14:	488c      	ldr	r0, [pc, #560]	; (8008048 <_vfiprintf_r+0x6ec>)
 8007e16:	930b      	str	r3, [sp, #44]	; 0x2c
 8007e18:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8007e1a:	3301      	adds	r3, #1
 8007e1c:	3108      	adds	r1, #8
 8007e1e:	6038      	str	r0, [r7, #0]
 8007e20:	2e10      	cmp	r6, #16
 8007e22:	dd00      	ble.n	8007e26 <_vfiprintf_r+0x4ca>
 8007e24:	e1fd      	b.n	8008222 <_vfiprintf_r+0x8c6>
 8007e26:	18b2      	adds	r2, r6, r2
 8007e28:	607e      	str	r6, [r7, #4]
 8007e2a:	9218      	str	r2, [sp, #96]	; 0x60
 8007e2c:	000f      	movs	r7, r1
 8007e2e:	9317      	str	r3, [sp, #92]	; 0x5c
 8007e30:	2b07      	cmp	r3, #7
 8007e32:	dd08      	ble.n	8007e46 <_vfiprintf_r+0x4ea>
 8007e34:	9903      	ldr	r1, [sp, #12]
 8007e36:	9806      	ldr	r0, [sp, #24]
 8007e38:	aa16      	add	r2, sp, #88	; 0x58
 8007e3a:	f7ff fd5b 	bl	80078f4 <__sprint_r>
 8007e3e:	2800      	cmp	r0, #0
 8007e40:	d000      	beq.n	8007e44 <_vfiprintf_r+0x4e8>
 8007e42:	e220      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007e44:	af19      	add	r7, sp, #100	; 0x64
 8007e46:	9b05      	ldr	r3, [sp, #20]
 8007e48:	603d      	str	r5, [r7, #0]
 8007e4a:	607b      	str	r3, [r7, #4]
 8007e4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007e4e:	3708      	adds	r7, #8
 8007e50:	930b      	str	r3, [sp, #44]	; 0x2c
 8007e52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007e54:	9b05      	ldr	r3, [sp, #20]
 8007e56:	4694      	mov	ip, r2
 8007e58:	4463      	add	r3, ip
 8007e5a:	9318      	str	r3, [sp, #96]	; 0x60
 8007e5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007e5e:	9305      	str	r3, [sp, #20]
 8007e60:	3301      	adds	r3, #1
 8007e62:	9317      	str	r3, [sp, #92]	; 0x5c
 8007e64:	2b07      	cmp	r3, #7
 8007e66:	dd08      	ble.n	8007e7a <_vfiprintf_r+0x51e>
 8007e68:	9903      	ldr	r1, [sp, #12]
 8007e6a:	9806      	ldr	r0, [sp, #24]
 8007e6c:	aa16      	add	r2, sp, #88	; 0x58
 8007e6e:	f7ff fd41 	bl	80078f4 <__sprint_r>
 8007e72:	2800      	cmp	r0, #0
 8007e74:	d000      	beq.n	8007e78 <_vfiprintf_r+0x51c>
 8007e76:	e206      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007e78:	af19      	add	r7, sp, #100	; 0x64
 8007e7a:	0763      	lsls	r3, r4, #29
 8007e7c:	d500      	bpl.n	8007e80 <_vfiprintf_r+0x524>
 8007e7e:	e1e4      	b.n	800824a <_vfiprintf_r+0x8ee>
 8007e80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007e84:	4293      	cmp	r3, r2
 8007e86:	da00      	bge.n	8007e8a <_vfiprintf_r+0x52e>
 8007e88:	0013      	movs	r3, r2
 8007e8a:	9a08      	ldr	r2, [sp, #32]
 8007e8c:	18d3      	adds	r3, r2, r3
 8007e8e:	9308      	str	r3, [sp, #32]
 8007e90:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007e92:	9305      	str	r3, [sp, #20]
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d007      	beq.n	8007ea8 <_vfiprintf_r+0x54c>
 8007e98:	9903      	ldr	r1, [sp, #12]
 8007e9a:	9806      	ldr	r0, [sp, #24]
 8007e9c:	aa16      	add	r2, sp, #88	; 0x58
 8007e9e:	f7ff fd29 	bl	80078f4 <__sprint_r>
 8007ea2:	2800      	cmp	r0, #0
 8007ea4:	d000      	beq.n	8007ea8 <_vfiprintf_r+0x54c>
 8007ea6:	e1ee      	b.n	8008286 <_vfiprintf_r+0x92a>
 8007ea8:	2300      	movs	r3, #0
 8007eaa:	9d04      	ldr	r5, [sp, #16]
 8007eac:	9317      	str	r3, [sp, #92]	; 0x5c
 8007eae:	af19      	add	r7, sp, #100	; 0x64
 8007eb0:	e5c6      	b.n	8007a40 <_vfiprintf_r+0xe4>
 8007eb2:	2310      	movs	r3, #16
 8007eb4:	431c      	orrs	r4, r3
 8007eb6:	06a3      	lsls	r3, r4, #26
 8007eb8:	d52b      	bpl.n	8007f12 <_vfiprintf_r+0x5b6>
 8007eba:	2307      	movs	r3, #7
 8007ebc:	3507      	adds	r5, #7
 8007ebe:	439d      	bics	r5, r3
 8007ec0:	0029      	movs	r1, r5
 8007ec2:	c90c      	ldmia	r1!, {r2, r3}
 8007ec4:	9200      	str	r2, [sp, #0]
 8007ec6:	9301      	str	r3, [sp, #4]
 8007ec8:	9104      	str	r1, [sp, #16]
 8007eca:	9a01      	ldr	r2, [sp, #4]
 8007ecc:	2301      	movs	r3, #1
 8007ece:	2a00      	cmp	r2, #0
 8007ed0:	da09      	bge.n	8007ee6 <_vfiprintf_r+0x58a>
 8007ed2:	9d00      	ldr	r5, [sp, #0]
 8007ed4:	9e01      	ldr	r6, [sp, #4]
 8007ed6:	2200      	movs	r2, #0
 8007ed8:	4269      	negs	r1, r5
 8007eda:	41b2      	sbcs	r2, r6
 8007edc:	9100      	str	r1, [sp, #0]
 8007ede:	9201      	str	r2, [sp, #4]
 8007ee0:	212d      	movs	r1, #45	; 0x2d
 8007ee2:	aa14      	add	r2, sp, #80	; 0x50
 8007ee4:	70d1      	strb	r1, [r2, #3]
 8007ee6:	9901      	ldr	r1, [sp, #4]
 8007ee8:	9a00      	ldr	r2, [sp, #0]
 8007eea:	430a      	orrs	r2, r1
 8007eec:	9905      	ldr	r1, [sp, #20]
 8007eee:	3101      	adds	r1, #1
 8007ef0:	d100      	bne.n	8007ef4 <_vfiprintf_r+0x598>
 8007ef2:	e1fc      	b.n	80082ee <_vfiprintf_r+0x992>
 8007ef4:	2180      	movs	r1, #128	; 0x80
 8007ef6:	0020      	movs	r0, r4
 8007ef8:	4388      	bics	r0, r1
 8007efa:	0006      	movs	r6, r0
 8007efc:	2a00      	cmp	r2, #0
 8007efe:	d000      	beq.n	8007f02 <_vfiprintf_r+0x5a6>
 8007f00:	e1f9      	b.n	80082f6 <_vfiprintf_r+0x99a>
 8007f02:	9a05      	ldr	r2, [sp, #20]
 8007f04:	2a00      	cmp	r2, #0
 8007f06:	d100      	bne.n	8007f0a <_vfiprintf_r+0x5ae>
 8007f08:	e149      	b.n	800819e <_vfiprintf_r+0x842>
 8007f0a:	2b01      	cmp	r3, #1
 8007f0c:	d000      	beq.n	8007f10 <_vfiprintf_r+0x5b4>
 8007f0e:	e1f5      	b.n	80082fc <_vfiprintf_r+0x9a0>
 8007f10:	e0ea      	b.n	80080e8 <_vfiprintf_r+0x78c>
 8007f12:	1d2b      	adds	r3, r5, #4
 8007f14:	9304      	str	r3, [sp, #16]
 8007f16:	06e3      	lsls	r3, r4, #27
 8007f18:	d504      	bpl.n	8007f24 <_vfiprintf_r+0x5c8>
 8007f1a:	682b      	ldr	r3, [r5, #0]
 8007f1c:	9300      	str	r3, [sp, #0]
 8007f1e:	17db      	asrs	r3, r3, #31
 8007f20:	9301      	str	r3, [sp, #4]
 8007f22:	e7d2      	b.n	8007eca <_vfiprintf_r+0x56e>
 8007f24:	682b      	ldr	r3, [r5, #0]
 8007f26:	0662      	lsls	r2, r4, #25
 8007f28:	d501      	bpl.n	8007f2e <_vfiprintf_r+0x5d2>
 8007f2a:	b21b      	sxth	r3, r3
 8007f2c:	e7f6      	b.n	8007f1c <_vfiprintf_r+0x5c0>
 8007f2e:	05a2      	lsls	r2, r4, #22
 8007f30:	d5f4      	bpl.n	8007f1c <_vfiprintf_r+0x5c0>
 8007f32:	b25b      	sxtb	r3, r3
 8007f34:	e7f2      	b.n	8007f1c <_vfiprintf_r+0x5c0>
 8007f36:	cd08      	ldmia	r5!, {r3}
 8007f38:	06a2      	lsls	r2, r4, #26
 8007f3a:	d504      	bpl.n	8007f46 <_vfiprintf_r+0x5ea>
 8007f3c:	9a08      	ldr	r2, [sp, #32]
 8007f3e:	601a      	str	r2, [r3, #0]
 8007f40:	17d2      	asrs	r2, r2, #31
 8007f42:	605a      	str	r2, [r3, #4]
 8007f44:	e57c      	b.n	8007a40 <_vfiprintf_r+0xe4>
 8007f46:	06e2      	lsls	r2, r4, #27
 8007f48:	d502      	bpl.n	8007f50 <_vfiprintf_r+0x5f4>
 8007f4a:	9a08      	ldr	r2, [sp, #32]
 8007f4c:	601a      	str	r2, [r3, #0]
 8007f4e:	e577      	b.n	8007a40 <_vfiprintf_r+0xe4>
 8007f50:	0662      	lsls	r2, r4, #25
 8007f52:	d502      	bpl.n	8007f5a <_vfiprintf_r+0x5fe>
 8007f54:	9a08      	ldr	r2, [sp, #32]
 8007f56:	801a      	strh	r2, [r3, #0]
 8007f58:	e572      	b.n	8007a40 <_vfiprintf_r+0xe4>
 8007f5a:	05a2      	lsls	r2, r4, #22
 8007f5c:	d5f5      	bpl.n	8007f4a <_vfiprintf_r+0x5ee>
 8007f5e:	9a08      	ldr	r2, [sp, #32]
 8007f60:	701a      	strb	r2, [r3, #0]
 8007f62:	e56d      	b.n	8007a40 <_vfiprintf_r+0xe4>
 8007f64:	2310      	movs	r3, #16
 8007f66:	431c      	orrs	r4, r3
 8007f68:	2320      	movs	r3, #32
 8007f6a:	0021      	movs	r1, r4
 8007f6c:	4019      	ands	r1, r3
 8007f6e:	421c      	tst	r4, r3
 8007f70:	d00d      	beq.n	8007f8e <_vfiprintf_r+0x632>
 8007f72:	3b19      	subs	r3, #25
 8007f74:	3507      	adds	r5, #7
 8007f76:	439d      	bics	r5, r3
 8007f78:	0029      	movs	r1, r5
 8007f7a:	c90c      	ldmia	r1!, {r2, r3}
 8007f7c:	9200      	str	r2, [sp, #0]
 8007f7e:	9301      	str	r3, [sp, #4]
 8007f80:	9104      	str	r1, [sp, #16]
 8007f82:	4b32      	ldr	r3, [pc, #200]	; (800804c <_vfiprintf_r+0x6f0>)
 8007f84:	401c      	ands	r4, r3
 8007f86:	2300      	movs	r3, #0
 8007f88:	2100      	movs	r1, #0
 8007f8a:	aa14      	add	r2, sp, #80	; 0x50
 8007f8c:	e7aa      	b.n	8007ee4 <_vfiprintf_r+0x588>
 8007f8e:	1d2b      	adds	r3, r5, #4
 8007f90:	0022      	movs	r2, r4
 8007f92:	9304      	str	r3, [sp, #16]
 8007f94:	2310      	movs	r3, #16
 8007f96:	401a      	ands	r2, r3
 8007f98:	421c      	tst	r4, r3
 8007f9a:	d003      	beq.n	8007fa4 <_vfiprintf_r+0x648>
 8007f9c:	682b      	ldr	r3, [r5, #0]
 8007f9e:	9300      	str	r3, [sp, #0]
 8007fa0:	9101      	str	r1, [sp, #4]
 8007fa2:	e7ee      	b.n	8007f82 <_vfiprintf_r+0x626>
 8007fa4:	2340      	movs	r3, #64	; 0x40
 8007fa6:	0021      	movs	r1, r4
 8007fa8:	4019      	ands	r1, r3
 8007faa:	421c      	tst	r4, r3
 8007fac:	d004      	beq.n	8007fb8 <_vfiprintf_r+0x65c>
 8007fae:	682b      	ldr	r3, [r5, #0]
 8007fb0:	b29b      	uxth	r3, r3
 8007fb2:	9300      	str	r3, [sp, #0]
 8007fb4:	9201      	str	r2, [sp, #4]
 8007fb6:	e7e4      	b.n	8007f82 <_vfiprintf_r+0x626>
 8007fb8:	2380      	movs	r3, #128	; 0x80
 8007fba:	0022      	movs	r2, r4
 8007fbc:	009b      	lsls	r3, r3, #2
 8007fbe:	401a      	ands	r2, r3
 8007fc0:	421c      	tst	r4, r3
 8007fc2:	d002      	beq.n	8007fca <_vfiprintf_r+0x66e>
 8007fc4:	682b      	ldr	r3, [r5, #0]
 8007fc6:	b2db      	uxtb	r3, r3
 8007fc8:	e7e9      	b.n	8007f9e <_vfiprintf_r+0x642>
 8007fca:	682b      	ldr	r3, [r5, #0]
 8007fcc:	e7f1      	b.n	8007fb2 <_vfiprintf_r+0x656>
 8007fce:	002b      	movs	r3, r5
 8007fd0:	cb04      	ldmia	r3!, {r2}
 8007fd2:	491f      	ldr	r1, [pc, #124]	; (8008050 <_vfiprintf_r+0x6f4>)
 8007fd4:	9304      	str	r3, [sp, #16]
 8007fd6:	2300      	movs	r3, #0
 8007fd8:	9200      	str	r2, [sp, #0]
 8007fda:	aa15      	add	r2, sp, #84	; 0x54
 8007fdc:	8011      	strh	r1, [r2, #0]
 8007fde:	4a1d      	ldr	r2, [pc, #116]	; (8008054 <_vfiprintf_r+0x6f8>)
 8007fe0:	9301      	str	r3, [sp, #4]
 8007fe2:	3302      	adds	r3, #2
 8007fe4:	431c      	orrs	r4, r3
 8007fe6:	920c      	str	r2, [sp, #48]	; 0x30
 8007fe8:	e7ce      	b.n	8007f88 <_vfiprintf_r+0x62c>
 8007fea:	002b      	movs	r3, r5
 8007fec:	2200      	movs	r2, #0
 8007fee:	cb20      	ldmia	r3!, {r5}
 8007ff0:	9304      	str	r3, [sp, #16]
 8007ff2:	ab14      	add	r3, sp, #80	; 0x50
 8007ff4:	70da      	strb	r2, [r3, #3]
 8007ff6:	9b05      	ldr	r3, [sp, #20]
 8007ff8:	3301      	adds	r3, #1
 8007ffa:	d00d      	beq.n	8008018 <_vfiprintf_r+0x6bc>
 8007ffc:	2100      	movs	r1, #0
 8007ffe:	0028      	movs	r0, r5
 8008000:	9a05      	ldr	r2, [sp, #20]
 8008002:	f7ff f855 	bl	80070b0 <memchr>
 8008006:	900b      	str	r0, [sp, #44]	; 0x2c
 8008008:	2800      	cmp	r0, #0
 800800a:	d100      	bne.n	800800e <_vfiprintf_r+0x6b2>
 800800c:	e662      	b.n	8007cd4 <_vfiprintf_r+0x378>
 800800e:	1b43      	subs	r3, r0, r5
 8008010:	9305      	str	r3, [sp, #20]
 8008012:	2300      	movs	r3, #0
 8008014:	930b      	str	r3, [sp, #44]	; 0x2c
 8008016:	e65d      	b.n	8007cd4 <_vfiprintf_r+0x378>
 8008018:	0028      	movs	r0, r5
 800801a:	f7f8 f871 	bl	8000100 <strlen>
 800801e:	9005      	str	r0, [sp, #20]
 8008020:	e7f7      	b.n	8008012 <_vfiprintf_r+0x6b6>
 8008022:	2310      	movs	r3, #16
 8008024:	431c      	orrs	r4, r3
 8008026:	2320      	movs	r3, #32
 8008028:	0021      	movs	r1, r4
 800802a:	4019      	ands	r1, r3
 800802c:	421c      	tst	r4, r3
 800802e:	d013      	beq.n	8008058 <_vfiprintf_r+0x6fc>
 8008030:	3b19      	subs	r3, #25
 8008032:	3507      	adds	r5, #7
 8008034:	439d      	bics	r5, r3
 8008036:	0029      	movs	r1, r5
 8008038:	c90c      	ldmia	r1!, {r2, r3}
 800803a:	9200      	str	r2, [sp, #0]
 800803c:	9301      	str	r3, [sp, #4]
 800803e:	9104      	str	r1, [sp, #16]
 8008040:	2301      	movs	r3, #1
 8008042:	e7a1      	b.n	8007f88 <_vfiprintf_r+0x62c>
 8008044:	08009304 	.word	0x08009304
 8008048:	08009314 	.word	0x08009314
 800804c:	fffffbff 	.word	0xfffffbff
 8008050:	00007830 	.word	0x00007830
 8008054:	080090e0 	.word	0x080090e0
 8008058:	1d2b      	adds	r3, r5, #4
 800805a:	0022      	movs	r2, r4
 800805c:	9304      	str	r3, [sp, #16]
 800805e:	2310      	movs	r3, #16
 8008060:	401a      	ands	r2, r3
 8008062:	421c      	tst	r4, r3
 8008064:	d003      	beq.n	800806e <_vfiprintf_r+0x712>
 8008066:	682b      	ldr	r3, [r5, #0]
 8008068:	9300      	str	r3, [sp, #0]
 800806a:	9101      	str	r1, [sp, #4]
 800806c:	e7e8      	b.n	8008040 <_vfiprintf_r+0x6e4>
 800806e:	2340      	movs	r3, #64	; 0x40
 8008070:	0021      	movs	r1, r4
 8008072:	4019      	ands	r1, r3
 8008074:	421c      	tst	r4, r3
 8008076:	d004      	beq.n	8008082 <_vfiprintf_r+0x726>
 8008078:	682b      	ldr	r3, [r5, #0]
 800807a:	b29b      	uxth	r3, r3
 800807c:	9300      	str	r3, [sp, #0]
 800807e:	9201      	str	r2, [sp, #4]
 8008080:	e7de      	b.n	8008040 <_vfiprintf_r+0x6e4>
 8008082:	2380      	movs	r3, #128	; 0x80
 8008084:	0022      	movs	r2, r4
 8008086:	009b      	lsls	r3, r3, #2
 8008088:	401a      	ands	r2, r3
 800808a:	421c      	tst	r4, r3
 800808c:	d002      	beq.n	8008094 <_vfiprintf_r+0x738>
 800808e:	682b      	ldr	r3, [r5, #0]
 8008090:	b2db      	uxtb	r3, r3
 8008092:	e7e9      	b.n	8008068 <_vfiprintf_r+0x70c>
 8008094:	682b      	ldr	r3, [r5, #0]
 8008096:	e7f1      	b.n	800807c <_vfiprintf_r+0x720>
 8008098:	4aad      	ldr	r2, [pc, #692]	; (8008350 <_vfiprintf_r+0x9f4>)
 800809a:	e56f      	b.n	8007b7c <_vfiprintf_r+0x220>
 800809c:	1d2a      	adds	r2, r5, #4
 800809e:	0021      	movs	r1, r4
 80080a0:	9204      	str	r2, [sp, #16]
 80080a2:	2210      	movs	r2, #16
 80080a4:	4011      	ands	r1, r2
 80080a6:	4214      	tst	r4, r2
 80080a8:	d003      	beq.n	80080b2 <_vfiprintf_r+0x756>
 80080aa:	682a      	ldr	r2, [r5, #0]
 80080ac:	9200      	str	r2, [sp, #0]
 80080ae:	9001      	str	r0, [sp, #4]
 80080b0:	e573      	b.n	8007b9a <_vfiprintf_r+0x23e>
 80080b2:	2240      	movs	r2, #64	; 0x40
 80080b4:	0020      	movs	r0, r4
 80080b6:	4010      	ands	r0, r2
 80080b8:	4214      	tst	r4, r2
 80080ba:	d004      	beq.n	80080c6 <_vfiprintf_r+0x76a>
 80080bc:	682a      	ldr	r2, [r5, #0]
 80080be:	b292      	uxth	r2, r2
 80080c0:	9200      	str	r2, [sp, #0]
 80080c2:	9101      	str	r1, [sp, #4]
 80080c4:	e569      	b.n	8007b9a <_vfiprintf_r+0x23e>
 80080c6:	2280      	movs	r2, #128	; 0x80
 80080c8:	0021      	movs	r1, r4
 80080ca:	0092      	lsls	r2, r2, #2
 80080cc:	4011      	ands	r1, r2
 80080ce:	4214      	tst	r4, r2
 80080d0:	d002      	beq.n	80080d8 <_vfiprintf_r+0x77c>
 80080d2:	682a      	ldr	r2, [r5, #0]
 80080d4:	b2d2      	uxtb	r2, r2
 80080d6:	e7e9      	b.n	80080ac <_vfiprintf_r+0x750>
 80080d8:	682a      	ldr	r2, [r5, #0]
 80080da:	e7f1      	b.n	80080c0 <_vfiprintf_r+0x764>
 80080dc:	9b01      	ldr	r3, [sp, #4]
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d109      	bne.n	80080f6 <_vfiprintf_r+0x79a>
 80080e2:	9b00      	ldr	r3, [sp, #0]
 80080e4:	2b09      	cmp	r3, #9
 80080e6:	d806      	bhi.n	80080f6 <_vfiprintf_r+0x79a>
 80080e8:	25b7      	movs	r5, #183	; 0xb7
 80080ea:	ab14      	add	r3, sp, #80	; 0x50
 80080ec:	18ed      	adds	r5, r5, r3
 80080ee:	9b00      	ldr	r3, [sp, #0]
 80080f0:	3330      	adds	r3, #48	; 0x30
 80080f2:	702b      	strb	r3, [r5, #0]
 80080f4:	e125      	b.n	8008342 <_vfiprintf_r+0x9e6>
 80080f6:	2380      	movs	r3, #128	; 0x80
 80080f8:	0032      	movs	r2, r6
 80080fa:	2400      	movs	r4, #0
 80080fc:	00db      	lsls	r3, r3, #3
 80080fe:	401a      	ands	r2, r3
 8008100:	ad42      	add	r5, sp, #264	; 0x108
 8008102:	920a      	str	r2, [sp, #40]	; 0x28
 8008104:	220a      	movs	r2, #10
 8008106:	9800      	ldr	r0, [sp, #0]
 8008108:	9901      	ldr	r1, [sp, #4]
 800810a:	2300      	movs	r3, #0
 800810c:	f7f8 f9c8 	bl	80004a0 <__aeabi_uldivmod>
 8008110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008112:	3d01      	subs	r5, #1
 8008114:	3230      	adds	r2, #48	; 0x30
 8008116:	702a      	strb	r2, [r5, #0]
 8008118:	3401      	adds	r4, #1
 800811a:	2b00      	cmp	r3, #0
 800811c:	d01a      	beq.n	8008154 <_vfiprintf_r+0x7f8>
 800811e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008120:	781b      	ldrb	r3, [r3, #0]
 8008122:	42a3      	cmp	r3, r4
 8008124:	d116      	bne.n	8008154 <_vfiprintf_r+0x7f8>
 8008126:	2cff      	cmp	r4, #255	; 0xff
 8008128:	d014      	beq.n	8008154 <_vfiprintf_r+0x7f8>
 800812a:	9b01      	ldr	r3, [sp, #4]
 800812c:	2b00      	cmp	r3, #0
 800812e:	d102      	bne.n	8008136 <_vfiprintf_r+0x7da>
 8008130:	9b00      	ldr	r3, [sp, #0]
 8008132:	2b09      	cmp	r3, #9
 8008134:	d90e      	bls.n	8008154 <_vfiprintf_r+0x7f8>
 8008136:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008138:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800813a:	1aed      	subs	r5, r5, r3
 800813c:	001a      	movs	r2, r3
 800813e:	0028      	movs	r0, r5
 8008140:	f7ff fbb8 	bl	80078b4 <strncpy>
 8008144:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008146:	2400      	movs	r4, #0
 8008148:	785b      	ldrb	r3, [r3, #1]
 800814a:	1e5a      	subs	r2, r3, #1
 800814c:	4193      	sbcs	r3, r2
 800814e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008150:	18d3      	adds	r3, r2, r3
 8008152:	930d      	str	r3, [sp, #52]	; 0x34
 8008154:	2300      	movs	r3, #0
 8008156:	9800      	ldr	r0, [sp, #0]
 8008158:	9901      	ldr	r1, [sp, #4]
 800815a:	220a      	movs	r2, #10
 800815c:	f7f8 f9a0 	bl	80004a0 <__aeabi_uldivmod>
 8008160:	9b01      	ldr	r3, [sp, #4]
 8008162:	2b00      	cmp	r3, #0
 8008164:	d103      	bne.n	800816e <_vfiprintf_r+0x812>
 8008166:	9b00      	ldr	r3, [sp, #0]
 8008168:	2b09      	cmp	r3, #9
 800816a:	d800      	bhi.n	800816e <_vfiprintf_r+0x812>
 800816c:	e0e9      	b.n	8008342 <_vfiprintf_r+0x9e6>
 800816e:	9000      	str	r0, [sp, #0]
 8008170:	9101      	str	r1, [sp, #4]
 8008172:	e7c7      	b.n	8008104 <_vfiprintf_r+0x7a8>
 8008174:	200f      	movs	r0, #15
 8008176:	9b00      	ldr	r3, [sp, #0]
 8008178:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800817a:	4003      	ands	r3, r0
 800817c:	5cd3      	ldrb	r3, [r2, r3]
 800817e:	3d01      	subs	r5, #1
 8008180:	702b      	strb	r3, [r5, #0]
 8008182:	9b01      	ldr	r3, [sp, #4]
 8008184:	0719      	lsls	r1, r3, #28
 8008186:	9b00      	ldr	r3, [sp, #0]
 8008188:	091a      	lsrs	r2, r3, #4
 800818a:	9b01      	ldr	r3, [sp, #4]
 800818c:	4311      	orrs	r1, r2
 800818e:	091b      	lsrs	r3, r3, #4
 8008190:	9301      	str	r3, [sp, #4]
 8008192:	000b      	movs	r3, r1
 8008194:	9a01      	ldr	r2, [sp, #4]
 8008196:	9100      	str	r1, [sp, #0]
 8008198:	4313      	orrs	r3, r2
 800819a:	d1ec      	bne.n	8008176 <_vfiprintf_r+0x81a>
 800819c:	e0d1      	b.n	8008342 <_vfiprintf_r+0x9e6>
 800819e:	ad42      	add	r5, sp, #264	; 0x108
 80081a0:	2b00      	cmp	r3, #0
 80081a2:	d000      	beq.n	80081a6 <_vfiprintf_r+0x84a>
 80081a4:	e0cd      	b.n	8008342 <_vfiprintf_r+0x9e6>
 80081a6:	07e3      	lsls	r3, r4, #31
 80081a8:	d400      	bmi.n	80081ac <_vfiprintf_r+0x850>
 80081aa:	e0ca      	b.n	8008342 <_vfiprintf_r+0x9e6>
 80081ac:	25b7      	movs	r5, #183	; 0xb7
 80081ae:	ab14      	add	r3, sp, #80	; 0x50
 80081b0:	18ed      	adds	r5, r5, r3
 80081b2:	2330      	movs	r3, #48	; 0x30
 80081b4:	e79d      	b.n	80080f2 <_vfiprintf_r+0x796>
 80081b6:	2b00      	cmp	r3, #0
 80081b8:	d100      	bne.n	80081bc <_vfiprintf_r+0x860>
 80081ba:	e089      	b.n	80082d0 <_vfiprintf_r+0x974>
 80081bc:	2100      	movs	r1, #0
 80081be:	aa29      	add	r2, sp, #164	; 0xa4
 80081c0:	7013      	strb	r3, [r2, #0]
 80081c2:	ab14      	add	r3, sp, #80	; 0x50
 80081c4:	70d9      	strb	r1, [r3, #3]
 80081c6:	2301      	movs	r3, #1
 80081c8:	9504      	str	r5, [sp, #16]
 80081ca:	9305      	str	r3, [sp, #20]
 80081cc:	0015      	movs	r5, r2
 80081ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80081d0:	e580      	b.n	8007cd4 <_vfiprintf_r+0x378>
 80081d2:	2010      	movs	r0, #16
 80081d4:	1812      	adds	r2, r2, r0
 80081d6:	6078      	str	r0, [r7, #4]
 80081d8:	9218      	str	r2, [sp, #96]	; 0x60
 80081da:	9317      	str	r3, [sp, #92]	; 0x5c
 80081dc:	2b07      	cmp	r3, #7
 80081de:	dd07      	ble.n	80081f0 <_vfiprintf_r+0x894>
 80081e0:	9903      	ldr	r1, [sp, #12]
 80081e2:	9806      	ldr	r0, [sp, #24]
 80081e4:	aa16      	add	r2, sp, #88	; 0x58
 80081e6:	f7ff fb85 	bl	80078f4 <__sprint_r>
 80081ea:	2800      	cmp	r0, #0
 80081ec:	d14b      	bne.n	8008286 <_vfiprintf_r+0x92a>
 80081ee:	a919      	add	r1, sp, #100	; 0x64
 80081f0:	0033      	movs	r3, r6
 80081f2:	3b10      	subs	r3, #16
 80081f4:	001e      	movs	r6, r3
 80081f6:	000f      	movs	r7, r1
 80081f8:	e58e      	b.n	8007d18 <_vfiprintf_r+0x3bc>
 80081fa:	2010      	movs	r0, #16
 80081fc:	1812      	adds	r2, r2, r0
 80081fe:	6078      	str	r0, [r7, #4]
 8008200:	9218      	str	r2, [sp, #96]	; 0x60
 8008202:	9317      	str	r3, [sp, #92]	; 0x5c
 8008204:	2b07      	cmp	r3, #7
 8008206:	dd07      	ble.n	8008218 <_vfiprintf_r+0x8bc>
 8008208:	9903      	ldr	r1, [sp, #12]
 800820a:	9806      	ldr	r0, [sp, #24]
 800820c:	aa16      	add	r2, sp, #88	; 0x58
 800820e:	f7ff fb71 	bl	80078f4 <__sprint_r>
 8008212:	2800      	cmp	r0, #0
 8008214:	d137      	bne.n	8008286 <_vfiprintf_r+0x92a>
 8008216:	a919      	add	r1, sp, #100	; 0x64
 8008218:	0033      	movs	r3, r6
 800821a:	3b10      	subs	r3, #16
 800821c:	001e      	movs	r6, r3
 800821e:	000f      	movs	r7, r1
 8008220:	e5d6      	b.n	8007dd0 <_vfiprintf_r+0x474>
 8008222:	2010      	movs	r0, #16
 8008224:	1812      	adds	r2, r2, r0
 8008226:	6078      	str	r0, [r7, #4]
 8008228:	9218      	str	r2, [sp, #96]	; 0x60
 800822a:	9317      	str	r3, [sp, #92]	; 0x5c
 800822c:	2b07      	cmp	r3, #7
 800822e:	dd07      	ble.n	8008240 <_vfiprintf_r+0x8e4>
 8008230:	9903      	ldr	r1, [sp, #12]
 8008232:	9806      	ldr	r0, [sp, #24]
 8008234:	aa16      	add	r2, sp, #88	; 0x58
 8008236:	f7ff fb5d 	bl	80078f4 <__sprint_r>
 800823a:	2800      	cmp	r0, #0
 800823c:	d123      	bne.n	8008286 <_vfiprintf_r+0x92a>
 800823e:	a919      	add	r1, sp, #100	; 0x64
 8008240:	0033      	movs	r3, r6
 8008242:	3b10      	subs	r3, #16
 8008244:	001e      	movs	r6, r3
 8008246:	000f      	movs	r7, r1
 8008248:	e5e2      	b.n	8007e10 <_vfiprintf_r+0x4b4>
 800824a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800824c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800824e:	2510      	movs	r5, #16
 8008250:	1a9c      	subs	r4, r3, r2
 8008252:	2c00      	cmp	r4, #0
 8008254:	dc00      	bgt.n	8008258 <_vfiprintf_r+0x8fc>
 8008256:	e613      	b.n	8007e80 <_vfiprintf_r+0x524>
 8008258:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800825a:	483e      	ldr	r0, [pc, #248]	; (8008354 <_vfiprintf_r+0x9f8>)
 800825c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800825e:	9305      	str	r3, [sp, #20]
 8008260:	1c5a      	adds	r2, r3, #1
 8008262:	6038      	str	r0, [r7, #0]
 8008264:	2c10      	cmp	r4, #16
 8008266:	dc22      	bgt.n	80082ae <_vfiprintf_r+0x952>
 8008268:	607c      	str	r4, [r7, #4]
 800826a:	190c      	adds	r4, r1, r4
 800826c:	9418      	str	r4, [sp, #96]	; 0x60
 800826e:	9217      	str	r2, [sp, #92]	; 0x5c
 8008270:	2a07      	cmp	r2, #7
 8008272:	dc00      	bgt.n	8008276 <_vfiprintf_r+0x91a>
 8008274:	e604      	b.n	8007e80 <_vfiprintf_r+0x524>
 8008276:	9903      	ldr	r1, [sp, #12]
 8008278:	9806      	ldr	r0, [sp, #24]
 800827a:	aa16      	add	r2, sp, #88	; 0x58
 800827c:	f7ff fb3a 	bl	80078f4 <__sprint_r>
 8008280:	2800      	cmp	r0, #0
 8008282:	d100      	bne.n	8008286 <_vfiprintf_r+0x92a>
 8008284:	e5fc      	b.n	8007e80 <_vfiprintf_r+0x524>
 8008286:	9b03      	ldr	r3, [sp, #12]
 8008288:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800828a:	07db      	lsls	r3, r3, #31
 800828c:	d407      	bmi.n	800829e <_vfiprintf_r+0x942>
 800828e:	9b03      	ldr	r3, [sp, #12]
 8008290:	899b      	ldrh	r3, [r3, #12]
 8008292:	059b      	lsls	r3, r3, #22
 8008294:	d403      	bmi.n	800829e <_vfiprintf_r+0x942>
 8008296:	9b03      	ldr	r3, [sp, #12]
 8008298:	6d98      	ldr	r0, [r3, #88]	; 0x58
 800829a:	f7fe fc80 	bl	8006b9e <__retarget_lock_release_recursive>
 800829e:	9b03      	ldr	r3, [sp, #12]
 80082a0:	899b      	ldrh	r3, [r3, #12]
 80082a2:	065b      	lsls	r3, r3, #25
 80082a4:	d401      	bmi.n	80082aa <_vfiprintf_r+0x94e>
 80082a6:	f7ff fb98 	bl	80079da <_vfiprintf_r+0x7e>
 80082aa:	f7ff fb93 	bl	80079d4 <_vfiprintf_r+0x78>
 80082ae:	3110      	adds	r1, #16
 80082b0:	607d      	str	r5, [r7, #4]
 80082b2:	9118      	str	r1, [sp, #96]	; 0x60
 80082b4:	9217      	str	r2, [sp, #92]	; 0x5c
 80082b6:	3708      	adds	r7, #8
 80082b8:	2a07      	cmp	r2, #7
 80082ba:	dd07      	ble.n	80082cc <_vfiprintf_r+0x970>
 80082bc:	9903      	ldr	r1, [sp, #12]
 80082be:	9806      	ldr	r0, [sp, #24]
 80082c0:	aa16      	add	r2, sp, #88	; 0x58
 80082c2:	f7ff fb17 	bl	80078f4 <__sprint_r>
 80082c6:	2800      	cmp	r0, #0
 80082c8:	d1dd      	bne.n	8008286 <_vfiprintf_r+0x92a>
 80082ca:	af19      	add	r7, sp, #100	; 0x64
 80082cc:	3c10      	subs	r4, #16
 80082ce:	e7c3      	b.n	8008258 <_vfiprintf_r+0x8fc>
 80082d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80082d2:	9300      	str	r3, [sp, #0]
 80082d4:	2b00      	cmp	r3, #0
 80082d6:	d102      	bne.n	80082de <_vfiprintf_r+0x982>
 80082d8:	2300      	movs	r3, #0
 80082da:	9317      	str	r3, [sp, #92]	; 0x5c
 80082dc:	e7d3      	b.n	8008286 <_vfiprintf_r+0x92a>
 80082de:	9903      	ldr	r1, [sp, #12]
 80082e0:	9806      	ldr	r0, [sp, #24]
 80082e2:	aa16      	add	r2, sp, #88	; 0x58
 80082e4:	f7ff fb06 	bl	80078f4 <__sprint_r>
 80082e8:	2800      	cmp	r0, #0
 80082ea:	d0f5      	beq.n	80082d8 <_vfiprintf_r+0x97c>
 80082ec:	e7cb      	b.n	8008286 <_vfiprintf_r+0x92a>
 80082ee:	0026      	movs	r6, r4
 80082f0:	2a00      	cmp	r2, #0
 80082f2:	d100      	bne.n	80082f6 <_vfiprintf_r+0x99a>
 80082f4:	e609      	b.n	8007f0a <_vfiprintf_r+0x5ae>
 80082f6:	2b01      	cmp	r3, #1
 80082f8:	d100      	bne.n	80082fc <_vfiprintf_r+0x9a0>
 80082fa:	e6ef      	b.n	80080dc <_vfiprintf_r+0x780>
 80082fc:	ad42      	add	r5, sp, #264	; 0x108
 80082fe:	2b02      	cmp	r3, #2
 8008300:	d100      	bne.n	8008304 <_vfiprintf_r+0x9a8>
 8008302:	e737      	b.n	8008174 <_vfiprintf_r+0x818>
 8008304:	2307      	movs	r3, #7
 8008306:	469c      	mov	ip, r3
 8008308:	4663      	mov	r3, ip
 800830a:	9900      	ldr	r1, [sp, #0]
 800830c:	002a      	movs	r2, r5
 800830e:	400b      	ands	r3, r1
 8008310:	9901      	ldr	r1, [sp, #4]
 8008312:	3d01      	subs	r5, #1
 8008314:	074c      	lsls	r4, r1, #29
 8008316:	9900      	ldr	r1, [sp, #0]
 8008318:	3330      	adds	r3, #48	; 0x30
 800831a:	08c8      	lsrs	r0, r1, #3
 800831c:	9901      	ldr	r1, [sp, #4]
 800831e:	4304      	orrs	r4, r0
 8008320:	08c9      	lsrs	r1, r1, #3
 8008322:	9101      	str	r1, [sp, #4]
 8008324:	0021      	movs	r1, r4
 8008326:	9801      	ldr	r0, [sp, #4]
 8008328:	702b      	strb	r3, [r5, #0]
 800832a:	9400      	str	r4, [sp, #0]
 800832c:	4301      	orrs	r1, r0
 800832e:	d1eb      	bne.n	8008308 <_vfiprintf_r+0x9ac>
 8008330:	0031      	movs	r1, r6
 8008332:	07c9      	lsls	r1, r1, #31
 8008334:	d505      	bpl.n	8008342 <_vfiprintf_r+0x9e6>
 8008336:	2b30      	cmp	r3, #48	; 0x30
 8008338:	d003      	beq.n	8008342 <_vfiprintf_r+0x9e6>
 800833a:	2330      	movs	r3, #48	; 0x30
 800833c:	3d01      	subs	r5, #1
 800833e:	702b      	strb	r3, [r5, #0]
 8008340:	1e95      	subs	r5, r2, #2
 8008342:	9b05      	ldr	r3, [sp, #20]
 8008344:	0034      	movs	r4, r6
 8008346:	930b      	str	r3, [sp, #44]	; 0x2c
 8008348:	ab42      	add	r3, sp, #264	; 0x108
 800834a:	1b5b      	subs	r3, r3, r5
 800834c:	9305      	str	r3, [sp, #20]
 800834e:	e4c1      	b.n	8007cd4 <_vfiprintf_r+0x378>
 8008350:	080090f1 	.word	0x080090f1
 8008354:	08009304 	.word	0x08009304

08008358 <__sbprintf>:
 8008358:	b5f0      	push	{r4, r5, r6, r7, lr}
 800835a:	0015      	movs	r5, r2
 800835c:	2202      	movs	r2, #2
 800835e:	4c1e      	ldr	r4, [pc, #120]	; (80083d8 <__sbprintf+0x80>)
 8008360:	001f      	movs	r7, r3
 8008362:	898b      	ldrh	r3, [r1, #12]
 8008364:	44a5      	add	sp, r4
 8008366:	4393      	bics	r3, r2
 8008368:	466a      	mov	r2, sp
 800836a:	8193      	strh	r3, [r2, #12]
 800836c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800836e:	0006      	movs	r6, r0
 8008370:	9319      	str	r3, [sp, #100]	; 0x64
 8008372:	89cb      	ldrh	r3, [r1, #14]
 8008374:	a816      	add	r0, sp, #88	; 0x58
 8008376:	81d3      	strh	r3, [r2, #14]
 8008378:	69cb      	ldr	r3, [r1, #28]
 800837a:	000c      	movs	r4, r1
 800837c:	9307      	str	r3, [sp, #28]
 800837e:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8008380:	9309      	str	r3, [sp, #36]	; 0x24
 8008382:	ab1a      	add	r3, sp, #104	; 0x68
 8008384:	9300      	str	r3, [sp, #0]
 8008386:	9304      	str	r3, [sp, #16]
 8008388:	2380      	movs	r3, #128	; 0x80
 800838a:	00db      	lsls	r3, r3, #3
 800838c:	9302      	str	r3, [sp, #8]
 800838e:	9305      	str	r3, [sp, #20]
 8008390:	2300      	movs	r3, #0
 8008392:	9306      	str	r3, [sp, #24]
 8008394:	f7fe fc00 	bl	8006b98 <__retarget_lock_init_recursive>
 8008398:	002a      	movs	r2, r5
 800839a:	003b      	movs	r3, r7
 800839c:	4669      	mov	r1, sp
 800839e:	0030      	movs	r0, r6
 80083a0:	f7ff fadc 	bl	800795c <_vfiprintf_r>
 80083a4:	1e05      	subs	r5, r0, #0
 80083a6:	db07      	blt.n	80083b8 <__sbprintf+0x60>
 80083a8:	4669      	mov	r1, sp
 80083aa:	0030      	movs	r0, r6
 80083ac:	f7fe fa14 	bl	80067d8 <_fflush_r>
 80083b0:	2800      	cmp	r0, #0
 80083b2:	d001      	beq.n	80083b8 <__sbprintf+0x60>
 80083b4:	2501      	movs	r5, #1
 80083b6:	426d      	negs	r5, r5
 80083b8:	466b      	mov	r3, sp
 80083ba:	899a      	ldrh	r2, [r3, #12]
 80083bc:	2340      	movs	r3, #64	; 0x40
 80083be:	421a      	tst	r2, r3
 80083c0:	d002      	beq.n	80083c8 <__sbprintf+0x70>
 80083c2:	89a2      	ldrh	r2, [r4, #12]
 80083c4:	4313      	orrs	r3, r2
 80083c6:	81a3      	strh	r3, [r4, #12]
 80083c8:	9816      	ldr	r0, [sp, #88]	; 0x58
 80083ca:	f7fe fbe6 	bl	8006b9a <__retarget_lock_close_recursive>
 80083ce:	0028      	movs	r0, r5
 80083d0:	4b02      	ldr	r3, [pc, #8]	; (80083dc <__sbprintf+0x84>)
 80083d2:	449d      	add	sp, r3
 80083d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80083d6:	46c0      	nop			; (mov r8, r8)
 80083d8:	fffffb94 	.word	0xfffffb94
 80083dc:	0000046c 	.word	0x0000046c

080083e0 <_write_r>:
 80083e0:	b570      	push	{r4, r5, r6, lr}
 80083e2:	0004      	movs	r4, r0
 80083e4:	0008      	movs	r0, r1
 80083e6:	0011      	movs	r1, r2
 80083e8:	001a      	movs	r2, r3
 80083ea:	2300      	movs	r3, #0
 80083ec:	4d05      	ldr	r5, [pc, #20]	; (8008404 <_write_r+0x24>)
 80083ee:	602b      	str	r3, [r5, #0]
 80083f0:	f7fa f8a3 	bl	800253a <_write>
 80083f4:	1c43      	adds	r3, r0, #1
 80083f6:	d103      	bne.n	8008400 <_write_r+0x20>
 80083f8:	682b      	ldr	r3, [r5, #0]
 80083fa:	2b00      	cmp	r3, #0
 80083fc:	d000      	beq.n	8008400 <_write_r+0x20>
 80083fe:	6023      	str	r3, [r4, #0]
 8008400:	bd70      	pop	{r4, r5, r6, pc}
 8008402:	46c0      	nop			; (mov r8, r8)
 8008404:	20000ae4 	.word	0x20000ae4

08008408 <__register_exitproc>:
 8008408:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800840a:	4f1e      	ldr	r7, [pc, #120]	; (8008484 <__register_exitproc+0x7c>)
 800840c:	0004      	movs	r4, r0
 800840e:	6838      	ldr	r0, [r7, #0]
 8008410:	0016      	movs	r6, r2
 8008412:	9100      	str	r1, [sp, #0]
 8008414:	9301      	str	r3, [sp, #4]
 8008416:	f7fe fbc1 	bl	8006b9c <__retarget_lock_acquire_recursive>
 800841a:	4b1b      	ldr	r3, [pc, #108]	; (8008488 <__register_exitproc+0x80>)
 800841c:	6819      	ldr	r1, [r3, #0]
 800841e:	000b      	movs	r3, r1
 8008420:	33fc      	adds	r3, #252	; 0xfc
 8008422:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8008424:	2a00      	cmp	r2, #0
 8008426:	d103      	bne.n	8008430 <__register_exitproc+0x28>
 8008428:	000a      	movs	r2, r1
 800842a:	324d      	adds	r2, #77	; 0x4d
 800842c:	32ff      	adds	r2, #255	; 0xff
 800842e:	64da      	str	r2, [r3, #76]	; 0x4c
 8008430:	6853      	ldr	r3, [r2, #4]
 8008432:	6838      	ldr	r0, [r7, #0]
 8008434:	2b1f      	cmp	r3, #31
 8008436:	dd04      	ble.n	8008442 <__register_exitproc+0x3a>
 8008438:	f7fe fbb1 	bl	8006b9e <__retarget_lock_release_recursive>
 800843c:	2001      	movs	r0, #1
 800843e:	4240      	negs	r0, r0
 8008440:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008442:	2c00      	cmp	r4, #0
 8008444:	d014      	beq.n	8008470 <__register_exitproc+0x68>
 8008446:	0099      	lsls	r1, r3, #2
 8008448:	1851      	adds	r1, r2, r1
 800844a:	000f      	movs	r7, r1
 800844c:	3788      	adds	r7, #136	; 0x88
 800844e:	603e      	str	r6, [r7, #0]
 8008450:	2701      	movs	r7, #1
 8008452:	0016      	movs	r6, r2
 8008454:	409f      	lsls	r7, r3
 8008456:	3685      	adds	r6, #133	; 0x85
 8008458:	36ff      	adds	r6, #255	; 0xff
 800845a:	6875      	ldr	r5, [r6, #4]
 800845c:	31fc      	adds	r1, #252	; 0xfc
 800845e:	433d      	orrs	r5, r7
 8008460:	6075      	str	r5, [r6, #4]
 8008462:	9d01      	ldr	r5, [sp, #4]
 8008464:	60cd      	str	r5, [r1, #12]
 8008466:	2c02      	cmp	r4, #2
 8008468:	d102      	bne.n	8008470 <__register_exitproc+0x68>
 800846a:	68b1      	ldr	r1, [r6, #8]
 800846c:	430f      	orrs	r7, r1
 800846e:	60b7      	str	r7, [r6, #8]
 8008470:	1c59      	adds	r1, r3, #1
 8008472:	6051      	str	r1, [r2, #4]
 8008474:	3302      	adds	r3, #2
 8008476:	9900      	ldr	r1, [sp, #0]
 8008478:	009b      	lsls	r3, r3, #2
 800847a:	5099      	str	r1, [r3, r2]
 800847c:	f7fe fb8f 	bl	8006b9e <__retarget_lock_release_recursive>
 8008480:	2000      	movs	r0, #0
 8008482:	e7dd      	b.n	8008440 <__register_exitproc+0x38>
 8008484:	20000438 	.word	0x20000438
 8008488:	080090cc 	.word	0x080090cc

0800848c <__assert_func>:
 800848c:	b530      	push	{r4, r5, lr}
 800848e:	0014      	movs	r4, r2
 8008490:	001a      	movs	r2, r3
 8008492:	4b09      	ldr	r3, [pc, #36]	; (80084b8 <__assert_func+0x2c>)
 8008494:	0005      	movs	r5, r0
 8008496:	681b      	ldr	r3, [r3, #0]
 8008498:	b085      	sub	sp, #20
 800849a:	68d8      	ldr	r0, [r3, #12]
 800849c:	4b07      	ldr	r3, [pc, #28]	; (80084bc <__assert_func+0x30>)
 800849e:	2c00      	cmp	r4, #0
 80084a0:	d101      	bne.n	80084a6 <__assert_func+0x1a>
 80084a2:	4b07      	ldr	r3, [pc, #28]	; (80084c0 <__assert_func+0x34>)
 80084a4:	001c      	movs	r4, r3
 80084a6:	9301      	str	r3, [sp, #4]
 80084a8:	9100      	str	r1, [sp, #0]
 80084aa:	002b      	movs	r3, r5
 80084ac:	4905      	ldr	r1, [pc, #20]	; (80084c4 <__assert_func+0x38>)
 80084ae:	9402      	str	r4, [sp, #8]
 80084b0:	f000 f8a8 	bl	8008604 <fiprintf>
 80084b4:	f000 fd1b 	bl	8008eee <abort>
 80084b8:	2000000c 	.word	0x2000000c
 80084bc:	08009324 	.word	0x08009324
 80084c0:	0800935f 	.word	0x0800935f
 80084c4:	08009331 	.word	0x08009331

080084c8 <_calloc_r>:
 80084c8:	b510      	push	{r4, lr}
 80084ca:	4351      	muls	r1, r2
 80084cc:	f7fe fbdc 	bl	8006c88 <_malloc_r>
 80084d0:	1e04      	subs	r4, r0, #0
 80084d2:	d01a      	beq.n	800850a <_calloc_r+0x42>
 80084d4:	0003      	movs	r3, r0
 80084d6:	3b08      	subs	r3, #8
 80084d8:	685a      	ldr	r2, [r3, #4]
 80084da:	2303      	movs	r3, #3
 80084dc:	439a      	bics	r2, r3
 80084de:	3a04      	subs	r2, #4
 80084e0:	2a24      	cmp	r2, #36	; 0x24
 80084e2:	d819      	bhi.n	8008518 <_calloc_r+0x50>
 80084e4:	0003      	movs	r3, r0
 80084e6:	2a13      	cmp	r2, #19
 80084e8:	d90b      	bls.n	8008502 <_calloc_r+0x3a>
 80084ea:	2100      	movs	r1, #0
 80084ec:	3308      	adds	r3, #8
 80084ee:	6001      	str	r1, [r0, #0]
 80084f0:	6041      	str	r1, [r0, #4]
 80084f2:	2a1b      	cmp	r2, #27
 80084f4:	d905      	bls.n	8008502 <_calloc_r+0x3a>
 80084f6:	6081      	str	r1, [r0, #8]
 80084f8:	60c1      	str	r1, [r0, #12]
 80084fa:	2a24      	cmp	r2, #36	; 0x24
 80084fc:	d007      	beq.n	800850e <_calloc_r+0x46>
 80084fe:	0003      	movs	r3, r0
 8008500:	3310      	adds	r3, #16
 8008502:	2200      	movs	r2, #0
 8008504:	601a      	str	r2, [r3, #0]
 8008506:	605a      	str	r2, [r3, #4]
 8008508:	609a      	str	r2, [r3, #8]
 800850a:	0020      	movs	r0, r4
 800850c:	bd10      	pop	{r4, pc}
 800850e:	0003      	movs	r3, r0
 8008510:	6101      	str	r1, [r0, #16]
 8008512:	3318      	adds	r3, #24
 8008514:	6141      	str	r1, [r0, #20]
 8008516:	e7f4      	b.n	8008502 <_calloc_r+0x3a>
 8008518:	2100      	movs	r1, #0
 800851a:	f7fb fe5b 	bl	80041d4 <memset>
 800851e:	e7f4      	b.n	800850a <_calloc_r+0x42>

08008520 <_close_r>:
 8008520:	2300      	movs	r3, #0
 8008522:	b570      	push	{r4, r5, r6, lr}
 8008524:	4d06      	ldr	r5, [pc, #24]	; (8008540 <_close_r+0x20>)
 8008526:	0004      	movs	r4, r0
 8008528:	0008      	movs	r0, r1
 800852a:	602b      	str	r3, [r5, #0]
 800852c:	f7fa f812 	bl	8002554 <_close>
 8008530:	1c43      	adds	r3, r0, #1
 8008532:	d103      	bne.n	800853c <_close_r+0x1c>
 8008534:	682b      	ldr	r3, [r5, #0]
 8008536:	2b00      	cmp	r3, #0
 8008538:	d000      	beq.n	800853c <_close_r+0x1c>
 800853a:	6023      	str	r3, [r4, #0]
 800853c:	bd70      	pop	{r4, r5, r6, pc}
 800853e:	46c0      	nop			; (mov r8, r8)
 8008540:	20000ae4 	.word	0x20000ae4

08008544 <_fclose_r>:
 8008544:	b570      	push	{r4, r5, r6, lr}
 8008546:	0005      	movs	r5, r0
 8008548:	1e0c      	subs	r4, r1, #0
 800854a:	d102      	bne.n	8008552 <_fclose_r+0xe>
 800854c:	2600      	movs	r6, #0
 800854e:	0030      	movs	r0, r6
 8008550:	bd70      	pop	{r4, r5, r6, pc}
 8008552:	2800      	cmp	r0, #0
 8008554:	d004      	beq.n	8008560 <_fclose_r+0x1c>
 8008556:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008558:	2b00      	cmp	r3, #0
 800855a:	d101      	bne.n	8008560 <_fclose_r+0x1c>
 800855c:	f7fe f9b2 	bl	80068c4 <__sinit>
 8008560:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008562:	07db      	lsls	r3, r3, #31
 8008564:	d405      	bmi.n	8008572 <_fclose_r+0x2e>
 8008566:	89a3      	ldrh	r3, [r4, #12]
 8008568:	059b      	lsls	r3, r3, #22
 800856a:	d402      	bmi.n	8008572 <_fclose_r+0x2e>
 800856c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800856e:	f7fe fb15 	bl	8006b9c <__retarget_lock_acquire_recursive>
 8008572:	220c      	movs	r2, #12
 8008574:	5ea3      	ldrsh	r3, [r4, r2]
 8008576:	2b00      	cmp	r3, #0
 8008578:	d109      	bne.n	800858e <_fclose_r+0x4a>
 800857a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800857c:	3301      	adds	r3, #1
 800857e:	0016      	movs	r6, r2
 8008580:	401e      	ands	r6, r3
 8008582:	421a      	tst	r2, r3
 8008584:	d1e2      	bne.n	800854c <_fclose_r+0x8>
 8008586:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008588:	f7fe fb09 	bl	8006b9e <__retarget_lock_release_recursive>
 800858c:	e7df      	b.n	800854e <_fclose_r+0xa>
 800858e:	0021      	movs	r1, r4
 8008590:	0028      	movs	r0, r5
 8008592:	f7fe f889 	bl	80066a8 <__sflush_r>
 8008596:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008598:	0006      	movs	r6, r0
 800859a:	2b00      	cmp	r3, #0
 800859c:	d006      	beq.n	80085ac <_fclose_r+0x68>
 800859e:	0028      	movs	r0, r5
 80085a0:	69e1      	ldr	r1, [r4, #28]
 80085a2:	4798      	blx	r3
 80085a4:	2800      	cmp	r0, #0
 80085a6:	da01      	bge.n	80085ac <_fclose_r+0x68>
 80085a8:	2601      	movs	r6, #1
 80085aa:	4276      	negs	r6, r6
 80085ac:	89a3      	ldrh	r3, [r4, #12]
 80085ae:	061b      	lsls	r3, r3, #24
 80085b0:	d503      	bpl.n	80085ba <_fclose_r+0x76>
 80085b2:	0028      	movs	r0, r5
 80085b4:	6921      	ldr	r1, [r4, #16]
 80085b6:	f7fe fa17 	bl	80069e8 <_free_r>
 80085ba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80085bc:	2900      	cmp	r1, #0
 80085be:	d008      	beq.n	80085d2 <_fclose_r+0x8e>
 80085c0:	0023      	movs	r3, r4
 80085c2:	3340      	adds	r3, #64	; 0x40
 80085c4:	4299      	cmp	r1, r3
 80085c6:	d002      	beq.n	80085ce <_fclose_r+0x8a>
 80085c8:	0028      	movs	r0, r5
 80085ca:	f7fe fa0d 	bl	80069e8 <_free_r>
 80085ce:	2300      	movs	r3, #0
 80085d0:	6323      	str	r3, [r4, #48]	; 0x30
 80085d2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80085d4:	2900      	cmp	r1, #0
 80085d6:	d004      	beq.n	80085e2 <_fclose_r+0x9e>
 80085d8:	0028      	movs	r0, r5
 80085da:	f7fe fa05 	bl	80069e8 <_free_r>
 80085de:	2300      	movs	r3, #0
 80085e0:	6463      	str	r3, [r4, #68]	; 0x44
 80085e2:	f7fe f94f 	bl	8006884 <__sfp_lock_acquire>
 80085e6:	2300      	movs	r3, #0
 80085e8:	81a3      	strh	r3, [r4, #12]
 80085ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80085ec:	07db      	lsls	r3, r3, #31
 80085ee:	d402      	bmi.n	80085f6 <_fclose_r+0xb2>
 80085f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80085f2:	f7fe fad4 	bl	8006b9e <__retarget_lock_release_recursive>
 80085f6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80085f8:	f7fe facf 	bl	8006b9a <__retarget_lock_close_recursive>
 80085fc:	f7fe f94a 	bl	8006894 <__sfp_lock_release>
 8008600:	e7a5      	b.n	800854e <_fclose_r+0xa>
	...

08008604 <fiprintf>:
 8008604:	b40e      	push	{r1, r2, r3}
 8008606:	b503      	push	{r0, r1, lr}
 8008608:	0001      	movs	r1, r0
 800860a:	ab03      	add	r3, sp, #12
 800860c:	4804      	ldr	r0, [pc, #16]	; (8008620 <fiprintf+0x1c>)
 800860e:	cb04      	ldmia	r3!, {r2}
 8008610:	6800      	ldr	r0, [r0, #0]
 8008612:	9301      	str	r3, [sp, #4]
 8008614:	f7ff f9a2 	bl	800795c <_vfiprintf_r>
 8008618:	b002      	add	sp, #8
 800861a:	bc08      	pop	{r3}
 800861c:	b003      	add	sp, #12
 800861e:	4718      	bx	r3
 8008620:	2000000c 	.word	0x2000000c

08008624 <__fputwc>:
 8008624:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008626:	b085      	sub	sp, #20
 8008628:	000e      	movs	r6, r1
 800862a:	0015      	movs	r5, r2
 800862c:	9001      	str	r0, [sp, #4]
 800862e:	f000 f9eb 	bl	8008a08 <__locale_mb_cur_max>
 8008632:	0004      	movs	r4, r0
 8008634:	2801      	cmp	r0, #1
 8008636:	d119      	bne.n	800866c <__fputwc+0x48>
 8008638:	1e73      	subs	r3, r6, #1
 800863a:	2bfe      	cmp	r3, #254	; 0xfe
 800863c:	d816      	bhi.n	800866c <__fputwc+0x48>
 800863e:	ab02      	add	r3, sp, #8
 8008640:	711e      	strb	r6, [r3, #4]
 8008642:	2700      	movs	r7, #0
 8008644:	42a7      	cmp	r7, r4
 8008646:	d020      	beq.n	800868a <__fputwc+0x66>
 8008648:	ab03      	add	r3, sp, #12
 800864a:	5dd9      	ldrb	r1, [r3, r7]
 800864c:	68ab      	ldr	r3, [r5, #8]
 800864e:	3b01      	subs	r3, #1
 8008650:	60ab      	str	r3, [r5, #8]
 8008652:	2b00      	cmp	r3, #0
 8008654:	da04      	bge.n	8008660 <__fputwc+0x3c>
 8008656:	69aa      	ldr	r2, [r5, #24]
 8008658:	4293      	cmp	r3, r2
 800865a:	db19      	blt.n	8008690 <__fputwc+0x6c>
 800865c:	290a      	cmp	r1, #10
 800865e:	d017      	beq.n	8008690 <__fputwc+0x6c>
 8008660:	682b      	ldr	r3, [r5, #0]
 8008662:	1c5a      	adds	r2, r3, #1
 8008664:	602a      	str	r2, [r5, #0]
 8008666:	7019      	strb	r1, [r3, #0]
 8008668:	3701      	adds	r7, #1
 800866a:	e7eb      	b.n	8008644 <__fputwc+0x20>
 800866c:	002b      	movs	r3, r5
 800866e:	0032      	movs	r2, r6
 8008670:	9801      	ldr	r0, [sp, #4]
 8008672:	335c      	adds	r3, #92	; 0x5c
 8008674:	a903      	add	r1, sp, #12
 8008676:	f000 fc15 	bl	8008ea4 <_wcrtomb_r>
 800867a:	0004      	movs	r4, r0
 800867c:	1c43      	adds	r3, r0, #1
 800867e:	d1e0      	bne.n	8008642 <__fputwc+0x1e>
 8008680:	2340      	movs	r3, #64	; 0x40
 8008682:	0006      	movs	r6, r0
 8008684:	89aa      	ldrh	r2, [r5, #12]
 8008686:	4313      	orrs	r3, r2
 8008688:	81ab      	strh	r3, [r5, #12]
 800868a:	0030      	movs	r0, r6
 800868c:	b005      	add	sp, #20
 800868e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008690:	002a      	movs	r2, r5
 8008692:	9801      	ldr	r0, [sp, #4]
 8008694:	f000 fbb4 	bl	8008e00 <__swbuf_r>
 8008698:	1c43      	adds	r3, r0, #1
 800869a:	d1e5      	bne.n	8008668 <__fputwc+0x44>
 800869c:	0006      	movs	r6, r0
 800869e:	e7f4      	b.n	800868a <__fputwc+0x66>

080086a0 <_fputwc_r>:
 80086a0:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80086a2:	b570      	push	{r4, r5, r6, lr}
 80086a4:	0005      	movs	r5, r0
 80086a6:	000e      	movs	r6, r1
 80086a8:	0014      	movs	r4, r2
 80086aa:	07db      	lsls	r3, r3, #31
 80086ac:	d405      	bmi.n	80086ba <_fputwc_r+0x1a>
 80086ae:	8993      	ldrh	r3, [r2, #12]
 80086b0:	059b      	lsls	r3, r3, #22
 80086b2:	d402      	bmi.n	80086ba <_fputwc_r+0x1a>
 80086b4:	6d90      	ldr	r0, [r2, #88]	; 0x58
 80086b6:	f7fe fa71 	bl	8006b9c <__retarget_lock_acquire_recursive>
 80086ba:	230c      	movs	r3, #12
 80086bc:	5ee2      	ldrsh	r2, [r4, r3]
 80086be:	2380      	movs	r3, #128	; 0x80
 80086c0:	019b      	lsls	r3, r3, #6
 80086c2:	421a      	tst	r2, r3
 80086c4:	d104      	bne.n	80086d0 <_fputwc_r+0x30>
 80086c6:	431a      	orrs	r2, r3
 80086c8:	81a2      	strh	r2, [r4, #12]
 80086ca:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80086cc:	4313      	orrs	r3, r2
 80086ce:	6663      	str	r3, [r4, #100]	; 0x64
 80086d0:	0028      	movs	r0, r5
 80086d2:	0022      	movs	r2, r4
 80086d4:	0031      	movs	r1, r6
 80086d6:	f7ff ffa5 	bl	8008624 <__fputwc>
 80086da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80086dc:	0005      	movs	r5, r0
 80086de:	07db      	lsls	r3, r3, #31
 80086e0:	d405      	bmi.n	80086ee <_fputwc_r+0x4e>
 80086e2:	89a3      	ldrh	r3, [r4, #12]
 80086e4:	059b      	lsls	r3, r3, #22
 80086e6:	d402      	bmi.n	80086ee <_fputwc_r+0x4e>
 80086e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80086ea:	f7fe fa58 	bl	8006b9e <__retarget_lock_release_recursive>
 80086ee:	0028      	movs	r0, r5
 80086f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080086f4 <_fstat_r>:
 80086f4:	2300      	movs	r3, #0
 80086f6:	b570      	push	{r4, r5, r6, lr}
 80086f8:	4d06      	ldr	r5, [pc, #24]	; (8008714 <_fstat_r+0x20>)
 80086fa:	0004      	movs	r4, r0
 80086fc:	0008      	movs	r0, r1
 80086fe:	0011      	movs	r1, r2
 8008700:	602b      	str	r3, [r5, #0]
 8008702:	f7f9 ff2a 	bl	800255a <_fstat>
 8008706:	1c43      	adds	r3, r0, #1
 8008708:	d103      	bne.n	8008712 <_fstat_r+0x1e>
 800870a:	682b      	ldr	r3, [r5, #0]
 800870c:	2b00      	cmp	r3, #0
 800870e:	d000      	beq.n	8008712 <_fstat_r+0x1e>
 8008710:	6023      	str	r3, [r4, #0]
 8008712:	bd70      	pop	{r4, r5, r6, pc}
 8008714:	20000ae4 	.word	0x20000ae4

08008718 <__sfvwrite_r>:
 8008718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800871a:	6893      	ldr	r3, [r2, #8]
 800871c:	b087      	sub	sp, #28
 800871e:	000c      	movs	r4, r1
 8008720:	9002      	str	r0, [sp, #8]
 8008722:	9203      	str	r2, [sp, #12]
 8008724:	9300      	str	r3, [sp, #0]
 8008726:	2b00      	cmp	r3, #0
 8008728:	d102      	bne.n	8008730 <__sfvwrite_r+0x18>
 800872a:	2000      	movs	r0, #0
 800872c:	b007      	add	sp, #28
 800872e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008730:	898b      	ldrh	r3, [r1, #12]
 8008732:	071b      	lsls	r3, r3, #28
 8008734:	d559      	bpl.n	80087ea <__sfvwrite_r+0xd2>
 8008736:	690b      	ldr	r3, [r1, #16]
 8008738:	2b00      	cmp	r3, #0
 800873a:	d056      	beq.n	80087ea <__sfvwrite_r+0xd2>
 800873c:	9b03      	ldr	r3, [sp, #12]
 800873e:	2202      	movs	r2, #2
 8008740:	681b      	ldr	r3, [r3, #0]
 8008742:	9301      	str	r3, [sp, #4]
 8008744:	89a3      	ldrh	r3, [r4, #12]
 8008746:	001f      	movs	r7, r3
 8008748:	4017      	ands	r7, r2
 800874a:	4213      	tst	r3, r2
 800874c:	d173      	bne.n	8008836 <__sfvwrite_r+0x11e>
 800874e:	2201      	movs	r2, #1
 8008750:	0019      	movs	r1, r3
 8008752:	4011      	ands	r1, r2
 8008754:	4213      	tst	r3, r2
 8008756:	d100      	bne.n	800875a <__sfvwrite_r+0x42>
 8008758:	e0a8      	b.n	80088ac <__sfvwrite_r+0x194>
 800875a:	0038      	movs	r0, r7
 800875c:	003e      	movs	r6, r7
 800875e:	9700      	str	r7, [sp, #0]
 8008760:	9205      	str	r2, [sp, #20]
 8008762:	9b00      	ldr	r3, [sp, #0]
 8008764:	2b00      	cmp	r3, #0
 8008766:	d100      	bne.n	800876a <__sfvwrite_r+0x52>
 8008768:	e112      	b.n	8008990 <__sfvwrite_r+0x278>
 800876a:	2800      	cmp	r0, #0
 800876c:	d10a      	bne.n	8008784 <__sfvwrite_r+0x6c>
 800876e:	001a      	movs	r2, r3
 8008770:	210a      	movs	r1, #10
 8008772:	0030      	movs	r0, r6
 8008774:	f7fe fc9c 	bl	80070b0 <memchr>
 8008778:	9b00      	ldr	r3, [sp, #0]
 800877a:	1c5f      	adds	r7, r3, #1
 800877c:	2800      	cmp	r0, #0
 800877e:	d001      	beq.n	8008784 <__sfvwrite_r+0x6c>
 8008780:	3001      	adds	r0, #1
 8008782:	1b87      	subs	r7, r0, r6
 8008784:	9b00      	ldr	r3, [sp, #0]
 8008786:	9704      	str	r7, [sp, #16]
 8008788:	429f      	cmp	r7, r3
 800878a:	d900      	bls.n	800878e <__sfvwrite_r+0x76>
 800878c:	9304      	str	r3, [sp, #16]
 800878e:	6820      	ldr	r0, [r4, #0]
 8008790:	6922      	ldr	r2, [r4, #16]
 8008792:	6963      	ldr	r3, [r4, #20]
 8008794:	4290      	cmp	r0, r2
 8008796:	d800      	bhi.n	800879a <__sfvwrite_r+0x82>
 8008798:	e103      	b.n	80089a2 <__sfvwrite_r+0x28a>
 800879a:	68a2      	ldr	r2, [r4, #8]
 800879c:	189d      	adds	r5, r3, r2
 800879e:	9a04      	ldr	r2, [sp, #16]
 80087a0:	42aa      	cmp	r2, r5
 80087a2:	dc00      	bgt.n	80087a6 <__sfvwrite_r+0x8e>
 80087a4:	e0fd      	b.n	80089a2 <__sfvwrite_r+0x28a>
 80087a6:	0031      	movs	r1, r6
 80087a8:	002a      	movs	r2, r5
 80087aa:	f000 f95b 	bl	8008a64 <memmove>
 80087ae:	6823      	ldr	r3, [r4, #0]
 80087b0:	0021      	movs	r1, r4
 80087b2:	195b      	adds	r3, r3, r5
 80087b4:	9802      	ldr	r0, [sp, #8]
 80087b6:	6023      	str	r3, [r4, #0]
 80087b8:	f7fe f80e 	bl	80067d8 <_fflush_r>
 80087bc:	2800      	cmp	r0, #0
 80087be:	d170      	bne.n	80088a2 <__sfvwrite_r+0x18a>
 80087c0:	9805      	ldr	r0, [sp, #20]
 80087c2:	1b7f      	subs	r7, r7, r5
 80087c4:	d105      	bne.n	80087d2 <__sfvwrite_r+0xba>
 80087c6:	0021      	movs	r1, r4
 80087c8:	9802      	ldr	r0, [sp, #8]
 80087ca:	f7fe f805 	bl	80067d8 <_fflush_r>
 80087ce:	2800      	cmp	r0, #0
 80087d0:	d167      	bne.n	80088a2 <__sfvwrite_r+0x18a>
 80087d2:	9b00      	ldr	r3, [sp, #0]
 80087d4:	1976      	adds	r6, r6, r5
 80087d6:	1b5b      	subs	r3, r3, r5
 80087d8:	9300      	str	r3, [sp, #0]
 80087da:	9b03      	ldr	r3, [sp, #12]
 80087dc:	689b      	ldr	r3, [r3, #8]
 80087de:	1b5d      	subs	r5, r3, r5
 80087e0:	9304      	str	r3, [sp, #16]
 80087e2:	9b03      	ldr	r3, [sp, #12]
 80087e4:	609d      	str	r5, [r3, #8]
 80087e6:	d1bc      	bne.n	8008762 <__sfvwrite_r+0x4a>
 80087e8:	e79f      	b.n	800872a <__sfvwrite_r+0x12>
 80087ea:	0021      	movs	r1, r4
 80087ec:	9802      	ldr	r0, [sp, #8]
 80087ee:	f7fd f871 	bl	80058d4 <__swsetup_r>
 80087f2:	2800      	cmp	r0, #0
 80087f4:	d0a2      	beq.n	800873c <__sfvwrite_r+0x24>
 80087f6:	2001      	movs	r0, #1
 80087f8:	4240      	negs	r0, r0
 80087fa:	e797      	b.n	800872c <__sfvwrite_r+0x14>
 80087fc:	9b01      	ldr	r3, [sp, #4]
 80087fe:	681e      	ldr	r6, [r3, #0]
 8008800:	685d      	ldr	r5, [r3, #4]
 8008802:	3308      	adds	r3, #8
 8008804:	9301      	str	r3, [sp, #4]
 8008806:	2d00      	cmp	r5, #0
 8008808:	d0f8      	beq.n	80087fc <__sfvwrite_r+0xe4>
 800880a:	4a72      	ldr	r2, [pc, #456]	; (80089d4 <__sfvwrite_r+0x2bc>)
 800880c:	002b      	movs	r3, r5
 800880e:	4295      	cmp	r5, r2
 8008810:	d900      	bls.n	8008814 <__sfvwrite_r+0xfc>
 8008812:	0013      	movs	r3, r2
 8008814:	0032      	movs	r2, r6
 8008816:	69e1      	ldr	r1, [r4, #28]
 8008818:	9802      	ldr	r0, [sp, #8]
 800881a:	6a67      	ldr	r7, [r4, #36]	; 0x24
 800881c:	47b8      	blx	r7
 800881e:	2800      	cmp	r0, #0
 8008820:	dd3f      	ble.n	80088a2 <__sfvwrite_r+0x18a>
 8008822:	9b03      	ldr	r3, [sp, #12]
 8008824:	1836      	adds	r6, r6, r0
 8008826:	689b      	ldr	r3, [r3, #8]
 8008828:	1a2d      	subs	r5, r5, r0
 800882a:	9300      	str	r3, [sp, #0]
 800882c:	1a18      	subs	r0, r3, r0
 800882e:	9b03      	ldr	r3, [sp, #12]
 8008830:	6098      	str	r0, [r3, #8]
 8008832:	d1e8      	bne.n	8008806 <__sfvwrite_r+0xee>
 8008834:	e779      	b.n	800872a <__sfvwrite_r+0x12>
 8008836:	2600      	movs	r6, #0
 8008838:	0035      	movs	r5, r6
 800883a:	e7e4      	b.n	8008806 <__sfvwrite_r+0xee>
 800883c:	9b01      	ldr	r3, [sp, #4]
 800883e:	681b      	ldr	r3, [r3, #0]
 8008840:	9304      	str	r3, [sp, #16]
 8008842:	9b01      	ldr	r3, [sp, #4]
 8008844:	685b      	ldr	r3, [r3, #4]
 8008846:	9300      	str	r3, [sp, #0]
 8008848:	9b01      	ldr	r3, [sp, #4]
 800884a:	3308      	adds	r3, #8
 800884c:	9301      	str	r3, [sp, #4]
 800884e:	9b00      	ldr	r3, [sp, #0]
 8008850:	2b00      	cmp	r3, #0
 8008852:	d0f3      	beq.n	800883c <__sfvwrite_r+0x124>
 8008854:	2380      	movs	r3, #128	; 0x80
 8008856:	89a2      	ldrh	r2, [r4, #12]
 8008858:	009b      	lsls	r3, r3, #2
 800885a:	68a5      	ldr	r5, [r4, #8]
 800885c:	6820      	ldr	r0, [r4, #0]
 800885e:	421a      	tst	r2, r3
 8008860:	d064      	beq.n	800892c <__sfvwrite_r+0x214>
 8008862:	9b00      	ldr	r3, [sp, #0]
 8008864:	429d      	cmp	r5, r3
 8008866:	d835      	bhi.n	80088d4 <__sfvwrite_r+0x1bc>
 8008868:	2390      	movs	r3, #144	; 0x90
 800886a:	00db      	lsls	r3, r3, #3
 800886c:	421a      	tst	r2, r3
 800886e:	d031      	beq.n	80088d4 <__sfvwrite_r+0x1bc>
 8008870:	2603      	movs	r6, #3
 8008872:	6963      	ldr	r3, [r4, #20]
 8008874:	6921      	ldr	r1, [r4, #16]
 8008876:	435e      	muls	r6, r3
 8008878:	1a47      	subs	r7, r0, r1
 800887a:	0ff0      	lsrs	r0, r6, #31
 800887c:	1986      	adds	r6, r0, r6
 800887e:	9800      	ldr	r0, [sp, #0]
 8008880:	1c7b      	adds	r3, r7, #1
 8008882:	181b      	adds	r3, r3, r0
 8008884:	1076      	asrs	r6, r6, #1
 8008886:	42b3      	cmp	r3, r6
 8008888:	d900      	bls.n	800888c <__sfvwrite_r+0x174>
 800888a:	001e      	movs	r6, r3
 800888c:	0553      	lsls	r3, r2, #21
 800888e:	d53e      	bpl.n	800890e <__sfvwrite_r+0x1f6>
 8008890:	0031      	movs	r1, r6
 8008892:	9802      	ldr	r0, [sp, #8]
 8008894:	f7fe f9f8 	bl	8006c88 <_malloc_r>
 8008898:	1e05      	subs	r5, r0, #0
 800889a:	d10a      	bne.n	80088b2 <__sfvwrite_r+0x19a>
 800889c:	230c      	movs	r3, #12
 800889e:	9a02      	ldr	r2, [sp, #8]
 80088a0:	6013      	str	r3, [r2, #0]
 80088a2:	2340      	movs	r3, #64	; 0x40
 80088a4:	89a2      	ldrh	r2, [r4, #12]
 80088a6:	4313      	orrs	r3, r2
 80088a8:	81a3      	strh	r3, [r4, #12]
 80088aa:	e7a4      	b.n	80087f6 <__sfvwrite_r+0xde>
 80088ac:	9104      	str	r1, [sp, #16]
 80088ae:	9100      	str	r1, [sp, #0]
 80088b0:	e7cd      	b.n	800884e <__sfvwrite_r+0x136>
 80088b2:	003a      	movs	r2, r7
 80088b4:	6921      	ldr	r1, [r4, #16]
 80088b6:	f7fe fc06 	bl	80070c6 <memcpy>
 80088ba:	89a3      	ldrh	r3, [r4, #12]
 80088bc:	4a46      	ldr	r2, [pc, #280]	; (80089d8 <__sfvwrite_r+0x2c0>)
 80088be:	401a      	ands	r2, r3
 80088c0:	2380      	movs	r3, #128	; 0x80
 80088c2:	4313      	orrs	r3, r2
 80088c4:	81a3      	strh	r3, [r4, #12]
 80088c6:	6125      	str	r5, [r4, #16]
 80088c8:	19ed      	adds	r5, r5, r7
 80088ca:	6025      	str	r5, [r4, #0]
 80088cc:	6166      	str	r6, [r4, #20]
 80088ce:	9d00      	ldr	r5, [sp, #0]
 80088d0:	1bf6      	subs	r6, r6, r7
 80088d2:	60a6      	str	r6, [r4, #8]
 80088d4:	9f00      	ldr	r7, [sp, #0]
 80088d6:	42bd      	cmp	r5, r7
 80088d8:	d900      	bls.n	80088dc <__sfvwrite_r+0x1c4>
 80088da:	003d      	movs	r5, r7
 80088dc:	002a      	movs	r2, r5
 80088de:	9904      	ldr	r1, [sp, #16]
 80088e0:	6820      	ldr	r0, [r4, #0]
 80088e2:	f000 f8bf 	bl	8008a64 <memmove>
 80088e6:	68a3      	ldr	r3, [r4, #8]
 80088e8:	1b5b      	subs	r3, r3, r5
 80088ea:	60a3      	str	r3, [r4, #8]
 80088ec:	6823      	ldr	r3, [r4, #0]
 80088ee:	195d      	adds	r5, r3, r5
 80088f0:	6025      	str	r5, [r4, #0]
 80088f2:	9b04      	ldr	r3, [sp, #16]
 80088f4:	19db      	adds	r3, r3, r7
 80088f6:	9304      	str	r3, [sp, #16]
 80088f8:	9b00      	ldr	r3, [sp, #0]
 80088fa:	1bdb      	subs	r3, r3, r7
 80088fc:	9300      	str	r3, [sp, #0]
 80088fe:	9b03      	ldr	r3, [sp, #12]
 8008900:	689b      	ldr	r3, [r3, #8]
 8008902:	1bdf      	subs	r7, r3, r7
 8008904:	9305      	str	r3, [sp, #20]
 8008906:	9b03      	ldr	r3, [sp, #12]
 8008908:	609f      	str	r7, [r3, #8]
 800890a:	d1a0      	bne.n	800884e <__sfvwrite_r+0x136>
 800890c:	e70d      	b.n	800872a <__sfvwrite_r+0x12>
 800890e:	0032      	movs	r2, r6
 8008910:	9802      	ldr	r0, [sp, #8]
 8008912:	f000 f8cf 	bl	8008ab4 <_realloc_r>
 8008916:	1e05      	subs	r5, r0, #0
 8008918:	d1d5      	bne.n	80088c6 <__sfvwrite_r+0x1ae>
 800891a:	6921      	ldr	r1, [r4, #16]
 800891c:	9802      	ldr	r0, [sp, #8]
 800891e:	f7fe f863 	bl	80069e8 <_free_r>
 8008922:	2280      	movs	r2, #128	; 0x80
 8008924:	89a3      	ldrh	r3, [r4, #12]
 8008926:	4393      	bics	r3, r2
 8008928:	81a3      	strh	r3, [r4, #12]
 800892a:	e7b7      	b.n	800889c <__sfvwrite_r+0x184>
 800892c:	6923      	ldr	r3, [r4, #16]
 800892e:	4283      	cmp	r3, r0
 8008930:	d303      	bcc.n	800893a <__sfvwrite_r+0x222>
 8008932:	6967      	ldr	r7, [r4, #20]
 8008934:	9b00      	ldr	r3, [sp, #0]
 8008936:	429f      	cmp	r7, r3
 8008938:	d917      	bls.n	800896a <__sfvwrite_r+0x252>
 800893a:	9b00      	ldr	r3, [sp, #0]
 800893c:	429d      	cmp	r5, r3
 800893e:	d900      	bls.n	8008942 <__sfvwrite_r+0x22a>
 8008940:	001d      	movs	r5, r3
 8008942:	002a      	movs	r2, r5
 8008944:	9904      	ldr	r1, [sp, #16]
 8008946:	f000 f88d 	bl	8008a64 <memmove>
 800894a:	68a3      	ldr	r3, [r4, #8]
 800894c:	6822      	ldr	r2, [r4, #0]
 800894e:	1b5b      	subs	r3, r3, r5
 8008950:	1952      	adds	r2, r2, r5
 8008952:	002f      	movs	r7, r5
 8008954:	60a3      	str	r3, [r4, #8]
 8008956:	6022      	str	r2, [r4, #0]
 8008958:	2b00      	cmp	r3, #0
 800895a:	d1ca      	bne.n	80088f2 <__sfvwrite_r+0x1da>
 800895c:	0021      	movs	r1, r4
 800895e:	9802      	ldr	r0, [sp, #8]
 8008960:	f7fd ff3a 	bl	80067d8 <_fflush_r>
 8008964:	2800      	cmp	r0, #0
 8008966:	d0c4      	beq.n	80088f2 <__sfvwrite_r+0x1da>
 8008968:	e79b      	b.n	80088a2 <__sfvwrite_r+0x18a>
 800896a:	9a00      	ldr	r2, [sp, #0]
 800896c:	4b1b      	ldr	r3, [pc, #108]	; (80089dc <__sfvwrite_r+0x2c4>)
 800896e:	0010      	movs	r0, r2
 8008970:	429a      	cmp	r2, r3
 8008972:	d900      	bls.n	8008976 <__sfvwrite_r+0x25e>
 8008974:	481a      	ldr	r0, [pc, #104]	; (80089e0 <__sfvwrite_r+0x2c8>)
 8008976:	0039      	movs	r1, r7
 8008978:	f7f7 fc68 	bl	800024c <__divsi3>
 800897c:	003b      	movs	r3, r7
 800897e:	9a04      	ldr	r2, [sp, #16]
 8008980:	4343      	muls	r3, r0
 8008982:	69e1      	ldr	r1, [r4, #28]
 8008984:	9802      	ldr	r0, [sp, #8]
 8008986:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8008988:	47a8      	blx	r5
 800898a:	1e07      	subs	r7, r0, #0
 800898c:	dcb1      	bgt.n	80088f2 <__sfvwrite_r+0x1da>
 800898e:	e788      	b.n	80088a2 <__sfvwrite_r+0x18a>
 8008990:	9b01      	ldr	r3, [sp, #4]
 8008992:	2000      	movs	r0, #0
 8008994:	681e      	ldr	r6, [r3, #0]
 8008996:	685b      	ldr	r3, [r3, #4]
 8008998:	9300      	str	r3, [sp, #0]
 800899a:	9b01      	ldr	r3, [sp, #4]
 800899c:	3308      	adds	r3, #8
 800899e:	9301      	str	r3, [sp, #4]
 80089a0:	e6df      	b.n	8008762 <__sfvwrite_r+0x4a>
 80089a2:	9a04      	ldr	r2, [sp, #16]
 80089a4:	4293      	cmp	r3, r2
 80089a6:	dc08      	bgt.n	80089ba <__sfvwrite_r+0x2a2>
 80089a8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80089aa:	0032      	movs	r2, r6
 80089ac:	69e1      	ldr	r1, [r4, #28]
 80089ae:	9802      	ldr	r0, [sp, #8]
 80089b0:	47a8      	blx	r5
 80089b2:	1e05      	subs	r5, r0, #0
 80089b4:	dd00      	ble.n	80089b8 <__sfvwrite_r+0x2a0>
 80089b6:	e703      	b.n	80087c0 <__sfvwrite_r+0xa8>
 80089b8:	e773      	b.n	80088a2 <__sfvwrite_r+0x18a>
 80089ba:	9a04      	ldr	r2, [sp, #16]
 80089bc:	0031      	movs	r1, r6
 80089be:	f000 f851 	bl	8008a64 <memmove>
 80089c2:	9a04      	ldr	r2, [sp, #16]
 80089c4:	68a3      	ldr	r3, [r4, #8]
 80089c6:	0015      	movs	r5, r2
 80089c8:	1a9b      	subs	r3, r3, r2
 80089ca:	60a3      	str	r3, [r4, #8]
 80089cc:	6823      	ldr	r3, [r4, #0]
 80089ce:	189b      	adds	r3, r3, r2
 80089d0:	6023      	str	r3, [r4, #0]
 80089d2:	e6f5      	b.n	80087c0 <__sfvwrite_r+0xa8>
 80089d4:	7ffffc00 	.word	0x7ffffc00
 80089d8:	fffffb7f 	.word	0xfffffb7f
 80089dc:	7ffffffe 	.word	0x7ffffffe
 80089e0:	7fffffff 	.word	0x7fffffff

080089e4 <_isatty_r>:
 80089e4:	2300      	movs	r3, #0
 80089e6:	b570      	push	{r4, r5, r6, lr}
 80089e8:	4d06      	ldr	r5, [pc, #24]	; (8008a04 <_isatty_r+0x20>)
 80089ea:	0004      	movs	r4, r0
 80089ec:	0008      	movs	r0, r1
 80089ee:	602b      	str	r3, [r5, #0]
 80089f0:	f7f9 fdb8 	bl	8002564 <_isatty>
 80089f4:	1c43      	adds	r3, r0, #1
 80089f6:	d103      	bne.n	8008a00 <_isatty_r+0x1c>
 80089f8:	682b      	ldr	r3, [r5, #0]
 80089fa:	2b00      	cmp	r3, #0
 80089fc:	d000      	beq.n	8008a00 <_isatty_r+0x1c>
 80089fe:	6023      	str	r3, [r4, #0]
 8008a00:	bd70      	pop	{r4, r5, r6, pc}
 8008a02:	46c0      	nop			; (mov r8, r8)
 8008a04:	20000ae4 	.word	0x20000ae4

08008a08 <__locale_mb_cur_max>:
 8008a08:	2394      	movs	r3, #148	; 0x94
 8008a0a:	4a02      	ldr	r2, [pc, #8]	; (8008a14 <__locale_mb_cur_max+0xc>)
 8008a0c:	005b      	lsls	r3, r3, #1
 8008a0e:	5cd0      	ldrb	r0, [r2, r3]
 8008a10:	4770      	bx	lr
 8008a12:	46c0      	nop			; (mov r8, r8)
 8008a14:	2000084c 	.word	0x2000084c

08008a18 <_lseek_r>:
 8008a18:	b570      	push	{r4, r5, r6, lr}
 8008a1a:	0004      	movs	r4, r0
 8008a1c:	0008      	movs	r0, r1
 8008a1e:	0011      	movs	r1, r2
 8008a20:	001a      	movs	r2, r3
 8008a22:	2300      	movs	r3, #0
 8008a24:	4d05      	ldr	r5, [pc, #20]	; (8008a3c <_lseek_r+0x24>)
 8008a26:	602b      	str	r3, [r5, #0]
 8008a28:	f7f9 fd9e 	bl	8002568 <_lseek>
 8008a2c:	1c43      	adds	r3, r0, #1
 8008a2e:	d103      	bne.n	8008a38 <_lseek_r+0x20>
 8008a30:	682b      	ldr	r3, [r5, #0]
 8008a32:	2b00      	cmp	r3, #0
 8008a34:	d000      	beq.n	8008a38 <_lseek_r+0x20>
 8008a36:	6023      	str	r3, [r4, #0]
 8008a38:	bd70      	pop	{r4, r5, r6, pc}
 8008a3a:	46c0      	nop			; (mov r8, r8)
 8008a3c:	20000ae4 	.word	0x20000ae4

08008a40 <__ascii_mbtowc>:
 8008a40:	b082      	sub	sp, #8
 8008a42:	2900      	cmp	r1, #0
 8008a44:	d100      	bne.n	8008a48 <__ascii_mbtowc+0x8>
 8008a46:	a901      	add	r1, sp, #4
 8008a48:	1e10      	subs	r0, r2, #0
 8008a4a:	d006      	beq.n	8008a5a <__ascii_mbtowc+0x1a>
 8008a4c:	2b00      	cmp	r3, #0
 8008a4e:	d006      	beq.n	8008a5e <__ascii_mbtowc+0x1e>
 8008a50:	7813      	ldrb	r3, [r2, #0]
 8008a52:	600b      	str	r3, [r1, #0]
 8008a54:	7810      	ldrb	r0, [r2, #0]
 8008a56:	1e43      	subs	r3, r0, #1
 8008a58:	4198      	sbcs	r0, r3
 8008a5a:	b002      	add	sp, #8
 8008a5c:	4770      	bx	lr
 8008a5e:	2002      	movs	r0, #2
 8008a60:	4240      	negs	r0, r0
 8008a62:	e7fa      	b.n	8008a5a <__ascii_mbtowc+0x1a>

08008a64 <memmove>:
 8008a64:	b510      	push	{r4, lr}
 8008a66:	4288      	cmp	r0, r1
 8008a68:	d902      	bls.n	8008a70 <memmove+0xc>
 8008a6a:	188b      	adds	r3, r1, r2
 8008a6c:	4298      	cmp	r0, r3
 8008a6e:	d303      	bcc.n	8008a78 <memmove+0x14>
 8008a70:	2300      	movs	r3, #0
 8008a72:	e007      	b.n	8008a84 <memmove+0x20>
 8008a74:	5c8b      	ldrb	r3, [r1, r2]
 8008a76:	5483      	strb	r3, [r0, r2]
 8008a78:	3a01      	subs	r2, #1
 8008a7a:	d2fb      	bcs.n	8008a74 <memmove+0x10>
 8008a7c:	bd10      	pop	{r4, pc}
 8008a7e:	5ccc      	ldrb	r4, [r1, r3]
 8008a80:	54c4      	strb	r4, [r0, r3]
 8008a82:	3301      	adds	r3, #1
 8008a84:	429a      	cmp	r2, r3
 8008a86:	d1fa      	bne.n	8008a7e <memmove+0x1a>
 8008a88:	e7f8      	b.n	8008a7c <memmove+0x18>
	...

08008a8c <_read_r>:
 8008a8c:	b570      	push	{r4, r5, r6, lr}
 8008a8e:	0004      	movs	r4, r0
 8008a90:	0008      	movs	r0, r1
 8008a92:	0011      	movs	r1, r2
 8008a94:	001a      	movs	r2, r3
 8008a96:	2300      	movs	r3, #0
 8008a98:	4d05      	ldr	r5, [pc, #20]	; (8008ab0 <_read_r+0x24>)
 8008a9a:	602b      	str	r3, [r5, #0]
 8008a9c:	f7f9 fd40 	bl	8002520 <_read>
 8008aa0:	1c43      	adds	r3, r0, #1
 8008aa2:	d103      	bne.n	8008aac <_read_r+0x20>
 8008aa4:	682b      	ldr	r3, [r5, #0]
 8008aa6:	2b00      	cmp	r3, #0
 8008aa8:	d000      	beq.n	8008aac <_read_r+0x20>
 8008aaa:	6023      	str	r3, [r4, #0]
 8008aac:	bd70      	pop	{r4, r5, r6, pc}
 8008aae:	46c0      	nop			; (mov r8, r8)
 8008ab0:	20000ae4 	.word	0x20000ae4

08008ab4 <_realloc_r>:
 8008ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ab6:	b087      	sub	sp, #28
 8008ab8:	1e0c      	subs	r4, r1, #0
 8008aba:	9002      	str	r0, [sp, #8]
 8008abc:	9205      	str	r2, [sp, #20]
 8008abe:	d106      	bne.n	8008ace <_realloc_r+0x1a>
 8008ac0:	0011      	movs	r1, r2
 8008ac2:	f7fe f8e1 	bl	8006c88 <_malloc_r>
 8008ac6:	0007      	movs	r7, r0
 8008ac8:	0038      	movs	r0, r7
 8008aca:	b007      	add	sp, #28
 8008acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ace:	9802      	ldr	r0, [sp, #8]
 8008ad0:	f7fe fb02 	bl	80070d8 <__malloc_lock>
 8008ad4:	9e05      	ldr	r6, [sp, #20]
 8008ad6:	360b      	adds	r6, #11
 8008ad8:	2e16      	cmp	r6, #22
 8008ada:	d908      	bls.n	8008aee <_realloc_r+0x3a>
 8008adc:	2307      	movs	r3, #7
 8008ade:	439e      	bics	r6, r3
 8008ae0:	9601      	str	r6, [sp, #4]
 8008ae2:	d506      	bpl.n	8008af2 <_realloc_r+0x3e>
 8008ae4:	230c      	movs	r3, #12
 8008ae6:	9a02      	ldr	r2, [sp, #8]
 8008ae8:	2700      	movs	r7, #0
 8008aea:	6013      	str	r3, [r2, #0]
 8008aec:	e7ec      	b.n	8008ac8 <_realloc_r+0x14>
 8008aee:	2310      	movs	r3, #16
 8008af0:	9301      	str	r3, [sp, #4]
 8008af2:	9b01      	ldr	r3, [sp, #4]
 8008af4:	9a05      	ldr	r2, [sp, #20]
 8008af6:	4293      	cmp	r3, r2
 8008af8:	d3f4      	bcc.n	8008ae4 <_realloc_r+0x30>
 8008afa:	0023      	movs	r3, r4
 8008afc:	3b08      	subs	r3, #8
 8008afe:	685f      	ldr	r7, [r3, #4]
 8008b00:	9304      	str	r3, [sp, #16]
 8008b02:	003a      	movs	r2, r7
 8008b04:	2303      	movs	r3, #3
 8008b06:	439a      	bics	r2, r3
 8008b08:	9b01      	ldr	r3, [sp, #4]
 8008b0a:	9203      	str	r2, [sp, #12]
 8008b0c:	4293      	cmp	r3, r2
 8008b0e:	dc00      	bgt.n	8008b12 <_realloc_r+0x5e>
 8008b10:	e16b      	b.n	8008dea <_realloc_r+0x336>
 8008b12:	9b04      	ldr	r3, [sp, #16]
 8008b14:	48b9      	ldr	r0, [pc, #740]	; (8008dfc <_realloc_r+0x348>)
 8008b16:	189b      	adds	r3, r3, r2
 8008b18:	6882      	ldr	r2, [r0, #8]
 8008b1a:	4694      	mov	ip, r2
 8008b1c:	685a      	ldr	r2, [r3, #4]
 8008b1e:	459c      	cmp	ip, r3
 8008b20:	d006      	beq.n	8008b30 <_realloc_r+0x7c>
 8008b22:	2501      	movs	r5, #1
 8008b24:	0011      	movs	r1, r2
 8008b26:	43a9      	bics	r1, r5
 8008b28:	1859      	adds	r1, r3, r1
 8008b2a:	6849      	ldr	r1, [r1, #4]
 8008b2c:	4229      	tst	r1, r5
 8008b2e:	d126      	bne.n	8008b7e <_realloc_r+0xca>
 8008b30:	2103      	movs	r1, #3
 8008b32:	438a      	bics	r2, r1
 8008b34:	9903      	ldr	r1, [sp, #12]
 8008b36:	188e      	adds	r6, r1, r2
 8008b38:	9901      	ldr	r1, [sp, #4]
 8008b3a:	459c      	cmp	ip, r3
 8008b3c:	d117      	bne.n	8008b6e <_realloc_r+0xba>
 8008b3e:	3110      	adds	r1, #16
 8008b40:	42b1      	cmp	r1, r6
 8008b42:	dc1e      	bgt.n	8008b82 <_realloc_r+0xce>
 8008b44:	9901      	ldr	r1, [sp, #4]
 8008b46:	9b04      	ldr	r3, [sp, #16]
 8008b48:	468c      	mov	ip, r1
 8008b4a:	4463      	add	r3, ip
 8008b4c:	6083      	str	r3, [r0, #8]
 8008b4e:	001a      	movs	r2, r3
 8008b50:	1a73      	subs	r3, r6, r1
 8008b52:	2601      	movs	r6, #1
 8008b54:	4333      	orrs	r3, r6
 8008b56:	6053      	str	r3, [r2, #4]
 8008b58:	0023      	movs	r3, r4
 8008b5a:	3b08      	subs	r3, #8
 8008b5c:	685a      	ldr	r2, [r3, #4]
 8008b5e:	9802      	ldr	r0, [sp, #8]
 8008b60:	4016      	ands	r6, r2
 8008b62:	430e      	orrs	r6, r1
 8008b64:	605e      	str	r6, [r3, #4]
 8008b66:	f7fe fabf 	bl	80070e8 <__malloc_unlock>
 8008b6a:	0027      	movs	r7, r4
 8008b6c:	e7ac      	b.n	8008ac8 <_realloc_r+0x14>
 8008b6e:	42b1      	cmp	r1, r6
 8008b70:	dc07      	bgt.n	8008b82 <_realloc_r+0xce>
 8008b72:	68da      	ldr	r2, [r3, #12]
 8008b74:	689b      	ldr	r3, [r3, #8]
 8008b76:	60da      	str	r2, [r3, #12]
 8008b78:	6093      	str	r3, [r2, #8]
 8008b7a:	9d04      	ldr	r5, [sp, #16]
 8008b7c:	e07f      	b.n	8008c7e <_realloc_r+0x1ca>
 8008b7e:	2200      	movs	r2, #0
 8008b80:	0013      	movs	r3, r2
 8008b82:	07f9      	lsls	r1, r7, #31
 8008b84:	d500      	bpl.n	8008b88 <_realloc_r+0xd4>
 8008b86:	e0e2      	b.n	8008d4e <_realloc_r+0x29a>
 8008b88:	0021      	movs	r1, r4
 8008b8a:	3908      	subs	r1, #8
 8008b8c:	680d      	ldr	r5, [r1, #0]
 8008b8e:	9904      	ldr	r1, [sp, #16]
 8008b90:	1b4d      	subs	r5, r1, r5
 8008b92:	2103      	movs	r1, #3
 8008b94:	686f      	ldr	r7, [r5, #4]
 8008b96:	438f      	bics	r7, r1
 8008b98:	9903      	ldr	r1, [sp, #12]
 8008b9a:	187f      	adds	r7, r7, r1
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	d100      	bne.n	8008ba2 <_realloc_r+0xee>
 8008ba0:	e0a0      	b.n	8008ce4 <_realloc_r+0x230>
 8008ba2:	19d6      	adds	r6, r2, r7
 8008ba4:	459c      	cmp	ip, r3
 8008ba6:	d149      	bne.n	8008c3c <_realloc_r+0x188>
 8008ba8:	9b01      	ldr	r3, [sp, #4]
 8008baa:	3310      	adds	r3, #16
 8008bac:	42b3      	cmp	r3, r6
 8008bae:	dd00      	ble.n	8008bb2 <_realloc_r+0xfe>
 8008bb0:	e098      	b.n	8008ce4 <_realloc_r+0x230>
 8008bb2:	68aa      	ldr	r2, [r5, #8]
 8008bb4:	68eb      	ldr	r3, [r5, #12]
 8008bb6:	002f      	movs	r7, r5
 8008bb8:	60d3      	str	r3, [r2, #12]
 8008bba:	609a      	str	r2, [r3, #8]
 8008bbc:	000a      	movs	r2, r1
 8008bbe:	3a04      	subs	r2, #4
 8008bc0:	3708      	adds	r7, #8
 8008bc2:	2a24      	cmp	r2, #36	; 0x24
 8008bc4:	d835      	bhi.n	8008c32 <_realloc_r+0x17e>
 8008bc6:	003b      	movs	r3, r7
 8008bc8:	2a13      	cmp	r2, #19
 8008bca:	d908      	bls.n	8008bde <_realloc_r+0x12a>
 8008bcc:	6823      	ldr	r3, [r4, #0]
 8008bce:	60ab      	str	r3, [r5, #8]
 8008bd0:	6863      	ldr	r3, [r4, #4]
 8008bd2:	60eb      	str	r3, [r5, #12]
 8008bd4:	2a1b      	cmp	r2, #27
 8008bd6:	d81a      	bhi.n	8008c0e <_realloc_r+0x15a>
 8008bd8:	002b      	movs	r3, r5
 8008bda:	3408      	adds	r4, #8
 8008bdc:	3310      	adds	r3, #16
 8008bde:	6822      	ldr	r2, [r4, #0]
 8008be0:	601a      	str	r2, [r3, #0]
 8008be2:	6862      	ldr	r2, [r4, #4]
 8008be4:	605a      	str	r2, [r3, #4]
 8008be6:	68a2      	ldr	r2, [r4, #8]
 8008be8:	609a      	str	r2, [r3, #8]
 8008bea:	9b01      	ldr	r3, [sp, #4]
 8008bec:	18ea      	adds	r2, r5, r3
 8008bee:	4b83      	ldr	r3, [pc, #524]	; (8008dfc <_realloc_r+0x348>)
 8008bf0:	609a      	str	r2, [r3, #8]
 8008bf2:	9b01      	ldr	r3, [sp, #4]
 8008bf4:	1af3      	subs	r3, r6, r3
 8008bf6:	2601      	movs	r6, #1
 8008bf8:	4333      	orrs	r3, r6
 8008bfa:	6053      	str	r3, [r2, #4]
 8008bfc:	686b      	ldr	r3, [r5, #4]
 8008bfe:	401e      	ands	r6, r3
 8008c00:	9b01      	ldr	r3, [sp, #4]
 8008c02:	431e      	orrs	r6, r3
 8008c04:	606e      	str	r6, [r5, #4]
 8008c06:	9802      	ldr	r0, [sp, #8]
 8008c08:	f7fe fa6e 	bl	80070e8 <__malloc_unlock>
 8008c0c:	e75c      	b.n	8008ac8 <_realloc_r+0x14>
 8008c0e:	68a3      	ldr	r3, [r4, #8]
 8008c10:	612b      	str	r3, [r5, #16]
 8008c12:	68e3      	ldr	r3, [r4, #12]
 8008c14:	616b      	str	r3, [r5, #20]
 8008c16:	2a24      	cmp	r2, #36	; 0x24
 8008c18:	d003      	beq.n	8008c22 <_realloc_r+0x16e>
 8008c1a:	002b      	movs	r3, r5
 8008c1c:	3410      	adds	r4, #16
 8008c1e:	3318      	adds	r3, #24
 8008c20:	e7dd      	b.n	8008bde <_realloc_r+0x12a>
 8008c22:	6923      	ldr	r3, [r4, #16]
 8008c24:	61ab      	str	r3, [r5, #24]
 8008c26:	002b      	movs	r3, r5
 8008c28:	6962      	ldr	r2, [r4, #20]
 8008c2a:	3320      	adds	r3, #32
 8008c2c:	61ea      	str	r2, [r5, #28]
 8008c2e:	3418      	adds	r4, #24
 8008c30:	e7d5      	b.n	8008bde <_realloc_r+0x12a>
 8008c32:	0021      	movs	r1, r4
 8008c34:	0038      	movs	r0, r7
 8008c36:	f7ff ff15 	bl	8008a64 <memmove>
 8008c3a:	e7d6      	b.n	8008bea <_realloc_r+0x136>
 8008c3c:	9a01      	ldr	r2, [sp, #4]
 8008c3e:	42b2      	cmp	r2, r6
 8008c40:	dc50      	bgt.n	8008ce4 <_realloc_r+0x230>
 8008c42:	0028      	movs	r0, r5
 8008c44:	68da      	ldr	r2, [r3, #12]
 8008c46:	689b      	ldr	r3, [r3, #8]
 8008c48:	3008      	adds	r0, #8
 8008c4a:	60da      	str	r2, [r3, #12]
 8008c4c:	6093      	str	r3, [r2, #8]
 8008c4e:	68aa      	ldr	r2, [r5, #8]
 8008c50:	68eb      	ldr	r3, [r5, #12]
 8008c52:	60d3      	str	r3, [r2, #12]
 8008c54:	609a      	str	r2, [r3, #8]
 8008c56:	9a03      	ldr	r2, [sp, #12]
 8008c58:	3a04      	subs	r2, #4
 8008c5a:	2a24      	cmp	r2, #36	; 0x24
 8008c5c:	d83e      	bhi.n	8008cdc <_realloc_r+0x228>
 8008c5e:	2a13      	cmp	r2, #19
 8008c60:	d907      	bls.n	8008c72 <_realloc_r+0x1be>
 8008c62:	6823      	ldr	r3, [r4, #0]
 8008c64:	60ab      	str	r3, [r5, #8]
 8008c66:	6863      	ldr	r3, [r4, #4]
 8008c68:	60eb      	str	r3, [r5, #12]
 8008c6a:	2a1b      	cmp	r2, #27
 8008c6c:	d824      	bhi.n	8008cb8 <_realloc_r+0x204>
 8008c6e:	3408      	adds	r4, #8
 8008c70:	3008      	adds	r0, #8
 8008c72:	6823      	ldr	r3, [r4, #0]
 8008c74:	6003      	str	r3, [r0, #0]
 8008c76:	6863      	ldr	r3, [r4, #4]
 8008c78:	6043      	str	r3, [r0, #4]
 8008c7a:	68a3      	ldr	r3, [r4, #8]
 8008c7c:	6083      	str	r3, [r0, #8]
 8008c7e:	9b01      	ldr	r3, [sp, #4]
 8008c80:	6868      	ldr	r0, [r5, #4]
 8008c82:	1af4      	subs	r4, r6, r3
 8008c84:	2301      	movs	r3, #1
 8008c86:	19aa      	adds	r2, r5, r6
 8008c88:	4018      	ands	r0, r3
 8008c8a:	2c0f      	cmp	r4, #15
 8008c8c:	d800      	bhi.n	8008c90 <_realloc_r+0x1dc>
 8008c8e:	e0ae      	b.n	8008dee <_realloc_r+0x33a>
 8008c90:	9901      	ldr	r1, [sp, #4]
 8008c92:	9e01      	ldr	r6, [sp, #4]
 8008c94:	1869      	adds	r1, r5, r1
 8008c96:	4330      	orrs	r0, r6
 8008c98:	431c      	orrs	r4, r3
 8008c9a:	6068      	str	r0, [r5, #4]
 8008c9c:	604c      	str	r4, [r1, #4]
 8008c9e:	6850      	ldr	r0, [r2, #4]
 8008ca0:	3108      	adds	r1, #8
 8008ca2:	4303      	orrs	r3, r0
 8008ca4:	6053      	str	r3, [r2, #4]
 8008ca6:	9802      	ldr	r0, [sp, #8]
 8008ca8:	f7fd fe9e 	bl	80069e8 <_free_r>
 8008cac:	9802      	ldr	r0, [sp, #8]
 8008cae:	3508      	adds	r5, #8
 8008cb0:	f7fe fa1a 	bl	80070e8 <__malloc_unlock>
 8008cb4:	002f      	movs	r7, r5
 8008cb6:	e707      	b.n	8008ac8 <_realloc_r+0x14>
 8008cb8:	68a3      	ldr	r3, [r4, #8]
 8008cba:	612b      	str	r3, [r5, #16]
 8008cbc:	68e3      	ldr	r3, [r4, #12]
 8008cbe:	616b      	str	r3, [r5, #20]
 8008cc0:	2a24      	cmp	r2, #36	; 0x24
 8008cc2:	d003      	beq.n	8008ccc <_realloc_r+0x218>
 8008cc4:	0028      	movs	r0, r5
 8008cc6:	3410      	adds	r4, #16
 8008cc8:	3018      	adds	r0, #24
 8008cca:	e7d2      	b.n	8008c72 <_realloc_r+0x1be>
 8008ccc:	0028      	movs	r0, r5
 8008cce:	6923      	ldr	r3, [r4, #16]
 8008cd0:	3020      	adds	r0, #32
 8008cd2:	61ab      	str	r3, [r5, #24]
 8008cd4:	6963      	ldr	r3, [r4, #20]
 8008cd6:	3418      	adds	r4, #24
 8008cd8:	61eb      	str	r3, [r5, #28]
 8008cda:	e7ca      	b.n	8008c72 <_realloc_r+0x1be>
 8008cdc:	0021      	movs	r1, r4
 8008cde:	f7ff fec1 	bl	8008a64 <memmove>
 8008ce2:	e7cc      	b.n	8008c7e <_realloc_r+0x1ca>
 8008ce4:	9b01      	ldr	r3, [sp, #4]
 8008ce6:	42bb      	cmp	r3, r7
 8008ce8:	dc31      	bgt.n	8008d4e <_realloc_r+0x29a>
 8008cea:	0028      	movs	r0, r5
 8008cec:	68aa      	ldr	r2, [r5, #8]
 8008cee:	68eb      	ldr	r3, [r5, #12]
 8008cf0:	3008      	adds	r0, #8
 8008cf2:	60d3      	str	r3, [r2, #12]
 8008cf4:	609a      	str	r2, [r3, #8]
 8008cf6:	9a03      	ldr	r2, [sp, #12]
 8008cf8:	3a04      	subs	r2, #4
 8008cfa:	2a24      	cmp	r2, #36	; 0x24
 8008cfc:	d823      	bhi.n	8008d46 <_realloc_r+0x292>
 8008cfe:	2a13      	cmp	r2, #19
 8008d00:	d907      	bls.n	8008d12 <_realloc_r+0x25e>
 8008d02:	6823      	ldr	r3, [r4, #0]
 8008d04:	60ab      	str	r3, [r5, #8]
 8008d06:	6863      	ldr	r3, [r4, #4]
 8008d08:	60eb      	str	r3, [r5, #12]
 8008d0a:	2a1b      	cmp	r2, #27
 8008d0c:	d809      	bhi.n	8008d22 <_realloc_r+0x26e>
 8008d0e:	3408      	adds	r4, #8
 8008d10:	3008      	adds	r0, #8
 8008d12:	6823      	ldr	r3, [r4, #0]
 8008d14:	6003      	str	r3, [r0, #0]
 8008d16:	6863      	ldr	r3, [r4, #4]
 8008d18:	6043      	str	r3, [r0, #4]
 8008d1a:	68a3      	ldr	r3, [r4, #8]
 8008d1c:	6083      	str	r3, [r0, #8]
 8008d1e:	003e      	movs	r6, r7
 8008d20:	e7ad      	b.n	8008c7e <_realloc_r+0x1ca>
 8008d22:	68a3      	ldr	r3, [r4, #8]
 8008d24:	612b      	str	r3, [r5, #16]
 8008d26:	68e3      	ldr	r3, [r4, #12]
 8008d28:	616b      	str	r3, [r5, #20]
 8008d2a:	2a24      	cmp	r2, #36	; 0x24
 8008d2c:	d003      	beq.n	8008d36 <_realloc_r+0x282>
 8008d2e:	0028      	movs	r0, r5
 8008d30:	3410      	adds	r4, #16
 8008d32:	3018      	adds	r0, #24
 8008d34:	e7ed      	b.n	8008d12 <_realloc_r+0x25e>
 8008d36:	0028      	movs	r0, r5
 8008d38:	6923      	ldr	r3, [r4, #16]
 8008d3a:	3020      	adds	r0, #32
 8008d3c:	61ab      	str	r3, [r5, #24]
 8008d3e:	6963      	ldr	r3, [r4, #20]
 8008d40:	3418      	adds	r4, #24
 8008d42:	61eb      	str	r3, [r5, #28]
 8008d44:	e7e5      	b.n	8008d12 <_realloc_r+0x25e>
 8008d46:	0021      	movs	r1, r4
 8008d48:	f7ff fe8c 	bl	8008a64 <memmove>
 8008d4c:	e7e7      	b.n	8008d1e <_realloc_r+0x26a>
 8008d4e:	9905      	ldr	r1, [sp, #20]
 8008d50:	9802      	ldr	r0, [sp, #8]
 8008d52:	f7fd ff99 	bl	8006c88 <_malloc_r>
 8008d56:	1e07      	subs	r7, r0, #0
 8008d58:	d100      	bne.n	8008d5c <_realloc_r+0x2a8>
 8008d5a:	e754      	b.n	8008c06 <_realloc_r+0x152>
 8008d5c:	0023      	movs	r3, r4
 8008d5e:	2201      	movs	r2, #1
 8008d60:	3b08      	subs	r3, #8
 8008d62:	685b      	ldr	r3, [r3, #4]
 8008d64:	4393      	bics	r3, r2
 8008d66:	9a04      	ldr	r2, [sp, #16]
 8008d68:	18d3      	adds	r3, r2, r3
 8008d6a:	0002      	movs	r2, r0
 8008d6c:	3a08      	subs	r2, #8
 8008d6e:	4293      	cmp	r3, r2
 8008d70:	d105      	bne.n	8008d7e <_realloc_r+0x2ca>
 8008d72:	685e      	ldr	r6, [r3, #4]
 8008d74:	2303      	movs	r3, #3
 8008d76:	439e      	bics	r6, r3
 8008d78:	9b03      	ldr	r3, [sp, #12]
 8008d7a:	18f6      	adds	r6, r6, r3
 8008d7c:	e6fd      	b.n	8008b7a <_realloc_r+0xc6>
 8008d7e:	9a03      	ldr	r2, [sp, #12]
 8008d80:	3a04      	subs	r2, #4
 8008d82:	2a24      	cmp	r2, #36	; 0x24
 8008d84:	d82d      	bhi.n	8008de2 <_realloc_r+0x32e>
 8008d86:	2a13      	cmp	r2, #19
 8008d88:	d928      	bls.n	8008ddc <_realloc_r+0x328>
 8008d8a:	6823      	ldr	r3, [r4, #0]
 8008d8c:	6003      	str	r3, [r0, #0]
 8008d8e:	6863      	ldr	r3, [r4, #4]
 8008d90:	6043      	str	r3, [r0, #4]
 8008d92:	2a1b      	cmp	r2, #27
 8008d94:	d80e      	bhi.n	8008db4 <_realloc_r+0x300>
 8008d96:	0022      	movs	r2, r4
 8008d98:	0003      	movs	r3, r0
 8008d9a:	3208      	adds	r2, #8
 8008d9c:	3308      	adds	r3, #8
 8008d9e:	6811      	ldr	r1, [r2, #0]
 8008da0:	6019      	str	r1, [r3, #0]
 8008da2:	6851      	ldr	r1, [r2, #4]
 8008da4:	6059      	str	r1, [r3, #4]
 8008da6:	6892      	ldr	r2, [r2, #8]
 8008da8:	609a      	str	r2, [r3, #8]
 8008daa:	0021      	movs	r1, r4
 8008dac:	9802      	ldr	r0, [sp, #8]
 8008dae:	f7fd fe1b 	bl	80069e8 <_free_r>
 8008db2:	e728      	b.n	8008c06 <_realloc_r+0x152>
 8008db4:	68a3      	ldr	r3, [r4, #8]
 8008db6:	6083      	str	r3, [r0, #8]
 8008db8:	68e3      	ldr	r3, [r4, #12]
 8008dba:	60c3      	str	r3, [r0, #12]
 8008dbc:	2a24      	cmp	r2, #36	; 0x24
 8008dbe:	d004      	beq.n	8008dca <_realloc_r+0x316>
 8008dc0:	0022      	movs	r2, r4
 8008dc2:	0003      	movs	r3, r0
 8008dc4:	3210      	adds	r2, #16
 8008dc6:	3310      	adds	r3, #16
 8008dc8:	e7e9      	b.n	8008d9e <_realloc_r+0x2ea>
 8008dca:	6923      	ldr	r3, [r4, #16]
 8008dcc:	0022      	movs	r2, r4
 8008dce:	6103      	str	r3, [r0, #16]
 8008dd0:	0003      	movs	r3, r0
 8008dd2:	6961      	ldr	r1, [r4, #20]
 8008dd4:	3218      	adds	r2, #24
 8008dd6:	3318      	adds	r3, #24
 8008dd8:	6141      	str	r1, [r0, #20]
 8008dda:	e7e0      	b.n	8008d9e <_realloc_r+0x2ea>
 8008ddc:	0003      	movs	r3, r0
 8008dde:	0022      	movs	r2, r4
 8008de0:	e7dd      	b.n	8008d9e <_realloc_r+0x2ea>
 8008de2:	0021      	movs	r1, r4
 8008de4:	f7ff fe3e 	bl	8008a64 <memmove>
 8008de8:	e7df      	b.n	8008daa <_realloc_r+0x2f6>
 8008dea:	9e03      	ldr	r6, [sp, #12]
 8008dec:	e6c5      	b.n	8008b7a <_realloc_r+0xc6>
 8008dee:	4306      	orrs	r6, r0
 8008df0:	606e      	str	r6, [r5, #4]
 8008df2:	6851      	ldr	r1, [r2, #4]
 8008df4:	430b      	orrs	r3, r1
 8008df6:	6053      	str	r3, [r2, #4]
 8008df8:	e758      	b.n	8008cac <_realloc_r+0x1f8>
 8008dfa:	46c0      	nop			; (mov r8, r8)
 8008dfc:	2000043c 	.word	0x2000043c

08008e00 <__swbuf_r>:
 8008e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e02:	0006      	movs	r6, r0
 8008e04:	000d      	movs	r5, r1
 8008e06:	0014      	movs	r4, r2
 8008e08:	2800      	cmp	r0, #0
 8008e0a:	d004      	beq.n	8008e16 <__swbuf_r+0x16>
 8008e0c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008e0e:	2b00      	cmp	r3, #0
 8008e10:	d101      	bne.n	8008e16 <__swbuf_r+0x16>
 8008e12:	f7fd fd57 	bl	80068c4 <__sinit>
 8008e16:	69a3      	ldr	r3, [r4, #24]
 8008e18:	60a3      	str	r3, [r4, #8]
 8008e1a:	89a3      	ldrh	r3, [r4, #12]
 8008e1c:	071b      	lsls	r3, r3, #28
 8008e1e:	d52e      	bpl.n	8008e7e <__swbuf_r+0x7e>
 8008e20:	6923      	ldr	r3, [r4, #16]
 8008e22:	2b00      	cmp	r3, #0
 8008e24:	d02b      	beq.n	8008e7e <__swbuf_r+0x7e>
 8008e26:	230c      	movs	r3, #12
 8008e28:	5ee2      	ldrsh	r2, [r4, r3]
 8008e2a:	2380      	movs	r3, #128	; 0x80
 8008e2c:	019b      	lsls	r3, r3, #6
 8008e2e:	b2ef      	uxtb	r7, r5
 8008e30:	b2ed      	uxtb	r5, r5
 8008e32:	421a      	tst	r2, r3
 8008e34:	d02c      	beq.n	8008e90 <__swbuf_r+0x90>
 8008e36:	6823      	ldr	r3, [r4, #0]
 8008e38:	6922      	ldr	r2, [r4, #16]
 8008e3a:	1a98      	subs	r0, r3, r2
 8008e3c:	6963      	ldr	r3, [r4, #20]
 8008e3e:	4283      	cmp	r3, r0
 8008e40:	dc05      	bgt.n	8008e4e <__swbuf_r+0x4e>
 8008e42:	0021      	movs	r1, r4
 8008e44:	0030      	movs	r0, r6
 8008e46:	f7fd fcc7 	bl	80067d8 <_fflush_r>
 8008e4a:	2800      	cmp	r0, #0
 8008e4c:	d11d      	bne.n	8008e8a <__swbuf_r+0x8a>
 8008e4e:	68a3      	ldr	r3, [r4, #8]
 8008e50:	3001      	adds	r0, #1
 8008e52:	3b01      	subs	r3, #1
 8008e54:	60a3      	str	r3, [r4, #8]
 8008e56:	6823      	ldr	r3, [r4, #0]
 8008e58:	1c5a      	adds	r2, r3, #1
 8008e5a:	6022      	str	r2, [r4, #0]
 8008e5c:	701f      	strb	r7, [r3, #0]
 8008e5e:	6963      	ldr	r3, [r4, #20]
 8008e60:	4283      	cmp	r3, r0
 8008e62:	d004      	beq.n	8008e6e <__swbuf_r+0x6e>
 8008e64:	89a3      	ldrh	r3, [r4, #12]
 8008e66:	07db      	lsls	r3, r3, #31
 8008e68:	d507      	bpl.n	8008e7a <__swbuf_r+0x7a>
 8008e6a:	2d0a      	cmp	r5, #10
 8008e6c:	d105      	bne.n	8008e7a <__swbuf_r+0x7a>
 8008e6e:	0021      	movs	r1, r4
 8008e70:	0030      	movs	r0, r6
 8008e72:	f7fd fcb1 	bl	80067d8 <_fflush_r>
 8008e76:	2800      	cmp	r0, #0
 8008e78:	d107      	bne.n	8008e8a <__swbuf_r+0x8a>
 8008e7a:	0028      	movs	r0, r5
 8008e7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008e7e:	0021      	movs	r1, r4
 8008e80:	0030      	movs	r0, r6
 8008e82:	f7fc fd27 	bl	80058d4 <__swsetup_r>
 8008e86:	2800      	cmp	r0, #0
 8008e88:	d0cd      	beq.n	8008e26 <__swbuf_r+0x26>
 8008e8a:	2501      	movs	r5, #1
 8008e8c:	426d      	negs	r5, r5
 8008e8e:	e7f4      	b.n	8008e7a <__swbuf_r+0x7a>
 8008e90:	4313      	orrs	r3, r2
 8008e92:	81a3      	strh	r3, [r4, #12]
 8008e94:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008e96:	4b02      	ldr	r3, [pc, #8]	; (8008ea0 <__swbuf_r+0xa0>)
 8008e98:	4013      	ands	r3, r2
 8008e9a:	6663      	str	r3, [r4, #100]	; 0x64
 8008e9c:	e7cb      	b.n	8008e36 <__swbuf_r+0x36>
 8008e9e:	46c0      	nop			; (mov r8, r8)
 8008ea0:	ffffdfff 	.word	0xffffdfff

08008ea4 <_wcrtomb_r>:
 8008ea4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008ea6:	001d      	movs	r5, r3
 8008ea8:	4b09      	ldr	r3, [pc, #36]	; (8008ed0 <_wcrtomb_r+0x2c>)
 8008eaa:	0004      	movs	r4, r0
 8008eac:	33e0      	adds	r3, #224	; 0xe0
 8008eae:	681e      	ldr	r6, [r3, #0]
 8008eb0:	002b      	movs	r3, r5
 8008eb2:	2900      	cmp	r1, #0
 8008eb4:	d101      	bne.n	8008eba <_wcrtomb_r+0x16>
 8008eb6:	000a      	movs	r2, r1
 8008eb8:	a901      	add	r1, sp, #4
 8008eba:	0020      	movs	r0, r4
 8008ebc:	47b0      	blx	r6
 8008ebe:	1c43      	adds	r3, r0, #1
 8008ec0:	d103      	bne.n	8008eca <_wcrtomb_r+0x26>
 8008ec2:	2300      	movs	r3, #0
 8008ec4:	602b      	str	r3, [r5, #0]
 8008ec6:	338a      	adds	r3, #138	; 0x8a
 8008ec8:	6023      	str	r3, [r4, #0]
 8008eca:	b004      	add	sp, #16
 8008ecc:	bd70      	pop	{r4, r5, r6, pc}
 8008ece:	46c0      	nop			; (mov r8, r8)
 8008ed0:	2000084c 	.word	0x2000084c

08008ed4 <__ascii_wctomb>:
 8008ed4:	0003      	movs	r3, r0
 8008ed6:	1e08      	subs	r0, r1, #0
 8008ed8:	d005      	beq.n	8008ee6 <__ascii_wctomb+0x12>
 8008eda:	2aff      	cmp	r2, #255	; 0xff
 8008edc:	d904      	bls.n	8008ee8 <__ascii_wctomb+0x14>
 8008ede:	228a      	movs	r2, #138	; 0x8a
 8008ee0:	2001      	movs	r0, #1
 8008ee2:	601a      	str	r2, [r3, #0]
 8008ee4:	4240      	negs	r0, r0
 8008ee6:	4770      	bx	lr
 8008ee8:	2001      	movs	r0, #1
 8008eea:	700a      	strb	r2, [r1, #0]
 8008eec:	e7fb      	b.n	8008ee6 <__ascii_wctomb+0x12>

08008eee <abort>:
 8008eee:	2006      	movs	r0, #6
 8008ef0:	b510      	push	{r4, lr}
 8008ef2:	f000 f82f 	bl	8008f54 <raise>
 8008ef6:	2001      	movs	r0, #1
 8008ef8:	f7f9 fb0c 	bl	8002514 <_exit>

08008efc <_raise_r>:
 8008efc:	b570      	push	{r4, r5, r6, lr}
 8008efe:	0004      	movs	r4, r0
 8008f00:	000d      	movs	r5, r1
 8008f02:	291f      	cmp	r1, #31
 8008f04:	d904      	bls.n	8008f10 <_raise_r+0x14>
 8008f06:	2316      	movs	r3, #22
 8008f08:	6003      	str	r3, [r0, #0]
 8008f0a:	2001      	movs	r0, #1
 8008f0c:	4240      	negs	r0, r0
 8008f0e:	bd70      	pop	{r4, r5, r6, pc}
 8008f10:	23b7      	movs	r3, #183	; 0xb7
 8008f12:	009b      	lsls	r3, r3, #2
 8008f14:	58c3      	ldr	r3, [r0, r3]
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	d004      	beq.n	8008f24 <_raise_r+0x28>
 8008f1a:	008a      	lsls	r2, r1, #2
 8008f1c:	189b      	adds	r3, r3, r2
 8008f1e:	681a      	ldr	r2, [r3, #0]
 8008f20:	2a00      	cmp	r2, #0
 8008f22:	d108      	bne.n	8008f36 <_raise_r+0x3a>
 8008f24:	0020      	movs	r0, r4
 8008f26:	f000 f831 	bl	8008f8c <_getpid_r>
 8008f2a:	002a      	movs	r2, r5
 8008f2c:	0001      	movs	r1, r0
 8008f2e:	0020      	movs	r0, r4
 8008f30:	f000 f81a 	bl	8008f68 <_kill_r>
 8008f34:	e7eb      	b.n	8008f0e <_raise_r+0x12>
 8008f36:	2000      	movs	r0, #0
 8008f38:	2a01      	cmp	r2, #1
 8008f3a:	d0e8      	beq.n	8008f0e <_raise_r+0x12>
 8008f3c:	1c51      	adds	r1, r2, #1
 8008f3e:	d103      	bne.n	8008f48 <_raise_r+0x4c>
 8008f40:	2316      	movs	r3, #22
 8008f42:	3001      	adds	r0, #1
 8008f44:	6023      	str	r3, [r4, #0]
 8008f46:	e7e2      	b.n	8008f0e <_raise_r+0x12>
 8008f48:	2400      	movs	r4, #0
 8008f4a:	0028      	movs	r0, r5
 8008f4c:	601c      	str	r4, [r3, #0]
 8008f4e:	4790      	blx	r2
 8008f50:	0020      	movs	r0, r4
 8008f52:	e7dc      	b.n	8008f0e <_raise_r+0x12>

08008f54 <raise>:
 8008f54:	b510      	push	{r4, lr}
 8008f56:	4b03      	ldr	r3, [pc, #12]	; (8008f64 <raise+0x10>)
 8008f58:	0001      	movs	r1, r0
 8008f5a:	6818      	ldr	r0, [r3, #0]
 8008f5c:	f7ff ffce 	bl	8008efc <_raise_r>
 8008f60:	bd10      	pop	{r4, pc}
 8008f62:	46c0      	nop			; (mov r8, r8)
 8008f64:	2000000c 	.word	0x2000000c

08008f68 <_kill_r>:
 8008f68:	2300      	movs	r3, #0
 8008f6a:	b570      	push	{r4, r5, r6, lr}
 8008f6c:	4d06      	ldr	r5, [pc, #24]	; (8008f88 <_kill_r+0x20>)
 8008f6e:	0004      	movs	r4, r0
 8008f70:	0008      	movs	r0, r1
 8008f72:	0011      	movs	r1, r2
 8008f74:	602b      	str	r3, [r5, #0]
 8008f76:	f7f9 fac5 	bl	8002504 <_kill>
 8008f7a:	1c43      	adds	r3, r0, #1
 8008f7c:	d103      	bne.n	8008f86 <_kill_r+0x1e>
 8008f7e:	682b      	ldr	r3, [r5, #0]
 8008f80:	2b00      	cmp	r3, #0
 8008f82:	d000      	beq.n	8008f86 <_kill_r+0x1e>
 8008f84:	6023      	str	r3, [r4, #0]
 8008f86:	bd70      	pop	{r4, r5, r6, pc}
 8008f88:	20000ae4 	.word	0x20000ae4

08008f8c <_getpid_r>:
 8008f8c:	b510      	push	{r4, lr}
 8008f8e:	f7f9 fab7 	bl	8002500 <_getpid>
 8008f92:	bd10      	pop	{r4, pc}

08008f94 <_init>:
 8008f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f96:	46c0      	nop			; (mov r8, r8)
 8008f98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008f9a:	bc08      	pop	{r3}
 8008f9c:	469e      	mov	lr, r3
 8008f9e:	4770      	bx	lr

08008fa0 <_fini>:
 8008fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008fa2:	46c0      	nop			; (mov r8, r8)
 8008fa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008fa6:	bc08      	pop	{r3}
 8008fa8:	469e      	mov	lr, r3
 8008faa:	4770      	bx	lr
